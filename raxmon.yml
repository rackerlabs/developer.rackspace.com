# This is a temporary playbook to test out the monitoring bits.
#
# Don't merge while this is still here!
---
- hosts: all
  connection: local
  gather_facts: false
  tasks:

  - name: create a monitoring entity
    rax_mon_entity:
      credentials: ~/.rackspace_cloud_credentials
      name: entilicious
      named_ip_addresses:
        azurefire: 162.242.253.70
      metadata:
        hurf: durf
    register: ent

  - name: add a check
    rax_mon_check:
      credentials: ~/.rackspace_cloud_credentials
      entity_id: "{{ ent['entity']['id'] }}"
      label: pinger
      check_type: remote.ping
      monitoring_zones_poll: mziad
      target_alias: azurefire
      disabled: no
    register: checkeroo

  - name: create a notification
    rax_mon_notification:
      credentials: ~/.rackspace_cloud_credentials
      label: callme
      notification_type: email
      details:
        address: smashwilson@gmail.com
      state: present
    register: callme

  - name: create a notification plan
    rax_mon_notification_plan:
      credentials: ~/.rackspace_cloud_credentials
      label: defcon1
      critical_state:
      - "{{ callme['notification']['id'] }}"
      state: present
    register: defcon1

  - name: create an alarm
    rax_mon_alarm:
      credentials: ~/.rackspace_cloud_credentials
      label: ohnooo
      entity_id: "{{ ent['entity']['id'] }}"
      check_id: "{{ checkeroo['check']['id'] }}"
      notification_plan_id: "{{ defcon1['notification_plan']['id'] }}"
      criteria: if (rate(metric['average']) > 10) { return new AlarmStatus(CRITICAL); } return new AlarmStatus(OK);
