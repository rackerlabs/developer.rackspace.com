---
- name: Provision staging web setup
  hosts: local
  connection: local
  vars_files:
  - vars.yml
  - [ 'secrets.yml', 'secrets.vault.yml' ]
  tasks:

    - name: Provision staging web load balancer
      rax_clb:
        credentials: ~/.rackspace_cloud_credentials
        name: "{{ deployment_region }}_{{ server_name }}"
        port: 80
        protocol: HTTP
        algorithm: ROUND_ROBIN
        type: PUBLIC
        timeout: 30
        region: "{{ deployment_region }}"
        ssl_termination:
          private_key: "{{ staging_ssl_key }}"
          certificate: "{{ staging_ssl_certificate }}"
          secure_traffic_only: yes
        https_redirect: yes
        wait: yes
        state: present
      register: clb_staging

    # This is a workaround for the rax_clb module not supporting access list
    # manipulation.
    - name: Apply the whitelist to the staging load balancer.
      command: "../script/lockclb '{{ deployment_region }}_{{ server_name }}' '{{ ip_accesses }}'"

    - name: Provision 2 staging web servers
      rax:
        credentials: ~/.rackspace_cloud_credentials
        name: "{{ deployment_region }}_staging_webserver_%01d"
        flavor: general1-1
        image: ubuntu-1204-lts-precise-pangolin-pv
        networks:
          - public
          - private
        region: "{{ deployment_region }}"
        state: present
        count: 2
        exact_count: yes
        group: staging_webservers
        wait: yes
        key_name: drg
      register: rax_staging

    - name: Add web servers to load balancer
      rax_clb_nodes:
        credentials: ~/.rackspace_cloud_credentials
        load_balancer_id: "{{ clb_staging.balancer.id }}"
        address: "{{ item.rax_networks.private|first }}"
        port: 80
        condition: enabled
        type: primary
        wait: yes
        region: "{{ deployment_region }}"
      with_items: rax_staging.success
      when: rax_staging.action == 'create'

    - name: Add web servers to staging webservers host group
      add_host:
        hostname: "{{ item.name }}"
        ansible_ssh_host: "{{ item.rax_accessipv4 }}"
        groupname: staging_webservers
      with_items: rax_staging.success
      when: rax_staging.action == 'create'

    - name: Ensure the CDN container exists
      rax_files:
        username: "{{ rackspace_username }}"
        api_key: "{{ rackspace_apikey }}"
        region: "{{ common_region }}"
        container: "{{ staging_container }}"
        state: present
        ttl: "{{ cdn_ttl }}"
        public: yes

- name: Configure web server(s)
  hosts: staging_webservers
  remote_user: root
  vars_files:
  - vars.yml
  - [ 'secrets.yml', 'secrets.vault.yml' ]
  vars:
    docroot: /var/www/html/developer.rackspace.com
    backendroot: /var/webapp/drc-backend
    mailgun_domain: "{{ staging_mailgun_domain }}"
    sponsorship_notification_email: "{{ staging_sponsorship_notification_email }}"
    sponsorship_container: "{{ staging_sponsorship_container }}"
    mongodb_connection_url: "{{ staging_mongodb_connection_url }}"
  roles:
    - webserver
    - lockboxweb
    - editors
    - bennojoy.nginx
