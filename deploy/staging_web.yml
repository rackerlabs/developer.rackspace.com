---
- name: Provision staging web setup
  hosts: local
  connection: local
  vars_files:
  - vars.yml
  - [ 'secrets.yml', 'secrets.staging.yml' ]
  tasks:

    - name: Provision staging web load balancer
      rax_clb:
        credentials: ~/.rackspace_cloud_credentials
        name: "{{ server_name }}"
        port: 80
        protocol: HTTP
        algorithm: ROUND_ROBIN
        type: PUBLIC
        timeout: 30
        region: "{{ lookup('env', 'RAX_REGION') | upper }}"
        ssl_termination:
          private_key: "{{ staging_ssl_key }}"
          certificate: "{{ staging_ssl_certificate }}"
          secure_traffic_only: yes
        https_redirect: yes
        wait: yes
        state: present
      register: clb_staging

    # This is a workaround for the rax_clb module not supporting access list
    # manipulation.
    - name: Apply the whitelist to the staging load balancer.
      command: "../script/lockclb '{{ server_name }}'"

    - name: Provision 2 staging web servers
      rax:
        credentials: ~/.rackspace_cloud_credentials
        name: "staging_webserver_%01d"
        flavor: performance1-1
        image: ubuntu-1204-lts-precise-pangolin
        networks:
          - public
          - private
        region: "{{ lookup('env', 'RAX_REGION') | upper }}"
        state: present
        count: 2
        exact_count: yes
        group: staging_webservers
        wait: yes
        key_name: drg
      register: rax_staging

    - name: Add web servers to load balancer
      rax_clb_nodes:
        credentials: ~/.rackspace_cloud_credentials
        load_balancer_id: "{{ clb_staging.balancer.id }}"
        address: "{{ item.rax_networks.private|first }}"
        port: 80
        condition: enabled
        type: primary
        wait: yes
        region: "{{ common_region }}"
      with_items: rax_staging.success
      when: rax_staging.action == 'create'

    - name: Add web servers to staging webservers host group
      add_host:
        hostname: "{{ item.name }}"
        ansible_ssh_host: "{{ item.rax_accessipv4 }}"
        groupname: staging_webservers
      with_items: rax_staging.success
      when: rax_staging.action == 'create'

    - name: Ensure the CDN container exists
      rax_files:
        username: "{{ rackspace_username }}"
        api_key: "{{ rackspace_apikey }}"
        region: "{{ common_region }}"
        container: "{{ staging_container }}"
        state: present
        ttl: "{{ cdn_ttl }}"
        public: yes

- name: Configure web server(s)
  hosts: staging_webservers
  remote_user: root
  vars_files:
  - ip_access.yml
  - vars.yml
  - [ 'secrets.yml', 'secrets.staging.yml' ]
  roles:
    - webserver
    - lockboxweb
    - role: bennojoy.nginx
      nginx_http_params:
        sendfile: "on"
        access_log: /var/log/nginx/access.log
        client_max_body_size: 50m
      nginx_sites:
      - server:
          gzip_static: "on"
          file_name: developer.rackspace.com
          listen: 80
          server_name: "{{ server_name }}"
          root: "{{ docroot }}"
          gzip: "on"
          gzip_min_length: 1400
          gzip_types: text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript
          gzip_vary: "on"
          gzip_proxied: any
          location1:
            name: /api
            proxy_pass: http://127.0.0.1:8111
          location2:
            name: /blog/index.html
          location3:
            name: /blog
            rewrite: "^/blog/([^/]+)\\.html$ /blog/$1/ permanent"
          location4:
            name: /devtrial
            rewrite: "^/devtrial /developer-plus/signup/ permanent"
          location5:
            name: /signup
            rewrite: "^/signup /developer-plus/signup/ redirect"
