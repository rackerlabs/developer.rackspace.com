#
# TODO:
# - Configure slaves (keeping in mind that they will need some of the same files as master)
# - Configure master to talk to slaves (on private network)
#
---
- name: Provision Jenkins setup
  hosts: local
  vars_files:
  - vars.yml
  - [ 'secrets.yml', 'secrets.vault.yml' ]
  connection: local
  gather_facts: False
  tasks:

    - name: Provision jenkins master server
      rax:
        credentials: ~/.rackspace_cloud_credentials
        name: "{{ deployment_region }}_jenkins_master_%01d"
        flavor: general1-4
        image: ubuntu-1204-lts-precise-pangolin-pv
        networks:
          - public
          - private
        region: "{{ deployment_region }}"
        state: present
        count: 1
        exact_count: yes
        group: jenkins_masters
        wait: yes
        key_name: drg
      register: rax_jenkins

    - name: Add master server to jenkins_masters host group
      add_host:
        hostname: "{{ item.name }}"
        ansible_ssh_host: "{{ item.rax_accessipv4 }}"
        groupname: jenkins_masters
      with_items: rax_jenkins.success
      when: rax_jenkins.action == 'create'

# We gather facts about the production and staging web servers in the
# same region (as the jenkins server(s)) so the 'build_site' Jenkins job
# can be properly configured to publish content to the right web server hosts.

- name: Gather info about production web servers in same region
  hosts: prod_webservers
  gather_facts: True

- name: Gather info about staging web servers in same region
  hosts: staging_webservers
  gather_facts: True

- name: Gather facts about the Cloud Files containers in same region
  hosts: local
  connection: local
  vars_files:
  - vars.yml
  - [ 'secrets.yml', 'secrets.vault.yml' ]
  gather_facts: False
  tasks:

  - name: Production CDN container
    rax_files:
      username: "{{ rackspace_username }}"
      api_key: "{{ rackspace_apikey }}"
      container: "{{ production_container }}"
      state: present
      public: yes
      ttl: "{{ cdn_ttl }}"
      region: "{{ common_region }}"
    register: rax_prod_container

  - name: Staging CDN container
    rax_files:
      username: "{{ rackspace_username }}"
      api_key: "{{ rackspace_apikey }}"
      container: "{{ staging_container }}"
      state: present
      public: yes
      ttl: "{{ cdn_ttl }}"
      region: "{{ common_region }}"
    register: rax_staging_container

- name: Configure jenkins master server(s)
  hosts: jenkins_masters
  vars_files:
  - vars.yml
  - [ 'secrets.yml', 'secrets.vault.yml' ]
  sudo: yes
  vars:
    plugins:
    - 'github'
    startup_delay_s: 30
    prod_container_url: https://c2a32ff18d23c8f567f0-e44b0df73868b5d567b1e58e01681d15.ssl.cf5.rackcdn.com/
    staging_container_url: https://208bc4db91728f6bb01b-30750b19900aa246ab67cafd6fbe1ddd.ssl.cf5.rackcdn.com/
    # prod_container_url: "{{ hostvars['localhost'].rax_prod_container.container_urls.ssl_url }}"
    # staging_container_url: "{{ hostvars['localhost'].rax_staging_container.container_urls.ssl_url }}"
  roles:
    - ICTO.ansible-jenkins
    - jenkins_master
    - jekyll
    - sphinx
    - editors
    - role: bennojoy.nginx
      nginx_http_params:
        server_tokens: "off"
        more_set_headers: '"Server: Nintendo WiiOS; Server 1.up"'
      nginx_sites:
      - server:
          file_name: jenkins_proxy
          listen: 80
          location1:
            name: /
            proxy_set_header: "X-Forwarded-For $proxy_add_x_forwarded_for"
            proxy_set_header: "Host $http_host"
            proxy_pass: http://127.0.0.1:8080
