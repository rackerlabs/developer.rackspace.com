#
# TODO:
# - Configure slaves (keeping in mind that they will need some of the same files as master)
# - Configure master to talk to slaves (on private network)
#
---
- name: Provision Jenkins setup
  hosts: local
  vars_files:
    - ip_access.yml
  connection: local
  gather_facts: False
  tasks:

    - name: Provision jenkins master server
      rax:
        credentials: ~/.rackspace_cloud_credentials
        name: jenkins_master_%01d
        flavor: performance1-4
        image: ubuntu-1204-lts-precise-pangolin
        networks:
          - public
          - private
        region: "{{ lookup('env', 'RAX_REGION') | upper }}"
        state: present
        count: 1
        exact_count: yes
        group: jenkins_masters
        wait: yes
        key_name: drg
      register: rax_jenkins

    - name: Add master server to jenkins_masters host group
      add_host:
        hostname: "{{ item.name }}"
        ansible_ssh_host: "{{ item.rax_accessipv4 }}"
        groupname: jenkins_masters
      with_items: rax_jenkins.success
      when: rax_jenkins.action == 'create'

# We gather facts about the production and staging web servers in the
# same region (as the jenkins server(s)) so the 'build_site' Jenkins job
# can be properly configured to publish content to the right web server hosts.

- name: Gather info about production web servers in same region
  hosts: prod_webservers
  gather_facts: True

- name: Gather info about staging web servers in same region
  hosts: staging_webservers
  gather_facts: True

- name: Configure jenkins master server(s)
  hosts: jenkins_masters
  vars_files:
    - ip_access.yml
  sudo: yes
  vars:
  - plugins:
    - 'github'
  - startup_delay_s: 30
  roles:
    - ICTO.ansible-jenkins
    - jenkins_masters
    - jekyll
    - sphinx
