<?xml version="1.0" encoding="utf-8"?>
<!-- (C) 2012-2013 OpenStack Foundation, All Rights Reserved -->
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entites with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent os-image-2.0.wadl               -->
<!--*******************************************************-->
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <wadl:grammars xmlns:db="http://docbook.org/ns/docbook"
                  xmlns="http://wadl.dev.java.net/2009/02">
      <wadl:include href="49990-image-2.0-xsd-1.xsd"/>
      <wadl:include href="49990-image-2.0-xsd-2.xsd"/>
      <wadl:include href="49990-image-2.0-xsd-3.xsd"/>
   </wadl:grammars>

    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->
    <!--<resources base="https://glance.example.com/" xml:id="images-v2">-->
    <resources xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
              xmlns:atom="http://www.w3.org/2005/Atom"
              xmlns:csapi="http://docs.openstack.org/compute/api/v2"
              xmlns:common="http://docs.openstack.org/common/api/v1.0"
              xmlns="http://wadl.dev.java.net/2009/02"
              base="https://ord.images.api.rackspacecloud.com/"
              xml:id="images-v2">
        <!--<resource id="info" path=" ">-->
        <!--<param name="X-Auth-Token" style="header" type="xsd:string" required="true">
                    <doc>A valid authentication token</doc>
                </param>-->
        <!--Brain asked to not include this-->
        <resource id="Images" path="images">
         <method name="GET" rax:id="listImages">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List images">
               <para role="shortdesc">Lists public virtual machine (VM) images.</para>
               <para>This operation returns images you created, shared images that you accepted, and standard images. For more
                information about standard images, see <xref linkend="std-images"/>. The response conforms to the schema
                found in <xref linkend="GET_getImagesSchema_schemas_images_Schema_Calls"/>.</para>
               <para> This operation returns a subset of the larger collection of images and a link that you can use to get the
                next set of images. Always check for the presence of a <parameter>next</parameter> link and use it as the URI
                in a subsequent <command>GET</command> request. Follow this pattern until a <parameter>next</parameter> link is no longer
                provided. The next link preserves any query parameters that you send in your initial request. You can use the
                    <parameter>first</parameter> link to jump back to the first page of the collection. If you prefer to
                paginate through images manually, use the <parameter>limit</parameter> and <parameter>marker</parameter>
                parameters. </para>
               <para>The List Images operation accepts several types of query parameters that you can use to filter the results
                of the returned collection. </para>
               <para>A client can provide direct comparison filters by using most image attributes, such as
                    <code>name=Ubuntu</code>, <code>visibility=public</code>, and so on. A client cannot filter on tags or
                anything defined as a link in the json-schema, such as <parameter>self</parameter>,
                    <parameter>file</parameter>, or <parameter>schema</parameter>. </para>
               <para>You can use the <parameter>size_min</parameter> and <parameter>size_max</parameter> query parameters to
                perform greater-than and less-than filtering of images based on their <parameter>size</parameter> attribute.
                The size is measured in bytes and refers to the size of an image when it is stored on disk.</para>
               <para>For example, sending a <parameter>size_min</parameter> filter of 1048576 and size_max of 4194304 filters
                the container to include only images that are between 1 MB and 4 MB in size.</para>
               <para>You can sort the results of this operation by using the <parameter>sort_key</parameter> and
                    <parameter>sort_dir</parameter> parameters. The API uses the natural sorting of whatever image attribute
                is provided as the <parameter>sort_key</parameter>. </para>
               <note>
                  <para>Public images may reach end-of-life and be removed from the base image list. This
                    <link xlink:href="http://www.rackspace.com/knowledge_center/article/hidden-base-images">
                        Hidden Base Images article</link>
                    contains images which have been removed from the base images list but which may still be
                    available.</para>
               </note>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"> 
                  <param name="limit" style="query" required="false" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Requests a specific page size. Expect a response to a limited request to return between zero items
                        and the number specified. The typical pattern for using the <parameter>limit</parameter> and
                            <parameter>marker</parameter> parameters is to make an initial limited request and then to use
                        the ID of the last image from the response as the <parameter>marker</parameter> parameter in a
                        subsequent limited request.</para>
                     </wadl:doc>
                  </param>
                  <param name="marker" style="query" required="false" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specifies the ID of the last-seen image. The typical pattern for using the
                            <parameter>limit</parameter> and <parameter>marker</parameter> parameters is to make an initial
                        limited request and then to use the ID of the last image from the response as the
                            <parameter>marker</parameter> parameter in a subsequent limited request.</para>
                     </wadl:doc>
                  </param>
                  <param name="name" style="query" required="false" type="xsd:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that specifies the name of the image as a string.</para>
                     </wadl:doc>
                  </param>
                  <param name="visibility"
                         style="query"
                         required="false"
                         type="imageapi:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that specifies image visibility as either <code>public</code> or
                            <code>private</code>.</para>
                     </wadl:doc>
                  </param>
                  <param name="member_status"
                         style="query"
                         required="false"
                         type="imageapi:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that shows images with the specified member status. Valid values are
                            <code>accepted</code>, <code>pending</code>, <code>rejected</code>, and <code>all</code>. The
                        default is <code>accepted</code>.</para>
                     </wadl:doc>
                  </param>
                  <param name="owner"
                         style="query"
                         required="false"
                         type="imageapi:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that shows images shared with me by the specified tag.</para>
                     </wadl:doc>
                  </param>
                  <param name="tag"
                         style="query"
                         required="false"
                         type="imageapi:string">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that shows images with the specified tag, where the owner is indicated by tenant
                        ID.</para>
                     </wadl:doc>
                  </param>
                  <param name="status" style="query" required="false" type="xsd:int">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that species the image status as <code>queued</code>, <code>saving</code>,
                            <code>active</code>, <code>killed</code>, <code>deleted</code>, or
                        <code>pending_delete</code>.</para>
                     </wadl:doc>
                  </param>
                  <param name="size_min"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that specifies the minimum size of the image in bytes.</para>
                     </wadl:doc>
                  </param>
                  <param name="size_max"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Filter parameter that specifies the maximum size of the image in bytes.</para>
                     </wadl:doc>
                  </param>
                  <param name="sort_key"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Sort key. All image attributes can be used as the sort key, except <code>tags</code> and
                            <code>link</code> attributes. The default is <code>created_at</code>.</para>
                     </wadl:doc>
                  </param>
                  <param name="sort_dir"
                         style="query"
                         required="false"
                         type="xsd:string"
                         default="ALL">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Sort direction. Valid values are <code>asc</code> (ascending) and <code>desc</code> (descending).
                        The default is <code>desc</code>.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                           <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{
   "images":
   [
      {
         "id":"da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
         "name":"cirros-0.3.0-x86_64-uec-ramdisk",
         "status":"active",
         "visibility":"public",
         "size":2254249,
         "checksum":"2cec138d7dae2aa59038ef8c9aec2390",
         "tags":[
            "ping",
            "pong"
         ],
         "created_at":"2012-08-10T19:23:50Z",
         "updated_at":"2012-08-10T19:23:50Z",
         "self":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
         "file":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea/file",
         "schema":"/v2/schemas/image"},
      {
         "id":"0d5bcbc7-b066-4217-83f4-7111a60a399a",
         "name":"cirros-0.3.0-x86_64-uec",
         "status":"active",
         "visibility":"public",
         "size":25165824,
         "checksum":"2f81976cae15c16ef0010c51e3a6c163",
         "tags":[ ],
         "created_at":"2012-08-10T19:23:50Z",
         "updated_at":"2012-08-10T19:23:50Z",
         "self":"/v2/images/0d5bcbc7-b066-4217-83f4-7111a60a399a",
         "file":"/v2/images/0d5bcbc7-b066-4217-83f4-7111a60a399a/file",
         "schema":"/v2/schemas/image"},
      {
         "id":"e6421c88-b1ed-4407-8824-b57298249091",
         "name":"cirros-0.3.0-x86_64-uec-kernel",
         "status":"active",
         "visibility":"public",
         "size":4731440,
         "checksum":"cfb203e7267a28e435dbcb05af5910a9",
         "tags":[ ],
         "created_at":"2012-08-10T19:23:49Z",
         "updated_at":"2012-08-10T19:23:49Z",
         "self":"/v2/images/e6421c88-b1ed-4407-8824-b57298249091",
         "file":"/v2/images/e6421c88-b1ed-4407-8824-b57298249091/file",
         "schema":"/v2/schemas/image"}
   ],
   "first":"/v2/images?limit=3",
   "next":"/v2/images?limit=3&amp;marker=e6421c88-b1ed-4407-8824-b57298249091",
   "schema":"/v2/schemas/images"
}
</programlisting>
                        </xsdxt:code>
                    </xsdxt:sample>
                  </doc> 
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="images"
                         style="plain"
                         type="array"
                         required="true"
                         path="$.parameters.images">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The array of the images in the list.</wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The name of the image.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the image. For possible image statuses, see
                <xref linkend="image-statuses"/>.</wadl:doc>
                  </param>
                  <param name="visibility"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.visibility">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">Specifies image visibility as either <code>public</code>
                or <code>private</code>.</wadl:doc>
                  </param>
                  <param name="size"
                         style="plain"
                         type="xsd:integer"
                         required="true"
                         path="$.parameters.images.size">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The size of the image in bytes.</wadl:doc>
                  </param>
                  <param name="checksum"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.checksum">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The checksum of the image.</wadl:doc>
                  </param>
                  <param name="tags"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.tags">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The user-defined image tags.</wadl:doc>
                  </param>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image was created. </wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image was updated. </wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the image.</wadl:doc>
                  </param>
                  <param name="file"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.file">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The image file.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.images.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image.</wadl:doc>
                  </param>
                  <param name="first "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.first ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The URI for the first image in the list.</wadl:doc>
                  </param>
                  <param name="next"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.next">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The URI for the next image in the list.</wadl:doc>
                  </param>
                  <param name="schema "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the images list.</wadl:doc>
                  </param>
               </representation>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
           </method>
      </resource>
            
            <resource id="ImageID" path="images/{image_id}">
         <param name="image_id" style="template" type="csapi:uuid">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                        <p>Image ID stored through the image API, typically a UUID.</p>
                    </wadl:doc>
                </param>
         <method name="GET" rax:id="getImage">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get image details">
               <para role="shortdesc">Gets the details for the specified image. </para>
               <para>This operation shows the details for the image. The response body is a single image entity and conforms to
                the schema found in <xref linkend="GET_getImageSchema_schemas_image_Schema_Calls"/>.</para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                           <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{
   "id":"da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
   "name":"cirros-0.3.0-x86_64-uec-ramdisk",
   "status":"active",
   "visibility":"public",
   "size":2254249,
   "checksum":"2cec138d7dae2aa59038ef8c9aec2390",
   "tags":[
      "ping",
      "pong"
   ],
   "created_at":"2012-08-10T19:23:50Z",
   "updated_at":"2012-08-10T19:23:50Z",
   "self":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
   "file":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea/file",
   "schema":"/v2/schemas/image"
}
</programlisting>
                        </xsdxt:code>
                    </xsdxt:sample>
                  </doc> 
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The name of the image.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the image. For possible image statuses, see
                <xref linkend="image-statuses"/>.</wadl:doc>
                  </param>
                  <param name="visibility"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.visibility">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">Specifies image visibility as either <code>public</code>
                or <code>private</code>.</wadl:doc>
                  </param>
                  <param name="size"
                         style="plain"
                         type="xsd:integer"
                         required="true"
                         path="$.parameters.size">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The size of the image in bytes.</wadl:doc>
                  </param>
                  <param name="checksum"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.checksum">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The checksum of the image.</wadl:doc>
                  </param>
                  <param name="tags"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tags">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The user-defined image tags.</wadl:doc>
                  </param>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image was created.
            </wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image was updated.
            </wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the image.</wadl:doc>
                  </param>
                  <param name="file"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.file">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The image file.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image.</wadl:doc>
                  </param>
               </representation>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PATCH" rax:id="updateImage">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update image">
               <para role="shortdesc">Updates the specified image. </para>
               <para>This operation allows you to update an image that you own. The request body must conform to the
                    <code>'application/openstack-images-v2.1-json-patch'</code> media type. The response conforms to the
                schema found in <xref linkend="GET_getImageSchema_schemas_image_Schema_Calls"/>.</para>
               <para>You can use the <code>HTTP PATCH</code> method to update certain standard properties, and to add, update,
                or remove custom, user-defined image properties. For more information, see <xref linkend="patch-method"/> in
                this guide. Here are some guidelines for custom, user-defined properties. <itemizedlist>
                    <listitem>
                        <para>Adding properties: You can add custom properties to your image.</para>
                        <itemizedlist>
                            <listitem>
                                <para>Naming properties: We recommend you name a custom property by prefixing your domain or
                                    name, and we do not allow you to use <literal>com.rackspace</literal> as the prefix. For
                                    example, <literal>com.mycompany.myproperty</literal> and
                                        <literal>myname.myproperty</literal> are valid, and
                                        <literal>com.rackspace.myproperty</literal> is not allowed.</para>
                                <para>Do not use the prefix <literal>org.openstack</literal> since OpenStack might add a
                                    property with the same name.</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                    <listitem>
                        <para>Deleting properties: You can delete any custom property which you previously added to your
                            image.</para>
                    </listitem>
                    <listitem>
                        <para>Updating properties: You can update any custom properties that you previously added to an image
                            that you own, and you can update the following standard properties:</para>
                        <itemizedlist>
                            <listitem>
                                <para>
                                 <parameter>name</parameter>
                              </para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>tags</parameter>
                              </para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>os_distro</parameter>
                              </para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>os_version</parameter>
                              </para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>protected</parameter>
                              </para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>container_format</parameter> (changing this may render your image
                                    unusable)</para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>disk_format</parameter> (changing this may render your image
                                    unusable)</para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>min_disk</parameter> (changing this affects what flavors you can use with
                                    the image)</para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>min_ram</parameter> (changing this affects what flavors you can use with the
                                    image)</para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>ramdisk_id</parameter> (only applies to disk_format of
                                        <literal>ami</literal>)</para>
                            </listitem>
                            <listitem>
                                <para>
                                 <parameter>kernel_id</parameter> (only applies to disk_format of
                                    <literal>ami</literal>)</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                  </itemizedlist>
               </para>
               <para>In general, you can update any properties you own, but do not expect to be able to update anyone else's
                properties. For example, you can't update any properties starting with <literal>com.rackspace</literal>, and
                you might not be able to update some properties starting with <literal>org.openstack</literal>.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="image">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>The following example updates two properties for the image: <literal>name</literal> and
                            <literal>tag</literal>.</para>
                    <tip>
                        <para>Like all Images API calls, the Image Update operation requires the Content-Type header to
                            match the media type used for the body of the request. If this header is missing or does not
                            match a supported media type, the call results in a <errorcode>415</errorcode> error. Don't
                            forget that the Content-type for the Image Update operation must be the appropriate media-type
                            descriptor for the HTTP Patch method (see <xref linkend="patch-method"/>). For example:
                                <literal>Content-Type: application/openstack-images-v2.1-json-patch</literal>.</para>
                     </tip>
                    <xsdxt:sample>
                        <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                           <programlisting language="javascript">    [
        {"op": "replace", "path": "/name", "value": "Fedora 17"},
        {"op": "replace", "path": "/tags", "value": ["fedora", "beefy"]}
    ]</programlisting>
                        </xsdxt:code>
                    </xsdxt:sample>
                  </wadl:doc>
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="op"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.op">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN">
                        <p>The operation to be executed (<code>add</code>, <code>remove</code>, or <code>replace</code>).</p>
                    </wadl:doc>
                  </param>
                  <param name="path"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.path">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN">
                        <p>The location within the image where the operation is to be performed.</p>
                    </wadl:doc>
                  </param>
                  <param name="value"
                         style="plain"
                         type="xsd:string"
                         required="false"
                         path="$.parameters.value">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN">
                        <p>The actual value to be added or replaced. It is not required for the <code>delete</code>
                            operation.</p>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                           <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{
   "id":"e7db3b45-8db7-47ad-8109-3fb55c2c24fd",
   "name":"Fedora 17",
   "status":"queued",
   "visibility":"public",
   "tags": ["fedora", "beefy"],
   "created_at":"2012-08-11T17:15:52Z",
   "updated_at":"2012-08-11T17:15:52Z",
   "self":"/v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd",
   "file":"/v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd/file",
   "schema":"/v2/schemas/image"
}
</programlisting>
                        </xsdxt:code>
                    </xsdxt:sample>
                  </doc>  
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The name of the image.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the image. For possible image statuses, see
                <xref linkend="image-statuses"/>.</wadl:doc>
                  </param>
                  <param name="visibility"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.visibility">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">Specifies image visibility as either <code>public</code>
                or <code>private</code>.</wadl:doc>
                  </param>
                  <param name="size"
                         style="plain"
                         type="xsd:integer"
                         required="true"
                         path="$.parameters.size">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The size of the image in bytes.</wadl:doc>
                  </param>
                  <param name="checksum"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.checksum">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The checksum of the image.</wadl:doc>
                  </param>
                  <param name="tags"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tags">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The user-defined image tags.</wadl:doc>
                  </param>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image was created.
            </wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image was updated.
            </wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the image.</wadl:doc>
                  </param>
                  <param name="file"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.file">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The image file.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image.</wadl:doc>
                  </param>
               </representation>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="415">
               <doc title="Bad Media Type">Bad media type. This may result if the wrong media type is used in the cURL request.</doc>
               <representation mediaType="application/xml" element="imageapi:badMediaType"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="DELETE" rax:id="deleteImage">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete image">
               <para role="shortdesc">Deletes the specified image. </para>
               <para>This operation deletes the image. Make sure you set <parameter>protected</parameter> parameter to false
                (Boolean) before performing the delete. If the operation succeeds, it returns an <errorcode>HTTP
                    204</errorcode> status code with no response body. </para>
               <warning>
                  <para>An attempt to delete an image with the <parameter>protected</parameter> parameter set to
                        <code>true</code> (boolean) results in a response code <errorcode>HTTP 403</errorcode>.</para>
               </warning>
            </wadl:doc>
            <response status="204">
               <doc title="Delete Successful">Delete request succeeded.</doc>
               <representation mediaType="application/json"/>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
           </method>
      </resource>
                
                
                
                
                <!--<method href="#createImage"/>-->
                <!--<resource id="file" path="file">
                        <method href="#storeImageFile"/>
                        <method href="#getImageFile"/>
                    </resource>-->
                <resource id="Tagstag" path="images/{image_id}/tags/{tag}">
         <param name="image_id" style="template" type="csapi:uuid">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                        <p>Image ID stored through the image API, typically a UUID.</p>
                    </wadl:doc>
                </param>
         <param name="tag" style="template" type="xsd:string">
                            <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Tag">
                                <p>Image tag (may be up to 255 characters in length).</p>
                            </wadl:doc>
                        </param>
         <method name="PUT" rax:id="addImageTag">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Add image tag">
               <para role="shortdesc">Adds the specified tag to the specified image. </para>
               <para>This operation adds the specified tag to the specified image. </para>
               <para>Include the tag you want to add in the request URI <replaceable>{tag}</replaceable> path segment of the
                URI. For example, to tag image e7db3b45-8db7-47ad-8109-3fb55c2c24fd with 'miracle', you would use: <code>PUT
                    /v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd/tags/miracle</code>. The request body is ignored. </para>
               <para>An image can only be tagged once with a specific string. Multiple attempts to tag an image with the same
                string will result in a single instance of that string being added to the image's tags list.</para>
            </wadl:doc>
            <response status="204">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json"/>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="415">
               <doc title="Bad Media Type">Bad media type. This may result if the wrong media type is used in the cURL request.</doc>
               <representation mediaType="application/xml" element="imageapi:badMediaType"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="DELETE" rax:id="deleteImageTag">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete image tag">
               <para role="shortdesc">Deletes the specified tag from the image. </para>
               <para>This operation deletes the specified tag from the specified image. </para>
               <para>Include the tag you want to remove in the request URI <replaceable>{tag}</replaceable> path segment of the
                URI. For example, to remove the image tag 'miracle' from image e7db3b45-8db7-47ad-8109-3fb55c2c24fd, you
                would use: <code>DELETE /v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd/tags/miracle</code>. The request body
                is ignored. </para>
               <para>An image tag can only be removed once. Subsequent attempts to remove the same tag will result in an
                    <errorcode>HTTP 404</errorcode> error.</para>
            </wadl:doc>
            <response status="204">
               <doc title="Delete Successful">Delete request succeeded.</doc>
               <representation mediaType="application/json"/>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                        
                        
                        
                    
                <resource id="Members" path="images/{image_id}/members">
         <param name="image_id" style="template" type="csapi:uuid">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                        <p>Image ID stored through the image API, typically a UUID.</p>
                    </wadl:doc>
                </param>
         <method name="POST" rax:id="createImageMember">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create image member">
               <para role="shortdesc">Adds the specified <parameter>account ID/tenant ID</parameter> specified in the request
                body as an image member.</para>
               <para>This operation allows you to add users to the list of members with whom the image is shared. The member
                status of a newly created image member is <literal>pending</literal>. The response conforms to the schema
                found in <xref linkend="GET_getImageMemberSchema_schemas_member_Schema_Calls"/>.</para>
               <para>If the user making the call is not the image owner, the response is <errorcode>HTTP 404</errorcode>.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "member": "8989447062e04a818baf9e073fd04fa7"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="member"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.member">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                               xml:lang="EN"
                               title="Image member status">
                        <para>The member ID. This is the tenant ID of the user with whom the image is to be shared.</para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2013-09-20T19:22:19Z",
    "image_id": "a96be11e-8536-4910-92cb-de50aa19dfe6",
    "member_id": "8989447062e04a818baf9e073fd04fa7",
    "schema": "/v2/schemas/member",
    "status": "pending",
    "updated_at": "2013-09-20T19:25:31Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="." style="plain" path="$.parameters "/>   
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was created.</wadl:doc>
                  </param>
                  <param name="image_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.image_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
                  <param name="member_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.member_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The id of the image member.</wadl:doc>
                  </param>
                  <param name="schema "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image member.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the image member
                    (<literal>pending</literal>, <literal>accepted</literal>, or <literal>rejected</literal>.</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was updated.</wadl:doc>
                  </param>
               </representation>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="415">
               <doc title="Bad Media Type">Bad media type. This may result if the wrong media type is used in the cURL request.</doc>
               <representation mediaType="application/xml" element="imageapi:badMediaType"/>
               <representation mediaType="application/json"/>
            </response>
           </method>
         <method name="GET" rax:id="listImageMembers">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List image members">
               <para role="shortdesc">Returns collection of members (users) with whom the image has been shared.</para>
               <para> This operation returns collection of members (users) with whom the image has been shared. The response
                conforms to the schema found in
                <xref linkend="GET_getImageMembersSchemas_schemas_members_Schema_Calls"/>.</para>
               <para>If a user with whom this image is shared makes this call, the member list contains only information for
                that user. If a user with whom this image has not been shared makes this call, the response is
                    <errorcode>HTTP 404</errorcode>. </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"> 
                  <param name="visibility"
                         style="query"
                         type="xsd:string"
                         required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook"> Filters images on visibility. Options for visibility are
                as follows: <variablelist>
                           <varlistentry>
                              <term>
                                 <code>shared</code>
                              </term>
                              <listitem>
                                 <para>Shows images that are shared with the user where the member status is
                                    <literal>accepted</literal>.</para>
                              </listitem>
                           </varlistentry>
                           <varlistentry>
                              <term>
                                 <code>private</code>
                              </term>
                              <listitem>
                                 <para>Shows images that the user owns.</para>
                              </listitem>
                           </varlistentry>
                           <varlistentry>
                              <term>
                                 <code>public</code>
                              </term>
                              <listitem>
                                 <para>Shows images that are public images, published by the cloud provider, and available
                                to everyone. Public images do not have members.</para>
                              </listitem>
                           </varlistentry>
                        </variablelist>
                     </wadl:doc>
                  </param>
                  <param name="member_status"
                         style="query"
                         type="xsd:string"
                         required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook"> Filters images on any chosen status. For example,
                    <literal>visibility=shared&amp;member_status=pending</literal> shows only images shared with the
                user where the member status is <literal>pending</literal>. Options for member_status are as follows: <variablelist>
                           <varlistentry>
                              <term>
                                 <code>pending</code>
                              </term>
                              <listitem>
                                 <para>Shows images where member_status is <literal>pending</literal>.</para>
                              </listitem>
                           </varlistentry>
                           <varlistentry>
                              <term>
                                 <code>accepted</code>
                              </term>
                              <listitem>
                                 <para>Shows images where member_status is <literal>accepted</literal>.</para>
                              </listitem>
                           </varlistentry>
                           <varlistentry>
                              <term>
                                 <code>rejected</code>
                              </term>
                              <listitem>
                                 <para>Shows images where member_status is <literal>rejected</literal>. </para>
                              </listitem>
                           </varlistentry>
                           <varlistentry>
                              <term>
                                 <code>all</code>
                              </term>
                              <listitem>
                                 <para>Shows images regardless of member_status. </para>
                              </listitem>
                           </varlistentry>
                        </variablelist>
                        <note>
                           <para>The member_status filter is ignored if the visibility parameter is not set to
                        "shared".</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="owner" style="query" type="xsd:string" required="false">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook"> Filters images on acceptance status only. For example,
                    <literal>visibility=shared&amp;owner=&lt;OWNER_ID&gt;</literal> shows only images shared with this
                user by the user whose tenant id is <literal>OWNER_ID</literal>. <note>
                           <para>The owner filter is
                        ignored if the visibility parameter is not set to "shared".</para>
                        </note>
                     </wadl:doc>
                  </param>

               </representation>
            </request>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "members": [
        {
            "created_at": "2013-10-07T17:58:03Z",
            "image_id": "dbc999e3-c52f-4200-bedd-3b18fe7f87fe",
            "member_id": "123456789",
            "schema": "/v2/schemas/member",
            "status": "pending",
            "updated_at": "2013-10-07T17:58:03Z"
        },
        {
            "created_at": "2013-10-07T17:58:55Z",
            "image_id": "dbc999e3-c52f-4200-bedd-3b18fe7f87fe",
            "member_id": "987654321",
            "schema": "/v2/schemas/member",
            "status": "accepted",
            "updated_at": "2013-10-08T12:08:55Z"
        }
    ],
    "schema": "/v2/schemas/members"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc> 
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="members"
                         style="plain"
                         type="array"
                         required="true"
                         path="$.parameters.members">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The array of image members.</wadl:doc>
                  </param>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.members.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was created.</wadl:doc>
                  </param>
                  <param name="image_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.members.image_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
                  <param name="member_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.members.member_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The id of the image member.</wadl:doc>
                  </param>
                  <param name="schema "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.members.schema ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image member.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.members.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the image member
                (<literal>pending</literal>, <literal>accepted</literal>, or <literal>rejected</literal>.</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.members.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was updated.</wadl:doc>
                  </param>
                  <param name=" schema "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters. schema ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image members.</wadl:doc>
                  </param>
               </representation>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                    
                    
                    <resource id="MemberID" path="images/{image_id}/members/{member_id}">
         <param name="image_id" style="template" type="csapi:uuid">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                        <p>Image ID stored through the image API, typically a UUID.</p>
                    </wadl:doc>
                </param>
         <param name="member_id" style="template" type="xsd:string">
                            <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Members">
                                <p>Image member ID. For example, the tenant ID of the user with whom the image is being
                                    shared.</p>
                            </wadl:doc>
                        </param>
         <method name="GET" rax:id="getImageMember">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get image member details">
               <para role="shortdesc">Gets the details for the specified image member. </para>
               <para>This operation shows details of the image member. The response conforms to the schema found in
                <xref linkend="GET_getImageMemberSchema_schemas_member_Schema_Calls"/>.</para>
               <para>To get a successful response, either the image owner must make the call or the
                    <parameter>tenant_id</parameter> of the user making the call must match the specified
                    <parameter>member_id</parameter>. Otherwise the response is <errorcode>HTTP 404</errorcode>.</para>
            </wadl:doc>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                           <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{
    "created_at": "2014-02-20T04:15:17Z",
    "image_id": "634985e5-0f2e-488e-bd7c-928d9a8ea82a",
    "member_id": "46a12bfd09c8459483c03e1b0d71bda8",
    "schema": "/v2/schemas/member",
    "status": "pending",
    "updated_at": "2014-02-20T04:15:17Z"
}</programlisting>
                        </xsdxt:code>
                    </xsdxt:sample>
                  </doc>
                  <param name="." style="plain" path="$.parameters "/>   
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was created.</wadl:doc>
                  </param>
                  <param name="image_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.image_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
                  <param name="member_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.member_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The id of the image member.</wadl:doc>
                  </param>
                  <param name="schema "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image member.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the image member
                    (<literal>pending</literal>, <literal>accepted</literal>, or <literal>rejected</literal>.</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was updated.</wadl:doc>
                  </param>
               </representation>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="DELETE" rax:id="deleteImageMember">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete image member">
               <para role="shortdesc">Deletes the specified <parameter>account ID/tenant ID</parameter> from the member list of
                the specified image.</para>
               <para>This operation deletes the image member from the image. This call, which can only be made by the image
                owner, removes users from the list of members who have access to a shared image.</para>
               <para>If the <parameter>{member_id}</parameter> is not a member of the specified image, the response is
                    <errorcode>HTTP 404</errorcode>
               </para>
            </wadl:doc>
            <response status="204">
               <doc title="Success">Delete request succeeded.</doc>
               <representation mediaType="application/json"/>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
           </method>
         <method name="PUT" rax:id="updateImageMember">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update image member">
               <para role="shortdesc">Sets the specified status for the specified member of the specified image.</para>
               <para>This operation updates the image member. The response conforms to the schema found in
                <xref linkend="GET_getImageMemberSchema_schemas_member_Schema_Calls"/>.</para>
               <para>If the call is made by the image owner, the response is <errorcode>HTTP 403 (Forbidden)</errorcode>.</para>
               <para>If the call is made by a user who is not the owner and whose <parameter>tenant ID</parameter> is not the
                same as the {member_id} is the operation URI, the response is <errorcode>HTTP 404</errorcode>.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "status": "accepted"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The status to which this image member should be set. Valid values are as follows: <variablelist>
                                <varlistentry>
                                    <term>
                                    <code>pending</code>
                                 </term>
                                    <listitem>
                                        <para>At creation, the member's status is set to pending. The image is not visible in
                                            the member's image-list, but the member can still boot instances from the image.
                                        </para>
                                    </listitem>
                                </varlistentry>
                                <varlistentry>
                                    <term>
                                    <code>accepted</code>
                                 </term>
                                    <listitem>
                                        <para>The image is visible in the member's image-list. The member can boot instances
                                            from the image. </para>
                                    </listitem>
                                </varlistentry>
                                <varlistentry>
                                    <term>
                                    <code>rejected</code>
                                 </term>
                                    <listitem>
                                        <para>The member has decided that he or she does not want to see the image. The image
                                            is not visible in the member's image-list, but the member can still boot
                                            instances from the image. </para>
                                    </listitem>
                                </varlistentry>
                            </variablelist>
                        </para>
                    </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2013-09-20T19:22:19Z",
    "image_id": "a96be11e-8536-4910-92cb-de50aa19dfe6",
    "member_id": "8989447062e04a818baf9e073fd04fa7",
    "schema": "/v2/schemas/member",
    "status": "accepted",
    "updated_at": "2013-09-20T20:15:31Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="." style="plain" path="$.parameters "/>   
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was created.</wadl:doc>
                  </param>
                  <param name="image_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.image_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
                  <param name="member_id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.member_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The id of the image member.</wadl:doc>
                  </param>
                  <param name="schema "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the image member.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the image member
                    (<literal>pending</literal>, <literal>accepted</literal>, or <literal>rejected</literal>.</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the image member was updated.</wadl:doc>
                  </param>
               </representation>
            </response> 
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="415">
               <doc title="Bad Media Type">Bad media type. This may result if the wrong media type is used in the cURL request.</doc>
               <representation mediaType="application/xml" element="imageapi:badMediaType"/>
               <representation mediaType="application/json"/>
            </response>
           </method>
      </resource>
                        
                        
                        
                        
                    
                
            
        
        <resource id="Tasks" path="tasks">
         <method name="POST" rax:id="importImage">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Task to import image">
               <para role="shortdesc">Imports an image using an asynchronous task request. See the request body for specific
                details.</para>
               <para>This operation imports an image using an asynchronous task request. The request begins the import process
                and returns the task UUID that can be subsequently polled to determine the status of the import by using the
                <xref linkend="GET_getTask_tasks__taskID__Image_Task_Calls"/> operation. The response conforms to the schema
                found in <xref linkend="GET_getTaskSchema_schemas_task_Schema_Calls"/>.</para>
               <para>To successfully import an image, </para>
               <itemizedlist>
                  <listitem>
                    <para>Format the image using the VHD format.</para>
                    <note>
                        <para>If you are importing an image that you have previously exported from Cloud Images in another
                            region of the Rackspace open cloud, your image is already in the appropriate format. You can find
                            information on
                            <link xlink:href="http://www.rackspace.com/knowledge_center/article/preparing-an-image-for-import-into-the-rackspace-open-cloud">preparing a custom image for import</link>
                            in the Rackspace Knowledge Center.</para>
                    </note>
                  </listitem>
                  <listitem>
                    <para>Store the image in your Cloud Files account.</para>
                  </listitem>
               </itemizedlist>
               <note>
                  <para> As described in the
                    <link xlink:href="http://docs.rackspace.com/images/api/v2/ci-devguide/content/ch_image-service-dev-overview.html">
                        Rackspace Terms of Service</link>,
                    you should be aware of and respect all licensing restrictions that apply to any software that you import
                    into the Rackspace open cloud. For example, Microsoft licensing rules are very restrictive. Microsoft
                    product use rights do not allow the use of License Mobility for Windows licenses. Given the limitations
                    related to this software platform, image import is not available for Windows images. If you have
                    questions, please contact the software vendor. </para>
               </note>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "type": "import",
    "input": {
        "image_properties": {
            "name": "My excellent custom image"
        }, 
        "import_from": "exports/my-excellent-image.vhd"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="type"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The type of task. Use <code>import</code> for task
                    imports.</wadl:doc>
                  </param>
                  <param name="input"
                         style="plain"
                         required="true"
                         path="$.parameters.input">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for import input parameters.</wadl:doc>
                  </param>
                  <param name="image_properties"
                         style="plain"
                         required="true"
                         path="$.parameters.input.image_properties">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for image properties.</wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.image_properties.name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The name of the image.
                <warning>
                           <para>Name is the only property that can be included in <literal>image-properties</literal>.
                Including any other property will cause the operation to fail.</para>
                        </warning>
                     </wadl:doc>
                  </param>
                  <param name="import_from"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.import_from">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The source of the imported image.</wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import Task - Pending Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T02:58:46Z", 
    "id": "fc29a67c-ad76-49bc-a317-a5f38dcb44c0", 
    "input": {
        "image_properties": {
            "name": "My excellent custom image"
        }, 
        "import_from": "exports/my-excellent-image.vhd"
    }, 
    "message": "None", 
    "owner": "00000123", 
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/fc29a67c-ad76-49bc-a317-a5f38dcb44c0", 
    "status": "pending", 
    "type": "import", 
    "updated_at": "2014-02-26T02:58:46Z"
}
 </programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--<param name="location_id" style="header" type="xsd:string" required="true" path="$.location_id">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">The location of the task resource that is needed for polling
                    the progress of the import request.</wadl:doc>
            </param>-->
                
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was created.
            </wadl:doc>
                  </param>
                  <param name="expires_at"
                         style="plain"
                         type="xsd:string"
                         required="false"
                         path="$.parameters.expires_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">
                        <para>The date and time that the task resource expires. Even after the task resource expires (and is
                    thus no longer available to be polled), the result of the task (such as an imported or exported
                    image) still exists.</para>
                        <note>
                           <para>This parameter is required for responses with <parameter>status</parameter> of
                            <literal>success</literal> and <literal>failure</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the task resource.</wadl:doc>
                  </param>
        
                  <param name="input"
                         style="plain"
                         required="true"
                         path="$.parameters.input">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for import input parameters.</wadl:doc>
                  </param>
                  <param name="image_properties"
                         style="plain"
                         required="true"
                         path="$.parameters.input.image_properties">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for image properties.</wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.image_properties.name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The name of the image.</wadl:doc>
                  </param>
                  <param name="import_from"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.import_from">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The source of the imported image.</wadl:doc>
                  </param>
                  <param name="message"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.message">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The reason why the task export failed. For
                other responses, the value will be <literal>None</literal>.</wadl:doc>
                  </param>
                  <param name="result"
                         style="plain"
                         required="false"
                         path="$.parameters.result">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for results.
                    <note>
                           <para>This parameter is required for responses with
                            <parameter>status</parameter> of <literal>success</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="image_id"
                         style="plain"
                         type="xsd:uuid"
                         required="false"
                         path="$.parameters.result.image_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
         
                  <param name="owner"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.owner">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The tenant-id of the task owner.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the task.</wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the task.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the task. For possible task statuses, see
                <xref linkend="task-statuses"/>.</wadl:doc>
                  </param>
                  <param name="type"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The type of the task (<code>export</code> for task
                exports).</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was updated.
            </wadl:doc>
                  </param>
        
               </representation>
            </response>
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="415">
               <doc title="Bad Media Type">Bad media type. This may result if the wrong media type is used in the cURL request.</doc>
               <representation mediaType="application/xml" element="imageapi:badMediaType"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="POST" rax:id="exportImage">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Task to export image">
               <para role="shortdesc">Exports an image using an asynchronous task request. See the request body for specific
                details.</para>
               <para>This operation exports an image in VHD format using an asynchronous task request to export. The request
                begins the export process and returns the task UUID that can be subsequently polled to determine the status
                of the export by using the <xref linkend="GET_getTask_tasks__taskID__Image_Task_Calls"/> operation. The
                response conforms to the schema found in <xref linkend="GET_getTaskSchema_schemas_task_Schema_Calls"/>. </para>
               <note>
                  <para>The exported image is deposited in your Cloud Files account and is identified by the
                        <parameter>image_uuid</parameter> with a .vhd extension. You are responsible for ensuring that any
                    distribution of your image from the Rackspace open cloud complies with any licensing restrictions.</para>
               </note>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "type": "export",
    "input": 
    {
        "image_uuid": "ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6", 
        "receiving_swift_container": "exports"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="type"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The type of the task. Use <code>export</code> for task
                exports.</wadl:doc>
                  </param>
                  <param name="input"
                         style="plain"
                         required="true"
                         path="$.parameters.input">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for export input parameters.</wadl:doc>
                  </param>
                  <param name="image_uuid"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.image_uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID for the exported image. You must own the image
                or the export task will fail.</wadl:doc>
                  </param>
                  <param name="receiving_swift_container"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.receiving_swift_container">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The Cloud Files container for the exported image. If the
                container does not exist, the task fails.  The task also fails if the container name contains 
                any of the following three characters:  forward slash (<literal>/</literal>), question mark 
                (<literal>?</literal>) or period (<literal>.</literal>).</wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <doc title="Success">Task export request succeeded.</doc>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export Task - Pending Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T02:01:13Z", 
    "id": "7bdc8ede-9098-4d79-9477-697f586cb333", 
    "input": 
    {
        "image_uuid": "ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6", 
        "receiving_swift_container": "exports"
    }, 
    "message": "None", 
    "owner": "00000123", 
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/7bdc8ede-9098-4d79-9477-697f586cb333", 
    "status": "pending", 
    "type": "export", 
    "updated_at": "2014-02-26T02:01:13Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc> 
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was created.
            </wadl:doc>
                  </param>
                  <param name="expires_at"
                         style="plain"
                         type="xsd:string"
                         required="false"
                         path="$.parameters.expires_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">
                        <para>The date and time that the task resource expires. Even after the task resource expires (and is
                    thus no longer available to be polled), the result of the task (such as an imported or exported
                    image) still exists.</para>
                        <note>
                           <para>This parameter is required for responses with <parameter>status</parameter> of
                            <literal>success</literal> and <literal>failure</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the task resource.</wadl:doc>
                  </param>
         
                  <param name="input"
                         style="plain"
                         required="true"
                         path="$.parameters.input">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for export export input parameters.</wadl:doc>
                  </param>
                  <param name="image_uuid"
                         style="plain"
                         required="true"
                         path="$.parameters.input.image_uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID for the exported image.</wadl:doc>
                  </param>
                  <param name="receiving_swift_container"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.receiving_swift_container">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The Cloud Files container for the exported image.</wadl:doc>
                  </param>
                  <param name="message"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.message">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The reason why the task export failed. For
                other responses, the value will be <literal>None</literal>.</wadl:doc>
                  </param>
                  <param name="result"
                         style="plain"
                         required="false"
                         path="$.parameters.result">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for results.
                    <note>
                           <para>This parameter is required for responses with
                            <parameter>status</parameter> of <literal>success</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="export_location"
                         style="plain"
                         type="xsd:string"
                         required="false"
                         path="$.parameters.result.export_location">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The location of the exported image in Cloud Files.</wadl:doc>
                  </param>
        
                
                  <param name="owner"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.owner">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The tenant-id of the task owner.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the task.</wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the task.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the task. For possible task statuses, see
                <xref linkend="task-statuses"/>.</wadl:doc>
                  </param>
                  <param name="type"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The type of the task (<code>export</code> for task
                exports).</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was updated.
            </wadl:doc>
                  </param>
        
                  <!--<param name="location_id" style="header" type="xsd:string" required="true" path="$.location_id">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">The location of the task resource that is needed for polling
                    the progress of the export request.</wadl:doc>
            </param>-->
               </representation>
            </response>
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
            
            <response status="415">
               <doc title="Bad Media Type">Bad media type. This may result if the wrong media type is used in the cURL request.</doc>
               <representation mediaType="application/xml" element="imageapi:badMediaType"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listTasks">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List tasks">
               <para role="shortdesc">Lists tasks.</para>
               <para>This operation returns list of tasks, with basic details about each task. The response conforms to the
                schema found in <xref linkend="GET_getTasksSchemas_schemas_tasks_Schema_Calls"/>.</para>
            </wadl:doc>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List Tasks">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "first": "/v2/tasks", 
    "schema": "/v2/schemas/tasks", 
    "tasks": [
        {
            "created_at": "2014-02-26T02:04:18Z", 
            "id": "baef2134-9c33-47b9-9d63-c29a2a224715", 
            "owner": "00000123", 
            "schema": "/v2/schemas/task", 
            "self": "/v2/tasks/baef2134-9c33-47b9-9d63-c29a2a224715", 
            "status": "pending", 
            "type": "export", 
            "updated_at": "2014-02-26T02:04:18Z"
        }, 
        {
            "created_at": "2014-02-26T02:01:13Z", 
            "id": "7bdc8ede-9098-4d79-9477-697f586cb333", 
            "owner": "00000123", 
            "schema": "/v2/schemas/task", 
            "self": "/v2/tasks/7bdc8ede-9098-4d79-9477-697f586cb333", 
            "status": "processing", 
            "type": "export", 
            "updated_at": "2014-02-26T02:01:13Z"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc> 
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="first "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.first ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The URI for the first task in the list.</wadl:doc>
                  </param>
                  <param name="schema "
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema ">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the tasks list.</wadl:doc>
                  </param>
                  <param name="tasks"
                         style="plain"
                         type="array"
                         required="true"
                         path="$.parameters.tasks">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for tasks in the list.</wadl:doc>
                  </param> 
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was created.
            </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the task resource.</wadl:doc>
                  </param>
                  <param name="owner"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.owner">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The tenant-id of the task owner.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the task.</wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the task.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the task. For possible task statuses, see
                <xref linkend="task-statuses"/>.</wadl:doc>
                  </param>
                  <param name="type"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The type of the task (<code>export</code> for task
                exports).</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.tasks.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was updated.
            </wadl:doc>
                  </param>
               </representation>
            </response>
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
           
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            <resource id="TaskID" path="tasks/{taskID}">
         <param name="task_id" style="template" type="csapi:uuid">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Task ID">
                        <p>The task id. This task id is the same as the id parameter returned in the Import Task or Export
                            Task operation response body.</p>
                    </wadl:doc>
                </param>
         <method name="GET" rax:id="getTask">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get task details">
               <para role="shortdesc">Gets the details for the specified task.</para>
               <para>This operation shows the details for the specified task, including the status, so you'll know when the
                import or export task completes and whether it worked. For more information on statuses, see
                <xref linkend="task-statuses"/>. The response conforms to the schema found in
                <xref linkend="GET_getTaskSchema_schemas_task_Schema_Calls"/>.</para>
            </wadl:doc>
            <response status="200">
               <doc title="Success">Request succeeded.</doc>
               <!--import pending-->
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import Task - Pending Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T02:58:46Z", 
    "id": "fc29a67c-ad76-49bc-a317-a5f38dcb44c0", 
    "input": {
        "image_properties": {
            "name": "My excellent custom image"
        }, 
        "import_from": "exports/my-excellent-image.vhd"
    }, 
    "message": "None", 
    "owner": "00000123", 
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/fc29a67c-ad76-49bc-a317-a5f38dcb44c0", 
    "status": "pending", 
    "type": "import", 
    "updated_at": "2014-02-26T02:58:46Z"
}
 </programlisting>
                     </xsdxt:code>
                  </wadl:doc> 
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was created.
            </wadl:doc>
                  </param>
                  <param name="expires_at"
                         style="plain"
                         type="xsd:string"
                         required="false"
                         path="$.parameters.expires_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">
                        <para>The date and time that the task resource expires. Even after the task resource expires (and is
                    thus no longer available to be polled), the result of the task (such as an imported or exported
                    image) still exists.</para>
                        <note>
                           <para>This parameter is required for responses with <parameter>status</parameter> of
                            <literal>success</literal> and <literal>failure</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the task resource.</wadl:doc>
                  </param>
         
                  <param name="input"
                         style="plain"
                         required="true"
                         path="$.parameters.input">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for import input parameters.</wadl:doc>
                  </param>
                  <param name="image_properties"
                         style="plain"
                         required="true"
                         path="$.parameters.input.image_properties">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for image properties.</wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.image_properties.name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The name of the image.</wadl:doc>
                  </param>
                  <param name="import_from"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.import_from">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The source of the imported image.</wadl:doc>
                  </param>
                  <param name="message"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.message">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The reason why the task export failed. For
                other responses, the value will be <literal>None</literal>.</wadl:doc>
                  </param>
                  <param name="result"
                         style="plain"
                         required="false"
                         path="$.parameters.result">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for results.
                    <note>
                           <para>This parameter is required for responses with
                            <parameter>status</parameter> of <literal>success</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="image_id"
                         style="plain"
                         type="xsd:uuid"
                         required="false"
                         path="$.parameters.result.image_id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the image.</wadl:doc>
                  </param>
        
                
                  <param name="owner"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.owner">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The tenant-id of the task owner.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the task.</wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the task.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the task. For possible task statuses, see
                <xref linkend="task-statuses"/>.</wadl:doc>
                  </param>
                  <param name="type"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The type of the task (<code>export</code> for task
                exports).</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was updated.
            </wadl:doc>
                  </param>
               </representation>
               <!--import success-->
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import Task - Success Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T03:02:23Z", 
    "expires_at": "2014-02-28T03:28:18Z", 
    "id": "d8dd8c24-2534-473c-881f-9097bc784068", 
    "input": {
        "image_properties": {
            "name": "My excellent custom image"
        }, 
        "import_from": "exports/my-excellent-image.vhd"
    }, 
    "message": "None", 
    "owner": "00000123", 
    "result": {
        "image_id": "1d944ab7-6748-4f3c-b7e2-3553bf006677"
    }, 
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/d8dd8c24-2534-473c-881f-9097bc784068", 
    "status": "success", 
    "type": "import", 
    "updated_at": "2014-02-26T03:28:18Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--import failure-->
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import Task - Failure Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T02:58:46Z", 
    "expires_at": "2014-02-28T02:58:49Z", 
    "id": "fc29a67c-ad76-49bc-a317-a5f38dcb44c0", 
    "input": 
    {
        "image_properties": 
        {
            "name": "my imported image"
        }, 
        "import_from": "nonexistentcontainer/noimage.vhd"
    }, 
    "message": "Error: Image not found for import. Possible invalid location", 
    "owner": "00000123", 
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/fc29a67c-ad76-49bc-a317-a5f38dcb44c0", 
    "status": "failure", 
    "type": "import", 
    "updated_at": "2014-02-26T02:58:49Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--export pending-->
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export Task - Pending Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T02:01:13Z", 
    "id": "7bdc8ede-9098-4d79-9477-697f586cb333", 
    "input": 
    {
        "image_uuid": "ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6", 
        "receiving_swift_container": "exports"
    }, 
    "message": "None", 
    "owner": "00000123", 
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/7bdc8ede-9098-4d79-9477-697f586cb333", 
    "status": "pending", 
    "type": "export", 
    "updated_at": "2014-02-26T02:01:13Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc> 
                  <param name="." style="plain" path="$.parameters "/>
                  <param name="created_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.created_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was created.
            </wadl:doc>
                  </param>
                  <param name="expires_at"
                         style="plain"
                         type="xsd:string"
                         required="false"
                         path="$.parameters.expires_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">
                        <para>The date and time that the task resource expires. Even after the task resource expires (and is
                    thus no longer available to be polled), the result of the task (such as an imported or exported
                    image) still exists.</para>
                        <note>
                           <para>This parameter is required for responses with <parameter>status</parameter> of
                            <literal>success</literal> and <literal>failure</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID of the task resource.</wadl:doc>
                  </param>
         
                  <param name="input"
                         style="plain"
                         required="true"
                         path="$.parameters.input">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for export export input parameters.</wadl:doc>
                  </param>
                  <param name="image_uuid"
                         style="plain"
                         required="true"
                         path="$.parameters.input.image_uuid">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The UUID for the exported image.</wadl:doc>
                  </param>
                  <param name="receiving_swift_container"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.input.receiving_swift_container">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The Cloud Files container for the exported image.</wadl:doc>
                  </param>
                  <param name="message"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.message">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The reason why the task export failed. For
                other responses, the value will be <literal>None</literal>.</wadl:doc>
                  </param>
                  <param name="result"
                         style="plain"
                         required="false"
                         path="$.parameters.result">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The container for results.
                    <note>
                           <para>This parameter is required for responses with
                            <parameter>status</parameter> of <literal>success</literal>.</para>
                        </note>
                     </wadl:doc>
                  </param>
                  <param name="export_location"
                         style="plain"
                         type="xsd:string"
                         required="false"
                         path="$.parameters.result.export_location">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The location of the exported image in Cloud Files.</wadl:doc>
                  </param>
        
                
                  <param name="owner"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.owner">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The tenant-id of the task owner.</wadl:doc>
                  </param>
                  <param name="schema"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.schema">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The schema of the task.</wadl:doc>
                  </param>
                  <param name="self"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.self">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The link to the task.</wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.status">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The status of the task. For possible task statuses, see
                <xref linkend="task-statuses"/>.</wadl:doc>
                  </param>
                  <param name="type"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The type of the task (<code>export</code> for task
                exports).</wadl:doc>
                  </param>
                  <param name="updated_at"
                         style="plain"
                         type="xsd:string"
                         required="true"
                         path="$.parameters.updated_at">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook">The date and time that the task resource was updated.
            </wadl:doc>
                  </param>
               </representation>
               <!--export success-->
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export Task - Success Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T02:01:13Z", 
    "expires_at": "2014-02-28T02:16:50Z", 
    "id": "7bdc8ede-9098-4d79-9477-697f586cb333", 
    "input": 
    {
        "image_uuid": "ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6", 
        "receiving_swift_container": "exports"
    }, 
    "message": "None", 
    "owner": "00000123", 
    "result": 
    {
        "export_location": "exports/ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6.vhd"
    }, 
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/7bdc8ede-9098-4d79-9477-697f586cb333", 
    "status": "success", 
    "type": "export", 
    "updated_at": "2014-02-26T02:16:50Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--export failure-->
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export Task - Failure Response">
                    <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">{
    "created_at": "2014-02-26T02:04:18Z", 
    "expires_at": "2014-02-28T02:25:12Z", 
    "id": "baef2134-9c33-47b9-9d63-c29a2a224715", 
    "input": 
    {
        "image_uuid": "ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6", 
        "receiving_swift_container": "exports"
    }, 
    "message": "Swift already has an object with id 'ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6.vhd' in container 'exports'", 
    "owner": "00000123",
    "schema": "/v2/schemas/task", 
    "self": "/v2/tasks/baef2134-9c33-47b9-9d63-c29a2a224715", 
    "status": "failure", 
    "type": "export", 
    "updated_at": "2014-02-26T02:25:12Z"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="400">
               <doc title="Error">A general error has occured.</doc>
               <representation mediaType="application/xml" element="imageapi:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <doc title="Unauthorized">Unauthorized.</doc>
               <representation mediaType="application/xml" element="imageapi:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <doc title="Forbidden">Forbidden.</doc>
               <representation mediaType="application/xml" element="imageapi:forbidden"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="405">
               <doc title="Bad Method">Bad method.</doc>
               <representation mediaType="application/xml" element="imageapi:badMethod"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <doc title="Over Limit">The number of items returned is above the allowed limit.</doc>
               <representation mediaType="application/xml" element="imageapi:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <doc title="Service Unavailable">The requested service is unavailable.</doc>
               <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="500">
               <doc title="API Fault">API fault.</doc>
               <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
               <representation mediaType="application/json"/>
            </response>
           
            <response status="404">
               <doc title="Not Found">Resource not found.</doc>
               <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
           </method>
      </resource>
                
                
            
        
        <!--</resource>-->
    </resources>

    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->

    <!-- ================ -->
    <!-- Image Operations -->
    <!-- ================ -->
    
    <!-- List Images -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listImages">
        
        <request>
            <representation mediaType="application/json"> 
            <param name="limit" style="query" required="false" type="xsd:string">
                
            </param>
            <param name="marker" style="query" required="false" type="xsd:string">
                
            </param>
            <param name="name" style="query" required="false" type="xsd:string">
                
            </param>
            <param name="visibility"
                   style="query"
                   required="false"
                   type="imageapi:string">
                
            </param>
            <param name="member_status"
                   style="query"
                   required="false"
                   type="imageapi:string">
                
            </param>
            <param name="owner"
                   style="query"
                   required="false"
                   type="imageapi:string">
                
            </param>
            <param name="tag"
                   style="query"
                   required="false"
                   type="imageapi:string">
                
            </param>
            <param name="status" style="query" required="false" type="xsd:int">
                
            </param>
            <param name="size_min"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">
                
            </param>
            <param name="size_max"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">
                
            </param>
            <param name="sort_key"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">
                
            </param>
            <param name="sort_dir"
                   style="query"
                   required="false"
                   type="xsd:string"
                   default="ALL">
                
            </param>
           </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/json">
                 
            <param name="." style="plain" path="$.parameters "/>
            <param name="images"
                   style="plain"
                   type="array"
                   required="true"
                   path="$.parameters.images">
            
        </param>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.id">
            
        </param>
            <param name="name"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.name">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.status">
            
        </param>
            <param name="visibility"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.visibility">
            
        </param>
            <param name="size"
                   style="plain"
                   type="xsd:integer"
                   required="true"
                   path="$.parameters.images.size">
            
        </param>
            <param name="checksum"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.checksum">
            
        </param>
            <param name="tags"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.tags">
            
        </param>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.created_at">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.updated_at">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.self">
            
        </param>
            <param name="file"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.file">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.images.schema">
            
        </param>
            <param name="first "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.first ">
            
        </param>
            <param name="next"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.next">
            
        </param>
            <param name="schema "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema ">
            
        </param>
         </representation>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
           </method>

    <!-- Get Image -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getImage">
        
        <response status="200">
            <representation mediaType="application/json">
                 
            <param name="." style="plain" path="$.parameters "/>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.id">
            
        </param>
            <param name="name"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.name">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="visibility"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.visibility">
            
        </param>
            <param name="size"
                   style="plain"
                   type="xsd:integer"
                   required="true"
                   path="$.parameters.size">
            
        </param>
            <param name="checksum"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.checksum">
            
        </param>
            <param name="tags"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tags">
            
        </param>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.self">
            
        </param>
            <param name="file"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.file">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema">
            
        </param>
         </representation>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Update Image -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PATCH"
           id="updateImage">
        
        <request>
            <representation mediaType="application/json" element="image">
                
                <param name="." style="plain" path="$.parameters "/>
                <param name="op"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.op">
                    
                </param>
                <param name="path"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.path">
                    
                </param>
                <param name="value"
                   style="plain"
                   type="xsd:string"
                   required="false"
                   path="$.parameters.value">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/json">
                  
            <param name="." style="plain" path="$.parameters "/>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.id">
            
        </param>
            <param name="name"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.name">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="visibility"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.visibility">
            
        </param>
            <param name="size"
                   style="plain"
                   type="xsd:integer"
                   required="true"
                   path="$.parameters.size">
            
        </param>
            <param name="checksum"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.checksum">
            
        </param>
            <param name="tags"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tags">
            
        </param>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.self">
            
        </param>
            <param name="file"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.file">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema">
            
        </param>
         </representation>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="415">
            
            <representation mediaType="application/xml" element="imageapi:badMediaType"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Delete Image -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteImage">
        
        <response status="204">
            
            <representation mediaType="application/json"/>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
           </method>

    <!--Create Image -->
    <!--    <method name="POST" id="createImage">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook" title="Create Image">
            <para role="shortdesc">Creates a virtual machine (VM) image. </para>
            <para>This operation creates an image with a Location header that contains the newly-created URI for the image.
                The response body represents the created image entity.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="image">
                <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-create-req.json"/>
                    </xsdxt:sample>
                </doc>
                <param name="name" style="plain" type="xsd:string" required="true" path="$.name">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Images name">
                        <p>Name for the image. The name of an image is not unique to an image node, because the API does not
                            expect users to know the names of images owned by others.</p>
                    </wadl:doc>
                </param>
                <param name="id" style="plain" type="csapi:uuid" required="false" path="$.id">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                        <p>The image ID.</p>
                    </wadl:doc>
                </param>
                <param name="visibility" style="plain" type="xsd:string" required="false">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Visibility">
                        <p>Image visibility. Valid values are <code>public</code> or <code>private</code>. The default is
                                <code>public</code>.</p>
                    </wadl:doc>
                </param>
                <param name="tags" style="plain" type="xsd:dict" required="false" path="$.tags">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Tags">
                        <p>The user-defined image tags.</p>
                    </wadl:doc>
                </param>
            </representation>
        </request>
        <response status="201">
            <doc title="Success">Create Request succeeded.</doc>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para> The response is created with a Location header that contains the newly created URI for the image.
                        The response body represents the created image entity. </para>
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-create-response.json"/>
                    </xsdxt:sample>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &postPutFaults; </method>-->

    <!-- ==================== -->
    <!-- Image Tag Operations -->
    <!-- ==================== -->
    
    <!-- Add Image Tag -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="addImageTag">
        
        <response status="204">
            
            <representation mediaType="application/json"/>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="415">
            
            <representation mediaType="application/xml" element="imageapi:badMediaType"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Delete Image Tag -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteImageTag">
        
        <response status="204">
            
            <representation mediaType="application/json"/>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- =============================== -->
    <!-- Image Sharing/Member Operations -->
    <!-- =============================== -->
    
    <!-- List Image Members -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listImageMembers">
        
        <request>
            <representation mediaType="application/json"> 
            <param name="visibility"
                   style="query"
                   type="xsd:string"
                   required="false">
            
        </param>
            <param name="member_status"
                   style="query"
                   type="xsd:string"
                   required="false">
            
        </param>
            <param name="owner" style="query" type="xsd:string" required="false">
            
        </param>

            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/json">
                 
            <param name="." style="plain" path="$.parameters "/>
            <param name="members"
                   style="plain"
                   type="array"
                   required="true"
                   path="$.parameters.members">
            
        </param>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.members.created_at">
            
        </param>
            <param name="image_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.members.image_id">
            
        </param>
            <param name="member_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.members.member_id">
            
        </param>
            <param name="schema "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.members.schema ">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.members.status">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.members.updated_at">
            
        </param>
            <param name=" schema "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters. schema ">
            
        </param>
         </representation>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Create Image Member -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createImageMember">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="." style="plain" path="$.parameters "/>
                <param name="member"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.member">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/json">
                
                <param name="." style="plain" path="$.parameters "/>   
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="image_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.image_id">
            
        </param>
            <param name="member_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.member_id">
            
        </param>
            <param name="schema "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema ">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
         </representation>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="415">
            
            <representation mediaType="application/xml" element="imageapi:badMediaType"/>
            <representation mediaType="application/json"/>
        </response>
           </method>

    <!-- Get Image Member-->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getImageMember">
        
        <response status="200">
            
            <representation mediaType="application/json">
                
                <param name="." style="plain" path="$.parameters "/>   
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="image_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.image_id">
            
        </param>
            <param name="member_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.member_id">
            
        </param>
            <param name="schema "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema ">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
         </representation>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Update Image Member -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateImageMember">
        
        <request>
            <representation mediaType="application/json">
                
                <param name="." style="plain" path="$.parameters "/>
                <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
                    
                </param>
            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/json">
                
                <param name="." style="plain" path="$.parameters "/>   
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="image_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.image_id">
            
        </param>
            <param name="member_id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.member_id">
            
        </param>
            <param name="schema "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema ">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
         </representation>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="415">
            
            <representation mediaType="application/xml" element="imageapi:badMediaType"/>
            <representation mediaType="application/json"/>
        </response>
           </method>

    <!-- Delete Image Member -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteImageMember">
        
        <response status="204">
            
            <representation mediaType="application/json"/>
        </response> 
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
           </method>

    <!-- =============== -->
    <!-- Task Operations -->
    <!-- =============== -->
    
    <!-- List Tasks -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listTasks">
        
        <response status="200">
            
            <representation mediaType="application/json">
                 
            <param name="." style="plain" path="$.parameters "/>
            <param name="first "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.first ">
            
        </param>
            <param name="schema "
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema ">
            
        </param>
            <param name="tasks"
                   style="plain"
                   type="array"
                   required="true"
                   path="$.parameters.tasks">
            
        </param> 
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.created_at">
            
        </param>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.id">
            
        </param>
            <param name="owner"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.owner">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.schema">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.self">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.status">
            
        </param>
            <param name="type"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.type">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.tasks.updated_at">
            
        </param>
         </representation>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
           
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Task Details -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getTask">
        
        <response status="200">
            
            <!--import pending-->
            <representation mediaType="application/json">
                 
            <param name="." style="plain" path="$.parameters "/>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="expires_at"
                   style="plain"
                   type="xsd:string"
                   required="false"
                   path="$.parameters.expires_at">
            
        </param>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.id">
            
        </param>
         
            <param name="input"
                   style="plain"
                   required="true"
                   path="$.parameters.input">
            
        </param>
            <param name="image_properties"
                   style="plain"
                   required="true"
                   path="$.parameters.input.image_properties">
            
        </param>
            <param name="name"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.image_properties.name">
            
        </param>
            <param name="import_from"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.import_from">
            
        </param>
            <param name="message"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.message">
            
        </param>
            <param name="result"
                   style="plain"
                   required="false"
                   path="$.parameters.result">
            
        </param>
            <param name="image_id"
                   style="plain"
                   type="xsd:uuid"
                   required="false"
                   path="$.parameters.result.image_id">
            
        </param>
        
                
            <param name="owner"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.owner">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.self">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="type"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.type">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
         </representation>
            <!--import success-->
            <representation mediaType="application/json">
                
            </representation>
            <!--import failure-->
            <representation mediaType="application/json">
                
            </representation>
            <!--export pending-->
            <representation mediaType="application/json">
                 
            <param name="." style="plain" path="$.parameters "/>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="expires_at"
                   style="plain"
                   type="xsd:string"
                   required="false"
                   path="$.parameters.expires_at">
            
        </param>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.id">
            
        </param>
         
            <param name="input"
                   style="plain"
                   required="true"
                   path="$.parameters.input">
            
        </param>
            <param name="image_uuid"
                   style="plain"
                   required="true"
                   path="$.parameters.input.image_uuid">
            
        </param>
            <param name="receiving_swift_container"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.receiving_swift_container">
            
        </param>
            <param name="message"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.message">
            
        </param>
            <param name="result"
                   style="plain"
                   required="false"
                   path="$.parameters.result">
            
        </param>
            <param name="export_location"
                   style="plain"
                   type="xsd:string"
                   required="false"
                   path="$.parameters.result.export_location">
            
        </param>
        
                
            <param name="owner"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.owner">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.self">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="type"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.type">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
         </representation>
            <!--export success-->
            <representation mediaType="application/json">
                
            </representation>
            <!--export failure-->
            <representation mediaType="application/json">
                
            </representation>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
           
        <response status="404">
            
            <representation mediaType="application/xml" element="imageapi:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
           </method>

    <!-- Import Image -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="importImage">
        
        <request>
            <representation mediaType="application/json">
                
            <param name="." style="plain" path="$.parameters "/>
            <param name="type"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.type">
            
        </param>
            <param name="input"
                   style="plain"
                   required="true"
                   path="$.parameters.input">
            
        </param>
            <param name="image_properties"
                   style="plain"
                   required="true"
                   path="$.parameters.input.image_properties">
            
        </param>
            <param name="name"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.image_properties.name">
            
        </param>
            <param name="import_from"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.import_from">
            
        </param>
            </representation>
        </request>
        <response status="201">
            
            <representation mediaType="application/json">
                
                <!--<param name="location_id" style="header" type="xsd:string" required="true" path="$.location_id">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">The location of the task resource that is needed for polling
                    the progress of the import request.</wadl:doc>
            </param>-->
                
            <param name="." style="plain" path="$.parameters "/>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="expires_at"
                   style="plain"
                   type="xsd:string"
                   required="false"
                   path="$.parameters.expires_at">
            
        </param>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.id">
            
        </param>
        
            <param name="input"
                   style="plain"
                   required="true"
                   path="$.parameters.input">
            
        </param>
            <param name="image_properties"
                   style="plain"
                   required="true"
                   path="$.parameters.input.image_properties">
            
        </param>
            <param name="name"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.image_properties.name">
            
        </param>
            <param name="import_from"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.import_from">
            
        </param>
            <param name="message"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.message">
            
        </param>
            <param name="result"
                   style="plain"
                   required="false"
                   path="$.parameters.result">
            
        </param>
            <param name="image_id"
                   style="plain"
                   type="xsd:uuid"
                   required="false"
                   path="$.parameters.result.image_id">
            
        </param>
         
            <param name="owner"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.owner">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.self">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="type"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.type">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
        
            </representation>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="415">
            
            <representation mediaType="application/xml" element="imageapi:badMediaType"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Export Image -->
    <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:imageapi="http://docs.openstack.org/image/api/v2.0"
           xmlns:atom="http://www.w3.org/2005/Atom"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="exportImage">
        
        <request>
            <representation mediaType="application/json">
                
            <param name="." style="plain" path="$.parameters "/>
            <param name="type"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.type">
            
        </param>
            <param name="input"
                   style="plain"
                   required="true"
                   path="$.parameters.input">
            
        </param>
            <param name="image_uuid"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.image_uuid">
            
        </param>
            <param name="receiving_swift_container"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.receiving_swift_container">
            
        </param>
           </representation>
        </request>
        <response status="201">
            
            <representation mediaType="application/json">
                 
            <param name="." style="plain" path="$.parameters "/>
            <param name="created_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.created_at">
            
        </param>
            <param name="expires_at"
                   style="plain"
                   type="xsd:string"
                   required="false"
                   path="$.parameters.expires_at">
            
        </param>
            <param name="id"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.id">
            
        </param>
         
            <param name="input"
                   style="plain"
                   required="true"
                   path="$.parameters.input">
            
        </param>
            <param name="image_uuid"
                   style="plain"
                   required="true"
                   path="$.parameters.input.image_uuid">
            
        </param>
            <param name="receiving_swift_container"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.input.receiving_swift_container">
            
        </param>
            <param name="message"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.message">
            
        </param>
            <param name="result"
                   style="plain"
                   required="false"
                   path="$.parameters.result">
            
        </param>
            <param name="export_location"
                   style="plain"
                   type="xsd:string"
                   required="false"
                   path="$.parameters.result.export_location">
            
        </param>
        
                
            <param name="owner"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.owner">
            
        </param>
            <param name="schema"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.schema">
            
        </param>
            <param name="self"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.self">
            
        </param>
            <param name="status"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.status">
            
        </param>
            <param name="type"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.type">
            
        </param>
            <param name="updated_at"
                   style="plain"
                   type="xsd:string"
                   required="true"
                   path="$.parameters.updated_at">
            
        </param>
        
                <!--<param name="location_id" style="header" type="xsd:string" required="true" path="$.location_id">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">The location of the task resource that is needed for polling
                    the progress of the export request.</wadl:doc>
            </param>-->
            </representation>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="imageapi:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            
            <representation mediaType="application/xml" element="imageapi:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            
            <representation mediaType="application/xml" element="imageapi:forbidden"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="405">
            
            <representation mediaType="application/xml" element="imageapi:badMethod"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="imageapi:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            
            <representation mediaType="application/xml" element="imageapi:imageapiFault"/>
            <representation mediaType="application/json"/>
        </response>
            
        <response status="415">
            
            <representation mediaType="application/xml" element="imageapi:badMediaType"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    
    <!-- ===================== -->
    <!-- Image File Operations -->
    <!-- ===================== -->
    
    <!-- Upload Image -->
    <!--    <method name="PUT" id="storeImageFile">
        <wadl:doc xml:lang="EN" title="Upload Binary Image Data" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Uploads binary image data. </para>
            <para>This operation uploads the binary image data. An image record must exist before a client can store binary
                image data with it. </para>
            <para>Content-Type must be <code>application/octet-stream</code>. The complete request body is stored and is
                accessible in its entirety by issuing a &GET; request to the same URI. </para>
        </wadl:doc>
        <response status="204">
            <doc title="Success">Upload Request succeeded.</doc>
        </response> &commonFaults; &postPutFaults; </method>-->
    
    <!-- Download Image -->
    <!--    <method name="GET" id="getImageFile">
        <wadl:doc xml:lang="EN" title="Download Binary Image Data" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Downloads binary image data.</para>
            <para>This operation downloads the binary image data. The response body contains the raw binary data that
                represents the actual virtual disk. The Content-Type header is <code>application/octet-stream</code>. The
                Content-MD5 header contains an MD5 checksum of the image data. Clients are encouraged to verify the integrity
                of the image data that they receive by using this checksum.</para>
        </wadl:doc>
        <response status="200">
            <doc title="Success">Request succeeded.</doc>
            <wadl:doc xmlns="http://docbook.org/ns/docbook">
                <para>If no image data exists, the response returns <errorcode>HTTP 204</errorcode> status code.</para>
            </wadl:doc>
        </response>
        <response status="204">
            <doc title="No Data Exists"> Download request failed because no data exists.</doc>
        </response> &commonFaults; &getFaults; </method>-->
</wadl:application>
