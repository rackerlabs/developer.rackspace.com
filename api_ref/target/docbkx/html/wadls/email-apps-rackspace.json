{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List Rackspace email mailboxes", "description":"\n Lists Rackspace email mailboxes in\n a domain.\n Filter\/Search\n Mailbox searches may be filtered by the 'enabled'\n flag using query methods ?enabled=true and\n ?enabled=false.\n Remarks\n \n \n The show operation only supports the GET\n HTTP verb.\n \n \n Custom Fields\n The result displays each mailbox's 'name' and\n 'displayName' as default. There is a query string\n 'fields' that allows the result to display more\n mailbox properties. The additional properties are:\n 'size', 'currentUsage', 'enabled', 'createdDate', and\n 'lastLogin'\n \n Example\n \n GET\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes?fields=size,currentUsage',\n 'text\/xml'\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <rsMailboxList\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:rsMailboxList\">\n <offset>0<\/offset>\n <size>50<\/size>\n <total>2<\/total>\n <rsMailboxes> <rsMailbox>\n <name>apirsmailbox37<\/name>\n <\/rsMailbox> <rsMailbox>\n <name>apirsmailbox91<\/name>\n <\/rsMailbox> <\/rsMailboxes>\n <\/rsMailboxList>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"offset\":0,\"size\":50,\"total\":2,\"rsMailboxes\":[{\"name\":\"apirsmailbox37\"},{\"name\":\"apirsmailbox91\"}]}", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show Rackspace email mailbox details", "description":"\n Shows details for a specified\n Rackspace email mailbox.\n Remarks\n \n \n The show operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <rsMailbox\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:rsMailbox\">\n <name>apirsmailbox37<\/name>\n <size>10240<\/size>\n <currentUsage>1024<\/currentUsage>\n <vacationMessage>My Test Vacation\n Message<\/vacationMessage>\n <enableVacationMessage>true<\/enableVacationMessage>\n <emailForwardingAddressList>\n <emailAddress>notreal0@apidomain.net<\/emailAddress>\n <emailAddress>notreal1@apidomain.net<\/emailAddress>\n <\/emailForwardingAddressList>\n <saveForwardedEmail>false<\/saveForwardedEmail>\n <lastLogin>2\/12\/2009 1:00:00\n AM<\/lastLogin>\n <createdDate>4\/10\/2006 7:47:34\n PM<\/createdDate>\n <visibleInRackspaceEmailCompanyDirectory>false<\/visibleInRackspaceEmailCompanyDirectory>\n <visibleInExchangeGAL>false<\/visibleInExchangeGAL>\n <contactInfo>\n <lastName>Testlast<\/lastName>\n <firstName>Jayfirst<\/firstName>\n <generationQualifier>Jr<\/generationQualifier>\n <initials>A<\/initials>\n <organizationUnit>IT<\/organizationUnit>\n <businessStreet>123 Biz\n St<\/businessStreet>\n <businessCity>Blacksburg<\/businessCity>\n <businessState>VA<\/businessState>\n <businessPostalCode>24060<\/businessPostalCode>\n <businessCountry>USA<\/businessCountry>\n <homeStreet>456 Home\n St<\/homeStreet>\n <homeCity>Charlotte<\/homeCity>\n <homeState>NC<\/homeState>\n <homePostalCode>28210<\/homePostalCode>\n <homeCountry>USA<\/homeCountry>\n <businessNumber>555.123.0001<\/businessNumber>\n <homeNumber>555.123.0003<\/homeNumber>\n <mobileNumber>555.123.0004<\/mobileNumber>\n <faxNumber>555.123.0005<\/faxNumber>\n <homeFaxNumber>555.123.0006<\/homeFaxNumber>\n <pagerNumber>555.123.0002<\/pagerNumber>\n <notes>This is my note about my\n mailbox.<\/notes> <title>My\n Title<\/title>\n <userID>J.Test<\/userID>\n <customID>0123456789<\/customID>\n <organizationalStatus>OrgStatus<\/organizationalStatus>\n <employeeType>Full-Time<\/employeeType>\n <\/contactInfo>\n <enabled>true<\/enabled>\n <\/rsMailbox>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"emailForwardingAddressList\":[\"test@resellerallservices.net\"],\"enableVacationMessage\":true,\"enabled\":true,\"contactInfo\":{\"businessNumber\":\"555.123.0001\"\n ,\"faxNumber\":\"555.123.0005\"\n ,\"firstName\":\"Jimmy\"\n ,\"homeNumber\":\"555.123.0003\"\n ,\"lastName\":\"TestLaste\"\n ,\"mobileNumber\":\"555.123.0004\" ,\"notes\":\"This\n is my note about my mailbox.\"\n ,\"pagerNumber\":\"555.123.0002\"\n ,\"businessCity\":\"\" ,\"businessCountry\":\"\"\n ,\"businessPostalCode\":\"\" ,\"businessState\":\"\"\n ,\"businessStreet\":\"\"\n ,\"employeeType\":\"DoesNotExist\"\n ,\"generationQualifier\":\"Jr\" ,\"homeCity\":\"\"\n ,\"homeCountry\":\"\"\n ,\"homeFaxNumber\":\"555.123.0006\"\n ,\"homePostalCode\":\"\" ,\"homeState\":\"\"\n ,\"homeStreet\":\"\" ,\"initials\":\"A\"\n ,\"organizationUnit\":\"IT\"\n ,\"organizationalStatus\":\"gainfully employed\"\n ,\"title\":\"My Title\" ,\"userID\":\"J.Test\",\n \"customID\":\"0123456789\"},\"name\":\"unittestexist\"\n ,\"saveForwardedEmail\":false,\"size\":10240,\"vacationMessage\":\"Test\n Vacation Message\", \"createdDate\":\"4\\\/10\\\/2006\n 7:47:34 PM\", \"currentUsage\":1024,\n \"visibleInExchangeGAL\":false,\n \"visibleInRackspaceEmailCompanyDirectory\":false}", "schema":"" } ] } ] }, { "method":"POST", "name":"Add Rackspace email mailbox", "description":"\n Adds a Rackspace email\n mailbox.\n To add a mailbox, use these form fields:\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n password\n string\n Password (Required for Add)\n \n \n size\n positive integer\n Mailbox size in megabytes (Required for\n Add)\n \n \n enableVacationMessage\n boolean\n indicates whether vacation message has\n been enabled\n \n \n vacationMessage\n string\n A mailbox's vacation message\n \n \n emailForwardingAddresses\n string\n A comma delimited list, Maximum 15\n addresses, 4 of which can be outside of\n this domain\n \n \n saveForwardedEmail\n string\n Indicates whether to save a copy of any\n forwarded email\n \n \n lastName\n string\n A last name\n \n \n firstName\n string\n A first name\n \n \n generationQualifier\n string\n A person's generation (ex. Jr., Sr.,\n III)\n \n \n initials\n string\n A person's middle initial\n \n \n organizationUnit\n string\n A person's organization unit (ex.\n Marketing)\n \n \n businessNumber\n string\n Business phone number\n \n \n pagerNumber\n string\n Pager phone number\n \n \n homeNumber\n string\n Home phone number\n \n \n mobileNumber\n string\n Mobile phone number\n \n \n faxNumber\n string\n Fax phone number\n \n \n homeFaxNumber\n string\n Home Fax phone number\n \n \n businessStreet\n string\n The business street address for a\n contact\n \n \n businessCity\n string\n The business city for a contact\n \n \n businessState\n string\n The business state for a contact\n \n \n businessPostalCode\n string\n The business postal code\/zip code for a\n contact\n \n \n businessCountry\n string\n The business country for a contact\n \n \n homeStreet\n string\n The home street address for a contact\n \n \n homeCity\n string\n The home city for a contact\n \n \n homeState\n string\n The home state for a contact\n \n \n homePostalCode\n string\n The home postal code\/zip code for a\n contact\n \n \n homeCountry\n string\n The home country for a contact\n \n \n notes\n string\n Any notes for the mailbox\n \n \n title\n string\n A contact's title\n \n \n userID\n string\n A user ID for a contact\n \n \n organizationalStatus\n string\n A contact's organization status\n \n \n employeeType\n string\n A contact's employee type\n \n \n customID\n string\n A custom field that can be used to tie\n user mailboxes to external user\n systems\n \n \n enabled\n boolean\n Status of the mailbox: true = enabled,\n false = disabled.\n \n \n visibleInRackspaceEmailCompanyDirectory\n boolean\n Flag indicating whether the mailbox is\n visible in the company directory\n \n \n visibleInExchangeGAL\n boolean\n Flag indicating whether the mailbox is\n visible in the Exchange Global Address\n List\n \n \n currentUsage \n (read only)\n \n \n positive integer\n Current space used in mailbox (in MB)\n \n \n createdDate \n (read only)\n \n \n string\n Date of mailbox creation, EST Time (in\n string format)\n \n \n lastLogin \n (read only)\n \n \n string\n Date of last login, EST Time (in string\n format)\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith',\n 'text\/xml', { 'password' =\\u003E\n 'Secret13!@#', 'size' =\\u003E '2048',\n 'enableVacationMessage' =\\u003E 'true',\n 'vacationMessage' =\\u003E 'My Vacation\n Message', 'emailForwardingAddresses' =\\u003E\n 'sampletest@example.com,sampletest2@example.com',\n 'saveForwardedEmail' =\\u003E 'false'\n 'lastName' =\\u003E 'Testlastname', 'firstName'\n =\\u003E 'Jay', 'generationQualifier' =\\u003E\n 'III', 'initials' =\\u003E 'A',\n 'organizationUnit' =\\u003E 'IT',\n 'businessStreet' =\\u003E '123 Biz St.',\n 'businessCity' =\\u003E 'Blacksburg',\n 'businessState' =\\u003E 'VA',\n 'businessPostalCode' =\\u003E '24060',\n 'businessCountry' =\\u003E 'USA', 'homeStreet'\n =\\u003E '456 Home St.', 'homeCity' =\\u003E\n 'Charlotte', 'homeState' =\\u003E 'NC',\n 'homePostalCode' =\\u003E '28210',\n 'homeCountry' =\\u003E 'USA', 'notes' =\\u003E\n 'This is my note about my mailbox.', 'title'\n =\\u003E 'My Title', 'userID' =\\u003E 'J.Test',\n 'customID' =\\u003E '0123456789',\n 'organizationalStatus' =\\u003E 'OrgStatus',\n 'employeeType' =\\u003E 'Full-Time'\n 'visibleInExchangeGAL'=\\u003E'true',\n 'visibleInRackspaceEmailCompanyDirectory'\n =\\u003E 'false' }\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"PUT", "name":"Update Rackspace email mailbox", "description":"\n Updates a Rackspace email\n mailbox.\n To add a mailbox, use these form fields:\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n password\n string\n Password (Required for Add)\n \n \n size\n positive integer\n Mailbox size in megabytes (Required for\n Add)\n \n \n enableVacationMessage\n boolean\n indicates whether vacation message has\n been enabled\n \n \n vacationMessage\n string\n A mailbox's vacation message\n \n \n emailForwardingAddresses\n string\n A comma delimited list, Maximum 15\n addresses, 4 of which can be outside of\n this domain\n \n \n saveForwardedEmail\n string\n Indicates whether to save a copy of any\n forwarded email\n \n \n lastName\n string\n A last name\n \n \n firstName\n string\n A first name\n \n \n generationQualifier\n string\n A person's generation (ex. Jr., Sr.,\n III)\n \n \n initials\n string\n A person's middle initial\n \n \n organizationUnit\n string\n A person's organization unit (ex.\n Marketing)\n \n \n businessNumber\n string\n Business phone number\n \n \n pagerNumber\n string\n Pager phone number\n \n \n homeNumber\n string\n Home phone number\n \n \n mobileNumber\n string\n Mobile phone number\n \n \n faxNumber\n string\n Fax phone number\n \n \n homeFaxNumber\n string\n Home Fax phone number\n \n \n businessStreet\n string\n The business street address for a\n contact\n \n \n businessCity\n string\n The business city for a contact\n \n \n businessState\n string\n The business state for a contact\n \n \n businessPostalCode\n string\n The business postal code\/zip code for a\n contact\n \n \n businessCountry\n string\n The business country for a contact\n \n \n homeStreet\n string\n The home street address for a contact\n \n \n homeCity\n string\n The home city for a contact\n \n \n homeState\n string\n The home state for a contact\n \n \n homePostalCode\n string\n The home postal code\/zip code for a\n contact\n \n \n homeCountry\n string\n The home country for a contact\n \n \n notes\n string\n Any notes for the mailbox\n \n \n title\n string\n A contact's title\n \n \n userID\n string\n A user ID for a contact\n \n \n organizationalStatus\n string\n A contact's organization status\n \n \n employeeType\n string\n A contact's employee type\n \n \n customID\n string\n A custom field that can be used to tie\n user mailboxes to external user\n systems\n \n \n enabled\n boolean\n Status of the mailbox: true = enabled,\n false = disabled.\n \n \n visibleInRackspaceEmailCompanyDirectory\n boolean\n Flag indicating whether the mailbox is\n visible in the company directory\n \n \n visibleInExchangeGAL\n boolean\n Flag indicating whether the mailbox is\n visible in the Exchange Global Address\n List\n \n \n currentUsage \n (read only)\n \n \n positive integer\n Current space used in mailbox (in MB)\n \n \n createdDate \n (read only)\n \n \n string\n Date of mailbox creation, EST Time (in\n string format)\n \n \n lastLogin \n (read only)\n \n \n string\n Date of last login, EST Time (in string\n format)\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith',\n 'text\/xml', { 'password' =\\u003E\n 'Secret13!@#', 'size' =\\u003E '2048',\n 'enableVacationMessage' =\\u003E 'true',\n 'vacationMessage' =\\u003E 'My Vacation\n Message', 'emailForwardingAddresses' =\\u003E\n 'sampletest@example.com,sampletest2@example.com',\n 'saveForwardedEmail' =\\u003E 'false'\n 'lastName' =\\u003E 'Testlastname', 'firstName'\n =\\u003E 'Jay', 'generationQualifier' =\\u003E\n 'III', 'initials' =\\u003E 'A',\n 'organizationUnit' =\\u003E 'IT',\n 'businessStreet' =\\u003E '123 Biz St.',\n 'businessCity' =\\u003E 'Blacksburg',\n 'businessState' =\\u003E 'VA',\n 'businessPostalCode' =\\u003E '24060',\n 'businessCountry' =\\u003E 'USA', 'homeStreet'\n =\\u003E '456 Home St.', 'homeCity' =\\u003E\n 'Charlotte', 'homeState' =\\u003E 'NC',\n 'homePostalCode' =\\u003E '28210',\n 'homeCountry' =\\u003E 'USA', 'notes' =\\u003E\n 'This is my note about my mailbox.', 'title'\n =\\u003E 'My Title', 'userID' =\\u003E 'J.Test',\n 'customID' =\\u003E '0123456789',\n 'organizationalStatus' =\\u003E 'OrgStatus',\n 'employeeType' =\\u003E 'Full-Time'\n 'visibleInExchangeGAL'=\\u003E'true',\n 'visibleInRackspaceEmailCompanyDirectory'\n =\\u003E 'false' } \" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"DELETE", "name":"Delete Rackspace email mailbox", "description":"\n Deletes a Rackspace email\n mailbox.\n Remarks\n The mailbox and mailbox contents are deleted\n permanently.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith',\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/loginToken", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Create login token for Rackspace email mailbox", "description":"\n Creates a login token that a user\n can use to log in to a Rackspace email mailbox.\n Lists a login token, created date,\n and expiration date.\n Remarks\n \n \n The login token is valid until the current\n time (EST) passes the expiration date, and can\n be used until that point.\n \n \n Using the generate login token shown in the\n example below, a user can SSO into\n testmailbox@testapidomain.net at the following\n URL: https:\/\/{webmail\n address}\/mail\/src\/redirect.php?user_name={testmailbox@testapidomain.net}&emailaddress=testmailbox@testapidomain.net&sessionID=5b5e27419a363fc5b65bbb63d1c2d3f8\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/460896\/domains\/testapidomain.net\/rs\/mailboxes\/testmailbox\/loginToken',\n {}, 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <rsMailboxLoginToken\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:rsMailboxLoginToken\">\n <token>5b5e27419a363fc5b65bbb63d1c2d3f8<\/token>\n <dateCreated>9\/22\/2010 9:33:15\n AM<\/dateCreated>\n <expirationDate>9\/22\/2010 9:53:14\n AM<\/expirationDate>\n <\/rsMailboxLoginToken>", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/settings", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show mailbox spam settings", "description":"\n Shows the mailbox spam\n settings.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n \/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/settings',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <rsMailboxSpamSetting\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:RSMailboxSpamSetting\">\n <filterLevel>on<\/filterLevel>\n <rsEmailSettings>\n <spamHandling>toFolder<\/spamHandling>\n <hasFolderCleaner>false<\/hasFolderCleaner>\n <spamFolderAgeLimit>0<\/spamFolderAgeLimit>\n <spamFolderNumLimit>0<\/spamFolderNumLimit>\n <spamForwardingAddress \/>\n <\/rsEmailSettings>\n <\/rsMailboxSpamSetting>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"filterLevel\":\"on\",\"rsEmailSettings\":\"hasFolderCleaner\":false,\"spamFolderAgeLimit\":0,\"spamFolderNumLimit\":0,\"spamForwardingAddress\":\"\",\"spamHandling\":\"toFolder\"}}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update spam settings", "description":"\n Updates the mailbox spam\n settings.\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n filterLevel\n string\n This is a required field. Spam filter\n status: 'on', 'off', or 'exclusive'.\n Exclusive mode allows only email cleared\n by the Safelist.\n \n \n rsEmail.spamHandling\n string\n The string 'toFolder' will deliver\n the email to the user's Spam folder,\n 'delete' will delete the mail\n immediately, 'labelSubject' will\n prepend [SPAM] to the email's subject\n line, and 'toAddress' will send the\n email to a specified folder\n instead.Valid Field\n Combinations:\n (toFolder => hasFolderCleaner,\n spamFolderAgeLimit,\n spamFolderNumLimit)\n (toAddress =>\n spamForwardingAddress)\n \n \n \n rsEmail.hasFolderCleaner\n string\n This field is effective when\n rsEmail.spamHandling option is set to\n 'toFolder'. This field controls how\n the spam that is delivered o the spam\n folder is handled. There are currently\n two options supported for handling\n spam. First option is to set a limit\n after which the spam gets deleted. One\n can set limit on the number of days or\n on the number of spam emails. Second\n option is to never automatically\n delete the spam. For both these\n options to be enabled the\n rsEmail.hasFolderCleaner field should\n be set to 'true'.\n The folder cleaner fields\n (hasFolderCleaner, spamFolderAgeLimit,\n spamFolderNumLimit) are allowed only\n when the spamHandling field is set to\n 'toFolder'. In order to never delete\n the spam set the spamFolderAgeLimit\n and spamFolderNumLimit fields to\n 0.\n \n \n \n rsEmail.spamFolderAgeLimit\n string\n The number of days a message stays in the\n Spam folder before its deleted. This field\n is effective only when\n rsEmail.spamHandling is set to 'toFolder',\n and 'rs.hasFolderCleaner' is set to\n 'true'. This field cannot have negative\n value.\n \n \n rsEmail.spamFolderNumLimit\n string\n The maximum number of emails the Spam\n folder holds. This field is effective only\n when rsEmail.spamHandling is set to\n 'toFolder', and 'rs.hasFolderCleaner' is\n set to 'true'. This field cannot have\n negative value.\n \n \n rsEmail.spamForwardingAddress\n string\n The email address that Spam emails is\n redirected to. This field is required when\n the spamHandling field is set to\n 'toAddress'\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/100018\/domains\/resellerallservices.net\/rs\/mailboxes\/unittestexist\/spam\/settings',\n { 'filterLevel' =\\u003E 'on',\n 'rsEmail.spamHandling' =\\u003E 'toFolder',\n 'rsEmail.hasFolderCleaner' =\\u003E 'true',\n 'rsEmail.spamFolderAgeLimit' =\\u003E '7',\n 'rsEmail.spamFolderNumLimit' =\\u003E '100', },\n Formats.xml\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/blacklist", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List email addresses in mailbox blacklist", "description":"\n Lists the email addresses in a\n blacklist associated with a mailbox.\n Remarks\n \n \n The Index operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/blacklist',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <blacklist\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:blacklist\">\n <addresses>\n <address>name1@spam.com<\/address>\n <address>name2@spam.com<\/address>\n <\/addresses>\n <\/blacklist>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"addresses\":[\"name1@spam.com\",\"name2@spam.com\"]}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update email addresses in blacklist", "description":"\n Updates the email addresses in a\n blacklist.\n Remarks\n You can use a '%' as a wildcard in domains, but not\n in the TLD (.com, .net, etc). You cannot use wildcards\n in email addresses. For example, the following are\n allowed: @%.example.com, @examp%.com.\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n addList\n string\n Comma separated list of email addresses to\n add to the list\n \n \n removeList\n string\n Comma separated list of email addresses to\n remove from the list\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/jane.doe\/spam\/blacklist',\n { 'addList' =\\u003E\n '@%.example.com,abc@example.com', 'removeList'\n =\\u003E '@examp%.com' }, 'text\/xml'\"\n });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/blacklist/{email_address}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "email_address":{ "description":"The email\n address.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Add email address or domain to blacklist", "description":"\n Adds an email address or domain to\n the blacklist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/blacklist\/anyone@spam.com',\n {},'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"DELETE", "name":"Delete email address or domain from blacklist", "description":"\n Deletes an email address or domain\n from a blacklist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/blacklist\/anyone@yahoo.com',\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipblacklist", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List IP addresses in an IP blacklist", "description":"\n Lists the IP addresses in an IP\n blacklist associated with a mailbox.\n Remarks:\n \n \n The Index operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/ipblacklist',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <ipBlacklist\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:ipBlacklist\">\n <addresses>\n <ip>216.12.34.1<\/ip>\n <ip>216.12.34.2<\/ip>\n <\/addresses>\n <\/ipBlacklist>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"addresses\":[\"216.12.34.1\",\"216.12.34.2\"]}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update IP addresses in IP blacklist", "description":"\n Updates IP addresses in an IP\n blacklist.\n Remarks\n You can use a '%' as a wildcard in the last octets\n to specify IP ranges. For example: 216.12.34.%,\n 216.12.%.%, 216.%.%.%.\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n addList\n string\n Comma separated list of IP addresses to\n add to the list\n \n \n removeList\n string\n Comma separated list of IP addresses to\n remove from the list\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/jane.doe\/spam\/ipblacklist',\n { 'addList' =\\u003E '216.12.34.%,216.12.%.%',\n 'removeList' =\\u003E '216.%.%.%' },\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipblacklist/{ip_address}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "ip_address":{ "description":"The IP\n address.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Add IP address to IP blacklist", "description":"\n Adds an IP address to an IP\n blacklist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/blacklist\/216.12.34.1',\n {},'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"DELETE", "name":"Delete IP address from IP blacklist", "description":"\n Deletes an IP address from an IP\n blacklist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/ipblacklist\/216.12.34.1',\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/safelist", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List email addresses in safelist", "description":"\n Lists email addresses in a\n safelist.\n Remarks\n \n \n The Index operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/safelist',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <safelist\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:safelist\"> <addresses>\n <address>name1@notspam.com<\/address>\n <address>name2@notspam.com<\/address>\n <\/addresses>\n <\/safelist>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"addresses\":[\"name1@notspam.com\",\"name2@notspam.com\"]}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Updates email addresses in safelist", "description":"\n Updates email addresses in a\n safelist.\n Remarks\n You can use a '%' as a wild card in domains, but not\n in the TLD (.com, .net, etc). You cannot use wild\n cards in email addresses. For example, the following\n are allowed: @%.example.com, @examp%.com.\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n addList\n string\n Comma separated list of email addresses to\n add to the list\n \n \n removeList\n string\n Comma separated list of email addresses to\n remove from the list\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/jane.doe\/spam\/safelist',\n { 'addList' =\\u003E\n '@%.example.com,abc@example.com', 'removeList'\n =\\u003E '@examp%.com' }, 'text\/xml'\"\n });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/safelist/{email_address}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "email_address":{ "description":"The email\n address.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Add email address or domain to safelist", "description":"\n Adds an email address or domain to\n a safelist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/safelist\/anyone@yahoo.com',\n {},'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"DELETE", "name":"Delete email address or domain from safelist", "description":"\n Deletes an email address or domain\n from a safelist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/safelist\/anyone@yahoo.com',\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipsafelist", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List IP addresses in IP safelist", "description":"\n Lists IP addresses in an IP\n safelist.\n Remarks\n \n \n The Index operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/ipsafelist',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <ipSafelist\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:ipSafelist\">\n <addresses>\n <ip>192.168.0.1<\/ip>\n <ip>192.168.0.2<\/ip>\n <\/addresses>\n <\/ipSafelist>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"addresses\":[\"192.168.0.1\",\"192.168.0.2\"]}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update IP addresses in IP safelist", "description":"\n Updates IP addresses in an IP\n safelist.\n Remarks\n You can use a '%' as a wild card in the last octets\n to specify IP ranges. For example: 216.12.34.%,\n 216.12.%.%, 216.%.%.%.\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n addList\n string\n Comma separated list of IP addresses to\n add to the list\n \n \n removeList\n string\n Comma separated list of IP addresses to\n remove from the list\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/jane.doe\/spam\/ipsafelist',\n { 'addList' =\\u003E '216.12.34.%,216.12.%.%',\n 'removeList' =\\u003E '216.%.%.%' },\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipsafelist/{ip_address}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "ip_address":{ "description":"The IP\n address.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Add IP address to IP safelist", "description":"\n Adds an IP address to an IP\n safelist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/ipsafelist\/216.12.34.1',\n {},'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipsafelist/{email_address}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"DELETE", "name":"Delete IP address from IP safelist", "description":"\n Deletes an IP address from an IP\n safelist.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith\/spam\/ipsafelist\/216.12.34.1',\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/alias/{alias_name}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "customer_account_number":{ "description":"The customer\n account number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "alias_name":{ "description":"The alias\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show alias details", "description":"\n Shows alias details.\n Remarks\n \n \n The show operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/100018\/domains\/resellerallservices.net\/rs\/aliases\/alias1',\n Formats.xml\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <alias\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:alias\">\n <name>alias1<\/name>\n <emailAddressList>\n <emailAddress>jane.doe@resellerallservices.net<\/emailAddress>\n <emailAddress>e3@yahoo.com<\/emailAddress>\n <\/emailAddressList>\n <\/alias>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"emailAddressList\":{\"emailAddress\":[\"jane.doe@resellerallservices.net\",\"e3@yahoo.com\"]},\"name\":\"alias3\"}", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/alias/{alias_name}/{email_address}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "mailbox_name":{ "description":"The mailbox\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "customer_account_number":{ "description":"The customer\n account number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "alias_name":{ "description":"The alias\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "email_address":{ "description":"The email\n address.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Add email address to alias list", "description":"\n Adds an email address to a domain\n or non-domain email list.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/100018\/domains\/resellerallservices.net\/rs\/aliases\/alias1\/joe.schmoe@resellerallservices.net',\n {}, Formats.xml\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/storageNotification", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show storage notification settings", "description":"\n Shows storage notification settings\n for a specified Rackspace email mailbox.\n These settings control whether an email notification\n is sent to users when their mailbox reaches a certain\n capacity.\n Remarks\n \n \n The index operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/storageNotification',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<rsStorageNotification\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:rsStorageNotification\">\n <enabled>true<\/enabled>\n <notificationCC>test@email.net<\/notificationCC>\n <notificationMessage>The mailbox is\n getting full.<\/notificationMessage>\n <notificationPercentage>99<\/notificationPercentage>\n <\/rsStorageNotification>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"enabled\":true,\n \"notificationCC\":\"test@email.net\",\n \"notificationMessage\":\"Test\",\n \"notificationPercentage\":99}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update mailbox storage notification settings", "description":"\n Updates Rackspace email mailbox\n storage notification settings in a specified\n domain.\n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n enabled\n boolean\n Activates domain storage notification.\n (Required)\n \n \n notificationPercentage\n int\n The storage percentage that triggers the\n notification. (Required for Add) (Valid\n Values: 50, 60, 70, 80, 90, 99)\n \n \n notificationMessage\n string\n The notification message. (The special tag\n <*USER*> will substitute in the\n username. The special tag <*DOMAIN*>\n will substitute in the domain.)\n \n \n notificationCC\n string\n An email address the notification message\n will be carbon copied to.\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/12345678\/domains\/example.com\/rs\/mailboxes\/alex.smith',\n 'text\/xml', { 'enabled' =\\u003E 'true',\n 'notificationPercentage' =\\u003E '90',\n 'notificationMessage' =\\u003E 'Your mailbox\n \\\"\\u003C*USER*\\u003E@\\u003C*DOMAIN*\\u003E\\\" is\n almost full.', 'notificationCC' =\\u003E\n 'test@testdomain.com' } \" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/aliases", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List aliases", "description":"\n Lists aliases in a Rackspace\n domain.\n Remarks\n \n \n The show operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/rs\/aliases',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <aliasList\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:aliasList\"> <aliases>\n <alias> <name>alias1<\/name>\n <numberOfMembers>3<\/numberOfMembers>\n <\/alias> <\/aliases>\n <\/aliasList>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"aliases\":[{\"name\":\"alias1\",\"numberOfMembers\":3}]}", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/aliases/{alias_name}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Create alias", "description":"\n Creates an alias.\n Remarks\n Currently there is a limit of 50 domain emails and 4\n non-domain emails.\n \n Request Data\n \n \n \n Field Name\n \n \n Description\n \n \n \n \n \n aliasEmails\n Comma separated list of domain and\n non-domain emails.\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/100018\/domains\/resellerallservices.net\/rs\/aliases\/alias1',\n {'aliasEmails'=\\u003E'jane.doe@resellerallservices.net,\n joe.schmoe@resellerallservices.net,e1@yahoo.com,\n e2@gmail.com' }, Formats.xml\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"DELETE", "name":"Delete alias", "description":"\n Deletes an alias.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE\n '\/customers\/100018\/domains\/resellerallservices.net\/rs\/aliases\/alias1',\n Formats.xml\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"PUT", "name":"Bulk-update alias list", "description":"\n Updates an existing alias by\n replacing its contents with the new email addresses\n specified in the field aliasEmails.\n The following list shows the number of email\n addresses you can specify:\n \n \n \n \n 1 - 50 domain email addresses\n \n \n 1 - 4 non-domain addresses\n \n \n \n \n You must specify at least one email address.\n By default, the maximum combined total of\n email addresses you can specify is 50.\n \n \n You cannot delete a specific email address\n using DELETE. If you use DELETE with this\n operation, the entire alias is deleted.\n \n \n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n aliasEmail\n string\n A comma separated list of email\n addresses.\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/100487\/domains\/testdomain.com\/rs\/aliases\/alias_name',\n {\n aliasEmails=email@outsider.com,abc@yahoo.com,user1@domain.com,\n user2@domain.com }, 'text\/xml'\"\n });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/rs/aliases/{alias_name}/{email_address}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"DELETE", "name":"Delete email address from alias list", "description":"\n Deletes an email address from a\n domain or non-domain email list.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE\n '\/customers\/100018\/domains\/resellerallservices.net\/rs\/aliases\/alias1\/joe.schmoe@resellerallservices.net',\n {}, Formats.xml\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/mobilesync", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show auto-provisioning settings", "description":"\n Shows the auto-provisioning\n settings for a domain.\n Remarks\n \n \n The index operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/mobilesync',\n 'text\/xml'\\u003C 200\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <mobileSyncDomainInfo\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:mobileSyncDomainInfo\">\n <autoProvision>false<\/autoProvision>\n <\/mobileSyncDomainInfo>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"autoProvision\":true}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update Mobile Sync auto-provisioning settings", "description":"\n Updates settings to enable or\n disable Mobile Sync auto-provisioning for a\n domain.\n Special Considerations\n \n \n Enabling Mobile Sync auto-provisioning will\n add Mobile Sync to all existing Rackspace\n Email mailboxes on the domain. Any new\n Rackspace Email mailbox will have Mobile Sync\n as well.\n \n \n Disabling Mobile Sync auto-provisioning will\n only prevent new mailboxes having Mobile Sync\n when they are created. It will not disable\n Mobile Sync for the existing mailboxes. New\n mailboxes can still add Mobile Sync\n later.\n \n \n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n autoProvision\n Boolean\n 'True' for enable and 'False' for\n disable\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT\n '\/customers\/12345678\/domains\/example.com\/mobilesync',\n 'text\/xml', { 'autoProvision' =\\u003E 'True' }\n \" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/mobilesync/users", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List Mobile Sync users", "description":"\n Lists Mobile Sync users in a\n domain.\n This list contains all potential users of Mobile\n Sync and their current status\n (enabled\/disabled).\n Filter\/Search\n Searches may be filtered by the 'name' property\n using query methods ?startsWith= or ?contains=.\n Ordering\n Searches may be ordered by any of their properties.\n You can order by multiple properties. Some examples\n are:\n \n \n ?order=Name%20asc (Order by name\n ascending)\n \n \n ?order=Enabled%20desc (Order by enabled\n descending)\n \n \n ?order[0]=Name%20desc&order[1]=Enabled%20asc\n (Order by name descending then enabled\n ascending)\n \n \n Note: It is important to capitalize the first letter\n of the property.\n Paging\n Searches may be paged using ?size= and\/or ?offset=.\n Some examples are:\n \n \n ?size=3 (Return a maximum of 3\n results)\n \n \n ?offset=2 (Return results starting with the\n 3rd entry)\n \n \n ?size=5&offset=5 (Return 5 results\n starting with the 6th entry)\n \n \n Remarks\n \n \n The index operation only supports the GET\n HTTP verb.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET\n '\/customers\/12345678\/domains\/example.com\/mobilesync\/users?startsWith=a\\u0026size=50\\u0026offset=100\\u0026order=Enabled%20asc',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <mobileSyncUserList\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:mobileSyncUserList\">\n <offset>100<\/offset>\n <size>50<\/size>\n <total>1000<\/total> <users>\n <user> <name>alex<\/name>\n <domain>example.com<\/domain>\n <enabled>false<\/enabled>\n <details><\/details> <\/user>\n <user> <name>ann<\/name>\n <domain>example.com<\/domain>\n <enabled>true<\/enabled>\n <details><\/details> <\/user>\n <\/users>\n <\/mobileSyncUserList>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"offset\":100,\"size\":50,\"total\":1000,\"users\":[{\"details\":null,\"domain\":\"example.com\",\"enabled\":false,\"name\":\"alex\"},{\"details\":null,\"domain\":\"example.com\",\"enabled\":true,\"name\":\"ann\"}]}", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/mobilesync/users/enable", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Enable Mobile Sync", "description":"\n Enables the Mobile Sync feature for\n users.\n Special Considerations\n \n \n Enabling Mobile Sync for a user will\n increase your monthly bill.\n \n \n This is a throttled operation. Send as many\n users as you can at once instead of making the\n call multiple times, once per user.\n \n \n The maximum number of users per request is\n 250.\n \n \n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n users\n String array\n Comma-separated list of user names to\n enable\/disable\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/12345678\/domains\/example.com\/mobilesync\/users\/enable',\n 'text\/xml', { 'users' =\\u003E\n 'user1,user2,user3' } \" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/domains/{domain_name}/mobilesync/users/disable", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "domain_name":{ "description":"The domain\n name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Disable Mobile Sync", "description":"\n Disables the Mobile Sync feature\n for users.\n Special Considerations\n \n \n Enabling Mobile Sync for a user will\n increase your monthly bill.\n \n \n This is a throttled operation. Send as many\n users as you can at once instead of making the\n call multiple times, once per user.\n \n \n The maximum number of users per request is\n 250.\n \n \n \n Request Data\n \n \n \n Field Name\n \n \n Data Type\n \n \n Description\n \n \n \n \n \n users\n String array\n Comma-separated list of user names to\n enable\/disable\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST\n '\/customers\/12345678\/domains\/example.com\/mobilesync\/users\/disable',\n 'text\/xml', { 'users' =\\u003E\n 'user1,user2,user3' } \" });", "schema":"" } ], "responses":[  ] } ] } ] } ] } ] }