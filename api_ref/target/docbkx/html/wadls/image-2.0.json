{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"images{?limit,marker,name,visibility,member_status,owner,tag,status,size_min,size_max,sort_key,sort_dir}", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"List images", "description":"\n Lists public virtual machine (VM) images.\n This operation returns images you created, shared images that you accepted, and standard images. For more\n information about standard images, see . The response conforms to the schema\n found in .\n This operation returns a subset of the larger collection of images and a link that you can use to get the\n next set of images. Always check for the presence of a next link and use it as the URI\n in a subsequent GET request. Follow this pattern until a next link is no longer\n provided. The next link preserves any query parameters that you send in your initial request. You can use the\n first link to jump back to the first page of the collection. If you prefer to\n paginate through images manually, use the limit and marker\n parameters. \n The List Images operation accepts several types of query parameters that you can use to filter the results\n of the returned collection. \n A client can provide direct comparison filters by using most image attributes, such as\n name=Ubuntu, visibility=public, and so on. A client cannot filter on tags or\n anything defined as a link in the json-schema, such as self,\n file, or schema. \n You can use the size_min and size_max query parameters to\n perform greater-than and less-than filtering of images based on their size attribute.\n The size is measured in bytes and refers to the size of an image when it is stored on disk.\n For example, sending a size_min filter of 1048576 and size_max of 4194304 filters\n the container to include only images that are between 1 MB and 4 MB in size.\n You can sort the results of this operation by using the sort_key and\n sort_dir parameters. The API uses the natural sorting of whatever image attribute\n is provided as the sort_key. \n \n Public images may reach end-of-life and be removed from the base image list. This\n \n Hidden Base Images article\n contains images which have been removed from the base images list but which may still be\n available.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"images\":\n [\n {\n \"id\":\"da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"name\":\"cirros-0.3.0-x86_64-uec-ramdisk\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":2254249,\n \"checksum\":\"2cec138d7dae2aa59038ef8c9aec2390\",\n \"tags\":[\n \"ping\",\n \"pong\"\n ],\n \"created_at\":\"2012-08-10T19:23:50Z\",\n \"updated_at\":\"2012-08-10T19:23:50Z\",\n \"self\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"file\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\/file\",\n \"schema\":\"\/v2\/schemas\/image\"},\n {\n \"id\":\"0d5bcbc7-b066-4217-83f4-7111a60a399a\",\n \"name\":\"cirros-0.3.0-x86_64-uec\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":25165824,\n \"checksum\":\"2f81976cae15c16ef0010c51e3a6c163\",\n \"tags\":[ ],\n \"created_at\":\"2012-08-10T19:23:50Z\",\n \"updated_at\":\"2012-08-10T19:23:50Z\",\n \"self\":\"\/v2\/images\/0d5bcbc7-b066-4217-83f4-7111a60a399a\",\n \"file\":\"\/v2\/images\/0d5bcbc7-b066-4217-83f4-7111a60a399a\/file\",\n \"schema\":\"\/v2\/schemas\/image\"},\n {\n \"id\":\"e6421c88-b1ed-4407-8824-b57298249091\",\n \"name\":\"cirros-0.3.0-x86_64-uec-kernel\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":4731440,\n \"checksum\":\"cfb203e7267a28e435dbcb05af5910a9\",\n \"tags\":[ ],\n \"created_at\":\"2012-08-10T19:23:49Z\",\n \"updated_at\":\"2012-08-10T19:23:49Z\",\n \"self\":\"\/v2\/images\/e6421c88-b1ed-4407-8824-b57298249091\",\n \"file\":\"\/v2\/images\/e6421c88-b1ed-4407-8824-b57298249091\/file\",\n \"schema\":\"\/v2\/schemas\/image\"}\n ],\n \"first\":\"\/v2\/images?limit=3\",\n \"next\":\"\/v2\/images?limit=3&marker=e6421c88-b1ed-4407-8824-b57298249091\",\n \"schema\":\"\/v2\/schemas\/images\"\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"images\":\n [\n {\n \"id\":\"da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"name\":\"cirros-0.3.0-x86_64-uec-ramdisk\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":2254249,\n \"checksum\":\"2cec138d7dae2aa59038ef8c9aec2390\",\n \"tags\":[\n \"ping\",\n \"pong\"\n ],\n \"created_at\":\"2012-08-10T19:23:50Z\",\n \"updated_at\":\"2012-08-10T19:23:50Z\",\n \"self\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"file\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\/file\",\n \"schema\":\"\/v2\/schemas\/image\"},\n {\n \"id\":\"0d5bcbc7-b066-4217-83f4-7111a60a399a\",\n \"name\":\"cirros-0.3.0-x86_64-uec\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":25165824,\n \"checksum\":\"2f81976cae15c16ef0010c51e3a6c163\",\n \"tags\":[ ],\n \"created_at\":\"2012-08-10T19:23:50Z\",\n \"updated_at\":\"2012-08-10T19:23:50Z\",\n \"self\":\"\/v2\/images\/0d5bcbc7-b066-4217-83f4-7111a60a399a\",\n \"file\":\"\/v2\/images\/0d5bcbc7-b066-4217-83f4-7111a60a399a\/file\",\n \"schema\":\"\/v2\/schemas\/image\"},\n {\n \"id\":\"e6421c88-b1ed-4407-8824-b57298249091\",\n \"name\":\"cirros-0.3.0-x86_64-uec-kernel\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":4731440,\n \"checksum\":\"cfb203e7267a28e435dbcb05af5910a9\",\n \"tags\":[ ],\n \"created_at\":\"2012-08-10T19:23:49Z\",\n \"updated_at\":\"2012-08-10T19:23:49Z\",\n \"self\":\"\/v2\/images\/e6421c88-b1ed-4407-8824-b57298249091\",\n \"file\":\"\/v2\/images\/e6421c88-b1ed-4407-8824-b57298249091\/file\",\n \"schema\":\"\/v2\/schemas\/image\"}\n ],\n \"first\":\"\/v2\/images?limit=3\",\n \"next\":\"\/v2\/images?limit=3&marker=e6421c88-b1ed-4407-8824-b57298249091\",\n \"schema\":\"\/v2\/schemas\/images\"\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"images/{image_id}", "parameters":{ "image_id":{ "description":"\n Image ID stored through the image API, typically a UUID.\n", "type":"csapi:uuid", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get image details", "description":"\n Gets the details for the specified image. \n This operation shows the details for the image. The response body is a single image entity and conforms to\n the schema found in .\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"id\":\"da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"name\":\"cirros-0.3.0-x86_64-uec-ramdisk\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":2254249,\n \"checksum\":\"2cec138d7dae2aa59038ef8c9aec2390\",\n \"tags\":[\n \"ping\",\n \"pong\"\n ],\n \"created_at\":\"2012-08-10T19:23:50Z\",\n \"updated_at\":\"2012-08-10T19:23:50Z\",\n \"self\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"file\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\/file\",\n \"schema\":\"\/v2\/schemas\/image\"\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"id\":\"da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"name\":\"cirros-0.3.0-x86_64-uec-ramdisk\",\n \"status\":\"active\",\n \"visibility\":\"public\",\n \"size\":2254249,\n \"checksum\":\"2cec138d7dae2aa59038ef8c9aec2390\",\n \"tags\":[\n \"ping\",\n \"pong\"\n ],\n \"created_at\":\"2012-08-10T19:23:50Z\",\n \"updated_at\":\"2012-08-10T19:23:50Z\",\n \"self\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\",\n \"file\":\"\/v2\/images\/da3b75d9-3f4a-40e7-8a2c-bfab23927dea\/file\",\n \"schema\":\"\/v2\/schemas\/image\"\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PATCH", "name":"Update image", "description":"\n Updates the specified image. \n This operation allows you to update an image that you own. The request body must conform to the\n 'application\/openstack-images-v2.1-json-patch' media type. The response conforms to the\n schema found in .\n You can use the HTTP PATCH method to update certain standard properties, and to add, update,\n or remove custom, user-defined image properties. For more information, see in\n this guide. Here are some guidelines for custom, user-defined properties. \n \n Adding properties: You can add custom properties to your image.\n \n \n Naming properties: We recommend you name a custom property by prefixing your domain or\n name, and we do not allow you to use com.rackspace as the prefix. For\n example, com.mycompany.myproperty and\n myname.myproperty are valid, and\n com.rackspace.myproperty is not allowed.\n Do not use the prefix org.openstack since OpenStack might add a\n property with the same name.\n \n \n \n \n Deleting properties: You can delete any custom property which you previously added to your\n image.\n \n \n Updating properties: You can update any custom properties that you previously added to an image\n that you own, and you can update the following standard properties:\n \n \n name\n \n \n tags\n \n \n os_distro\n \n \n os_version\n \n \n protected\n \n \n container_format (changing this may render your image\n unusable)\n \n \n disk_format (changing this may render your image\n unusable)\n \n \n min_disk (changing this affects what flavors you can use with\n the image)\n \n \n min_ram (changing this affects what flavors you can use with the\n image)\n \n \n ramdisk_id (only applies to disk_format of\n ami)\n \n \n kernel_id (only applies to disk_format of\n ami)\n \n \n \n \n \n In general, you can update any properties you own, but do not expect to be able to update anyone else's\n properties. For example, you can't update any properties starting with com.rackspace, and\n you might not be able to update some properties starting with org.openstack.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"[\n {\"op\": \"replace\", \"path\": \"\/name\", \"value\": \"Fedora 17\"},\n {\"op\": \"replace\", \"path\": \"\/tags\", \"value\": [\"fedora\", \"beefy\"]}\n ]", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"[\n {\"op\": \"replace\", \"path\": \"\/name\", \"value\": \"Fedora 17\"},\n {\"op\": \"replace\", \"path\": \"\/tags\", \"value\": [\"fedora\", \"beefy\"]}\n ]", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"id\":\"e7db3b45-8db7-47ad-8109-3fb55c2c24fd\",\n \"name\":\"Fedora 17\",\n \"status\":\"queued\",\n \"visibility\":\"public\",\n \"tags\": [\"fedora\", \"beefy\"],\n \"created_at\":\"2012-08-11T17:15:52Z\",\n \"updated_at\":\"2012-08-11T17:15:52Z\",\n \"self\":\"\/v2\/images\/e7db3b45-8db7-47ad-8109-3fb55c2c24fd\",\n \"file\":\"\/v2\/images\/e7db3b45-8db7-47ad-8109-3fb55c2c24fd\/file\",\n \"schema\":\"\/v2\/schemas\/image\"\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"id\":\"e7db3b45-8db7-47ad-8109-3fb55c2c24fd\",\n \"name\":\"Fedora 17\",\n \"status\":\"queued\",\n \"visibility\":\"public\",\n \"tags\": [\"fedora\", \"beefy\"],\n \"created_at\":\"2012-08-11T17:15:52Z\",\n \"updated_at\":\"2012-08-11T17:15:52Z\",\n \"self\":\"\/v2\/images\/e7db3b45-8db7-47ad-8109-3fb55c2c24fd\",\n \"file\":\"\/v2\/images\/e7db3b45-8db7-47ad-8109-3fb55c2c24fd\/file\",\n \"schema\":\"\/v2\/schemas\/image\"\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete image", "description":"\n Deletes the specified image. \n This operation deletes the image. Make sure you set protected parameter to false\n (Boolean) before performing the delete. If the operation succeeds, it returns an HTTP\n 204 status code with no response body. \n An attempt to delete an image with the protected parameter set to\n true (boolean) results in a response code HTTP 403.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"images/{image_id}/tags/{tag}", "parameters":{ "image_id":{ "description":"\n Image ID stored through the image API, typically a UUID.\n", "type":"csapi:uuid", "required":"", "default":"", "example":"", "values":[  ] }, "tag":{ "description":"\n Image tag (may be up to 255 characters in length).\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"PUT", "name":"Add image tag", "description":"\n Adds the specified tag to the specified image. \n This operation adds the specified tag to the specified image. \n Include the tag you want to add in the request URI {tag} path segment of the\n URI. For example, to tag image e7db3b45-8db7-47ad-8109-3fb55c2c24fd with 'miracle', you would use: PUT\n \/v2\/images\/e7db3b45-8db7-47ad-8109-3fb55c2c24fd\/tags\/miracle. The request body is ignored. \n An image can only be tagged once with a specific string. Multiple attempts to tag an image with the same\n string will result in a single instance of that string being added to the image's tags list.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete image tag", "description":"\n Deletes the specified tag from the image. \n This operation deletes the specified tag from the specified image. \n Include the tag you want to remove in the request URI {tag} path segment of the\n URI. For example, to remove the image tag 'miracle' from image e7db3b45-8db7-47ad-8109-3fb55c2c24fd, you\n would use: DELETE \/v2\/images\/e7db3b45-8db7-47ad-8109-3fb55c2c24fd\/tags\/miracle. The request body\n is ignored. \n An image tag can only be removed once. Subsequent attempts to remove the same tag will result in an\n HTTP 404 error.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"images/{image_id}/members{?visibility,member_status,owner}", "parameters":{ "image_id":{ "description":"\n Image ID stored through the image API, typically a UUID.\n", "type":"csapi:uuid", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Create image member", "description":"\n Adds the specified account ID\/tenant ID specified in the request\n body as an image member.\n This operation allows you to add users to the list of members with whom the image is shared. The member\n status of a newly created image member is pending. The response conforms to the schema\n found in .\n If the user making the call is not the image owner, the response is HTTP 404.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"member\": \"8989447062e04a818baf9e073fd04fa7\"\n}", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2013-09-20T19:22:19Z\",\n \"image_id\": \"a96be11e-8536-4910-92cb-de50aa19dfe6\",\n \"member_id\": \"8989447062e04a818baf9e073fd04fa7\",\n \"schema\": \"\/v2\/schemas\/member\",\n \"status\": \"pending\",\n \"updated_at\": \"2013-09-20T19:25:31Z\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"GET", "name":"List image members", "description":"\n Returns collection of members (users) with whom the image has been shared.\n This operation returns collection of members (users) with whom the image has been shared. The response\n conforms to the schema found in\n .\n If a user with whom this image is shared makes this call, the member list contains only information for\n that user. If a user with whom this image has not been shared makes this call, the response is\n HTTP 404. \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"members\": [\n {\n \"created_at\": \"2013-10-07T17:58:03Z\",\n \"image_id\": \"dbc999e3-c52f-4200-bedd-3b18fe7f87fe\",\n \"member_id\": \"123456789\",\n \"schema\": \"\/v2\/schemas\/member\",\n \"status\": \"pending\",\n \"updated_at\": \"2013-10-07T17:58:03Z\"\n },\n {\n \"created_at\": \"2013-10-07T17:58:55Z\",\n \"image_id\": \"dbc999e3-c52f-4200-bedd-3b18fe7f87fe\",\n \"member_id\": \"987654321\",\n \"schema\": \"\/v2\/schemas\/member\",\n \"status\": \"accepted\",\n \"updated_at\": \"2013-10-08T12:08:55Z\"\n }\n ],\n \"schema\": \"\/v2\/schemas\/members\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"images/{image_id}/members/{member_id}", "parameters":{ "image_id":{ "description":"\n Image ID stored through the image API, typically a UUID.\n", "type":"csapi:uuid", "required":"", "default":"", "example":"", "values":[  ] }, "member_id":{ "description":"\n Image member ID. For example, the tenant ID of the user with whom the image is being\n shared.\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get image member details", "description":"\n Gets the details for the specified image member. \n This operation shows details of the image member. The response conforms to the schema found in\n .\n To get a successful response, either the image owner must make the call or the\n tenant_id of the user making the call must match the specified\n member_id. Otherwise the response is HTTP 404.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-20T04:15:17Z\",\n \"image_id\": \"634985e5-0f2e-488e-bd7c-928d9a8ea82a\",\n \"member_id\": \"46a12bfd09c8459483c03e1b0d71bda8\",\n \"schema\": \"\/v2\/schemas\/member\",\n \"status\": \"pending\",\n \"updated_at\": \"2014-02-20T04:15:17Z\"\n}", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-20T04:15:17Z\",\n \"image_id\": \"634985e5-0f2e-488e-bd7c-928d9a8ea82a\",\n \"member_id\": \"46a12bfd09c8459483c03e1b0d71bda8\",\n \"schema\": \"\/v2\/schemas\/member\",\n \"status\": \"pending\",\n \"updated_at\": \"2014-02-20T04:15:17Z\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete image member", "description":"\n Deletes the specified account ID\/tenant ID from the member list of\n the specified image.\n This operation deletes the image member from the image. This call, which can only be made by the image\n owner, removes users from the list of members who have access to a shared image.\n If the {member_id} is not a member of the specified image, the response is\n HTTP 404\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update image member", "description":"\n Sets the specified status for the specified member of the specified image.\n This operation updates the image member. The response conforms to the schema found in\n .\n If the call is made by the image owner, the response is HTTP 403 (Forbidden).\n If the call is made by a user who is not the owner and whose tenant ID is not the\n same as the {member_id} is the operation URI, the response is HTTP 404.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"status\": \"accepted\"\n}", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2013-09-20T19:22:19Z\",\n \"image_id\": \"a96be11e-8536-4910-92cb-de50aa19dfe6\",\n \"member_id\": \"8989447062e04a818baf9e073fd04fa7\",\n \"schema\": \"\/v2\/schemas\/member\",\n \"status\": \"accepted\",\n \"updated_at\": \"2013-09-20T20:15:31Z\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"tasks", "parameters":{  }, "headers":{  }, "actions":[ { "method":"POST", "name":"Task to import image", "description":"\n Imports an image using an asynchronous task request. See the request body for specific\n details.\n This operation imports an image using an asynchronous task request. The request begins the import process\n and returns the task UUID that can be subsequently polled to determine the status of the import by using the\n operation. The response conforms to the schema\n found in .\n To successfully import an image, \n \n \n Format the image using the VHD format.\n \n If you are importing an image that you have previously exported from Cloud Images in another\n region of the Rackspace open cloud, your image is already in the appropriate format. You can find\n information on\n preparing a custom image for import\n in the Rackspace Knowledge Center.\n \n \n \n Store the image in your Cloud Files account.\n \n \n \n As described in the\n \n Rackspace Terms of Service,\n you should be aware of and respect all licensing restrictions that apply to any software that you import\n into the Rackspace open cloud. For example, Microsoft licensing rules are very restrictive. Microsoft\n product use rights do not allow the use of License Mobility for Windows licenses. Given the limitations\n related to this software platform, image import is not available for Windows images. If you have\n questions, please contact the software vendor. \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"type\": \"import\",\n \"input\": {\n \"image_properties\": {\n \"name\": \"My excellent custom image\"\n }, \n \"import_from\": \"exports\/my-excellent-image.vhd\"\n }\n}", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T02:58:46Z\", \n \"id\": \"fc29a67c-ad76-49bc-a317-a5f38dcb44c0\", \n \"input\": {\n \"image_properties\": {\n \"name\": \"My excellent custom image\"\n }, \n \"import_from\": \"exports\/my-excellent-image.vhd\"\n }, \n \"message\": \"None\", \n \"owner\": \"00000123\", \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/fc29a67c-ad76-49bc-a317-a5f38dcb44c0\", \n \"status\": \"pending\", \n \"type\": \"import\", \n \"updated_at\": \"2014-02-26T02:58:46Z\"\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Task to export image", "description":"\n Exports an image using an asynchronous task request. See the request body for specific\n details.\n This operation exports an image in VHD format using an asynchronous task request to export. The request\n begins the export process and returns the task UUID that can be subsequently polled to determine the status\n of the export by using the operation. The\n response conforms to the schema found in . \n \n The exported image is deposited in your Cloud Files account and is identified by the\n image_uuid with a .vhd extension. You are responsible for ensuring that any\n distribution of your image from the Rackspace open cloud complies with any licensing restrictions.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"type\": \"export\",\n \"input\": \n {\n \"image_uuid\": \"ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6\", \n \"receiving_swift_container\": \"exports\"\n }\n}", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T02:01:13Z\", \n \"id\": \"7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"input\": \n {\n \"image_uuid\": \"ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6\", \n \"receiving_swift_container\": \"exports\"\n }, \n \"message\": \"None\", \n \"owner\": \"00000123\", \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"status\": \"pending\", \n \"type\": \"export\", \n \"updated_at\": \"2014-02-26T02:01:13Z\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"415", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"GET", "name":"List tasks", "description":"\n Lists tasks.\n This operation returns list of tasks, with basic details about each task. The response conforms to the\n schema found in .\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"first\": \"\/v2\/tasks\", \n \"schema\": \"\/v2\/schemas\/tasks\", \n \"tasks\": [\n {\n \"created_at\": \"2014-02-26T02:04:18Z\", \n \"id\": \"baef2134-9c33-47b9-9d63-c29a2a224715\", \n \"owner\": \"00000123\", \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/baef2134-9c33-47b9-9d63-c29a2a224715\", \n \"status\": \"pending\", \n \"type\": \"export\", \n \"updated_at\": \"2014-02-26T02:04:18Z\"\n }, \n {\n \"created_at\": \"2014-02-26T02:01:13Z\", \n \"id\": \"7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"owner\": \"00000123\", \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"status\": \"processing\", \n \"type\": \"export\", \n \"updated_at\": \"2014-02-26T02:01:13Z\"\n }\n ]\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"tasks/{taskID}", "parameters":{ "task_id":{ "description":"\n The task id. This task id is the same as the id parameter returned in the Import Task or Export\n Task operation response body.\n", "type":"csapi:uuid", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get task details", "description":"\n Gets the details for the specified task.\n This operation shows the details for the specified task, including the status, so you'll know when the\n import or export task completes and whether it worked. For more information on statuses, see\n . The response conforms to the schema found in\n .\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T02:58:46Z\", \n \"id\": \"fc29a67c-ad76-49bc-a317-a5f38dcb44c0\", \n \"input\": {\n \"image_properties\": {\n \"name\": \"My excellent custom image\"\n }, \n \"import_from\": \"exports\/my-excellent-image.vhd\"\n }, \n \"message\": \"None\", \n \"owner\": \"00000123\", \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/fc29a67c-ad76-49bc-a317-a5f38dcb44c0\", \n \"status\": \"pending\", \n \"type\": \"import\", \n \"updated_at\": \"2014-02-26T02:58:46Z\"\n}\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T03:02:23Z\", \n \"expires_at\": \"2014-02-28T03:28:18Z\", \n \"id\": \"d8dd8c24-2534-473c-881f-9097bc784068\", \n \"input\": {\n \"image_properties\": {\n \"name\": \"My excellent custom image\"\n }, \n \"import_from\": \"exports\/my-excellent-image.vhd\"\n }, \n \"message\": \"None\", \n \"owner\": \"00000123\", \n \"result\": {\n \"image_id\": \"1d944ab7-6748-4f3c-b7e2-3553bf006677\"\n }, \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/d8dd8c24-2534-473c-881f-9097bc784068\", \n \"status\": \"success\", \n \"type\": \"import\", \n \"updated_at\": \"2014-02-26T03:28:18Z\"\n}", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T02:58:46Z\", \n \"expires_at\": \"2014-02-28T02:58:49Z\", \n \"id\": \"fc29a67c-ad76-49bc-a317-a5f38dcb44c0\", \n \"input\": \n {\n \"image_properties\": \n {\n \"name\": \"my imported image\"\n }, \n \"import_from\": \"nonexistentcontainer\/noimage.vhd\"\n }, \n \"message\": \"Error: Image not found for import. Possible invalid location\", \n \"owner\": \"00000123\", \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/fc29a67c-ad76-49bc-a317-a5f38dcb44c0\", \n \"status\": \"failure\", \n \"type\": \"import\", \n \"updated_at\": \"2014-02-26T02:58:49Z\"\n}", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T02:01:13Z\", \n \"id\": \"7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"input\": \n {\n \"image_uuid\": \"ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6\", \n \"receiving_swift_container\": \"exports\"\n }, \n \"message\": \"None\", \n \"owner\": \"00000123\", \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"status\": \"pending\", \n \"type\": \"export\", \n \"updated_at\": \"2014-02-26T02:01:13Z\"\n}", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T02:01:13Z\", \n \"expires_at\": \"2014-02-28T02:16:50Z\", \n \"id\": \"7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"input\": \n {\n \"image_uuid\": \"ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6\", \n \"receiving_swift_container\": \"exports\"\n }, \n \"message\": \"None\", \n \"owner\": \"00000123\", \n \"result\": \n {\n \"export_location\": \"exports\/ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6.vhd\"\n }, \n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/7bdc8ede-9098-4d79-9477-697f586cb333\", \n \"status\": \"success\", \n \"type\": \"export\", \n \"updated_at\": \"2014-02-26T02:16:50Z\"\n}", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"created_at\": \"2014-02-26T02:04:18Z\", \n \"expires_at\": \"2014-02-28T02:25:12Z\", \n \"id\": \"baef2134-9c33-47b9-9d63-c29a2a224715\", \n \"input\": \n {\n \"image_uuid\": \"ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6\", \n \"receiving_swift_container\": \"exports\"\n }, \n \"message\": \"Swift already has an object with id 'ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6.vhd' in container 'exports'\", \n \"owner\": \"00000123\",\n \"schema\": \"\/v2\/schemas\/task\", \n \"self\": \"\/v2\/tasks\/baef2134-9c33-47b9-9d63-c29a2a224715\", \n \"status\": \"failure\", \n \"type\": \"export\", \n \"updated_at\": \"2014-02-26T02:25:12Z\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] } ] } ] }