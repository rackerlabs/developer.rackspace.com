{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"v1/{account}{?limit,marker,end_marker,format,prefix,delimiter}", "parameters":{ "account":{ "description":"\n Your\n unique account identifier.\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show Account Details and List Containers", "description":"\n \n Shows details for a specified account and lists containers, sorted by name, in the account.\n \n This operation lists the storage containers in your account and sorts them by name. You perform the operation against your storage account URL.\n The list is limited to 10,000 containers at a time. For information on limiting and navigating the list, see the following section, \"Controlling a Large List of Containers\". \n Container names are sorted based on a binary comparison, a built-in collating function\n that compares string data by using SQLite's memcmp() function,\n regardless of text encoding. For more information, see http:\/\/www.sqlite.org\/datatype3.html#collation.\n A list of containers is returned in the response body, one container per line. \n The character sequence used to create the newline that separates the container names is a single \\n. If you want to parse these listings,\n you send an Accept: application\/json or Accept: application\/xml header with the request to get the results in JSON or XML.\n An HTTP response status code of 200 through 299 indicates success. A 200 (OK) code is returned if there are containers, and a 204 (No Content) code is returned if there are no containers.\n \n Format Container List \n If you append the ?format=xml or ?format=json query parameter to the storage account URL, the service returns container information serialized in the specified format. To format your results, you must place this query parameter before any other parameters. \n The example responses in this section are formatted for readability. \n Controlling a Large List of Containers\n A GET operation on the storage account URL returns a list of up to 10,000 container names. You can control and limit this list of results by using the marker, end_marker, and limit parameters. These parameters provide a mechanism for iterating through the entire list of containers. \n The marker parameter tells Cloud Files where to begin your list of containers, and the end_marker parameter specifies where to end the list. You can use them independently or together, separated by an ampersand (&). If you do not specify them, your list displays up to 10,000 containers. Note that the marker and end_marker values must be URL-encoded before you send the HTTP request.\n You can use the limit parameter to reduce the number of returned objects. \n If the number of returned items equals the limit used (or 10,000 if no limit was specified), you can assume there are more object names.\n At this time, a prefix query parameter is not supported at the account level.\n As an example, start with an account that has five container names, as follows:\n \n \n apples\n bananas\n kiwis\n oranges\n pears\n \n Use a limit of 2 to show how things work:\n \n GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123?limit=2\n Host: storage.clouddrive.com\n X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n\n apples\n bananas\n \n Because the operation returned two items, assume there are more container names to list and make another request with a marker of the last item returned:\n \n GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123?limit=2&marker=bananas\n Host: storage.clouddrive.com\n X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n \n kiwis\n oranges \n \n Again, two items are returned, and you assume that there might be more. So you make another GET request for two more:\n \n GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123?limit=2&marker=oranges\n Host: storage.clouddrive.com\n X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n \n pears\n \n This one-item response shows fewer than the limit of 2 container names requested, and indicates that this is the end of the list.\n By using the end_marker parameter, you can limit the result set to container names less than the given value.\n \n GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123?end_marker=oranges\n Host: storage.clouddrive.com\n X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n \n apples\n bananas\n kiwis\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123?format=xml HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123?format=json HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c", "schema":"" } ], "responses":[ { "name":"200 204", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"HTTP\/1.1 200 OK\nContent-Length: 262\nX-Account-Object-Count: 1\nX-Timestamp: 1389453423.35964\nX-Account-Meta-Subject: Literature\nX-Account-Bytes-Used: 14\nX-Account-Container-Count: 2\nContent-Type: application\/xml; charset=utf-8\nAccept-Ranges: bytes\nX-Trans-Id: tx69f60bc9f7634a01988e6-0052d9544b\nDate: Fri, 17 Jan 2014 16:03:23 GMT\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<account name=\"my_account\">\n <container>\n <name>janeausten<\/name>\n <count>0<\/count>\n <bytes>0<\/bytes>\n <\/container>\n <container>\n <name>marktwain<\/name>\n <count>1<\/count>\n <bytes>14<\/bytes>\n <\/container>\n<\/account>", "schema":"" }, { "name":"200 204", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"HTTP\/1.1 200 OK\nContent-Length: 96\nX-Account-Object-Count: 1\nX-Timestamp: 1389453423.35964\nX-Account-Meta-Subject: Literature\nX-Account-Bytes-Used: 14\nX-Account-Container-Count: 2\nContent-Type: application\/json; charset=utf-8\nAccept-Ranges: bytes\nX-Trans-Id: tx274a77a8975c4a66aeb24-0052d95365\nDate: Fri, 17 Jan 2014 15:59:33 GMT\n\n[\n {\n \"count\": 0,\n \"bytes\": 0,\n \"name\": \"janeausten\"\n },\n {\n \"count\": 1,\n \"bytes\": 14,\n \"name\": \"marktwain\"\n }\n]", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Create or Update Account Metadata", "description":"\n \n Creates or updates account metadata.\n \n You can associate custom metadata headers with the account level URI. To create or update an account metadata header, submit a POST operation. These headers must have the format X-Account-Meta-name. Replace name with name of your metadata. (In the following example request, the metadata headers are X-Account-Meta-Book and X-Account_Meta-Subject.) \n Subsequent POST operations for the same key\/value pair overwrite the previous value. \n A status code of 200 through 299 indicates success. \n This operation does not require a request body and does not return a response body.\n To confirm your metadata changes, you can perform a HEAD operation on the account. (For information, see .) Do not send the metadata in your HEAD operation. \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"POST \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123 HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nX-Account-Meta-Book: MobyDick\nX-Account-Meta-Subject: Whaling", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"HTTP\/1.1 204 No Content\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: tx1b4be419af2c4d688ee4d-0052cf1ea4dfw1\nDate: Thu, 09 Jan 2014 22:11:48 GMT", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"HEAD", "name":"Get Account Metadata", "description":"\n \n Gets account metadata.\n Perform a HEAD operation on your storage account URL to get the following information: \n \n \n The number of containers that you have in your account (X-Account-Container-Count)\n \n \n The number of objects that are stored in the containers in your account (X-Account-Object-Count)\n \n \n The total bytes that are stored for your account (X-Account-Bytes-Used)\n \n \n \n An HTTP status code of 200 through 299 indicates success. In the example, a 204 (No Content) status code is returned. A 401 (Unauthorized) status code is returned for an invalid account or authentication token. \n This operation does not require a request body and does not return a response body.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"HEAD \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123 HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"HTTP\/1.1 204 No Content\nContent-Length: 0\nX-Account-Object-Count: 573\nX-Timestamp: 1369081921.78518\nX-Account-Meta-Temp-Url-Key: ed6a04a9f70458575112811a9af5284e\nX-Account-Bytes-Used: 14268918\nX-Account-Container-Count: 1\nContent-Type: text\/plain; charset=utf-8\nAccept-Ranges: bytes\nX-Trans-Id: tx8e82a77399724e40a90e8-0052cf0e52dfw1\nDate: Thu, 09 Jan 2014 21:02:10 GMT", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Delete Account Metadata", "description":"\n \n Deletes account metadata.\n To delete a metadata header, use the POST operation to send\n an empty value for that particular header.\n If the tool that you use to communicate with Cloud Files does not support empty headers, such as an older version of cURL, send the X-Remove-Account-Meta-name: arbitrary value header. The arbitrary value is ignored. In the following example request, X-Remove-Account-Meta-Book: x is used.\n A status code of 200 through 299 indicates\n success. \n This operation does not require a request body and does not return a response body.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"POST \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123 HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nX-Remove-Account-Meta-Book: x", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"HTTP\/1.1 204 No Content\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: txe749a717ee5e4da7a6895-0052cf2286dfw1\nDate: Thu, 09 Jan 2014 22:28:22 GMT", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"v1/{account}/{container}{?limit,marker,end_marker,prefix,format,delimiter,path}", "parameters":{ "account":{ "description":"\n Your\n unique account identifier.\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] }, "container":{ "description":"\n \n The unique identifier of the\n container.\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show Container Details and List Objects", "description":"\n Shows details for a specified container and lists objects, sorted by name, in the container.\n This operation against a storage container name retrieves a list of the objects\n stored in the container. You can use optional query parameters to refine the list results. \n A request with no query parameters returns the full list of object names stored in the\n container, up to 10,000 names. The response body shows the object names as one object name per line. Specifying the query parameters filters the full\n list and returns a subset of objects. For information about limiting and controlling the list, see the following “Controlling a Large List of Objects” section.\n \n An HTTP response status code of 200 through 299 indicates success. A status code of 200 (OK) is returned if there are objects, and a 204 (No Content) is returned if there are no objects. If the container does not\n exist, or if an incorrect account is specified, a status code 404 (Not Found) is returned.\n \n Format Object List\n If you append the format=xml or the format=json query parameter to the storage account URL, the service returns additional object information serialized in the specified format. The status codes are the same for format=xml and format=json. However, Content-Type matches the specified format. The example responses in this section are formatted for readability.\n \n Controlling a Large List of Objects\n A GET request against the container account URL returns a list of up to 10,000 objects. You can limit and control this list of results by using the marker, end_marker, and limit parameters.\n The marker parameter tells Cloud Files where to begin your list of objects, and the end_marker parameter tells where to end the list. You can use them either independently or together, separated by an ampersand (&). If you do not specify them, your list displays up to 10,000 objects. Note that the marker and end_marker values must be URL-encoded before you send the HTTP request.\n You can use the limit parameter to reduce the number of returned objects.\n If the number of returned items equals the limit used (or 10,000 if no limit was specified), you can assume there are more object names.\n As an example, use a listing of 5 object names, as follows:\n \n \n gala\n grannysmith\n honeycrisp\n jonagold\n reddelicious\n \n Use a limit of 2 to show how things work:\n \n GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/AppleType?limit=2\n Host: storage.clouddrive.com\n X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n \n gala\n grannysmith\n \n Because the request returned two items, assume there are more object names to list and make another request with a marker of the last item returned:\n \n GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/AppleType?limit=2&marker=grannysmith\n Host: storage.clouddrive.com\n X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n \n honeycrisp\n jonagold\n \n Again, two items are returned, and you assume that there might be more. So you make another GET request for two more:\n \n GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/AppleType?limit=2&marker=jonagold\n Host: storage.clouddrive.com\n X-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n \n reddelicious\n \n This one-item response shows fewer than the limit of two object names requested, and indicates that this is the end of the list. \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer?\nformat=xml HTTP\/1.1\nHost: storage.clouddrive.com\nX-Storage-Token: 182f9c0af0e828cfe3281767d29d19f4", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer?\nformat=json HTTP\/1.1\nHost: storage.clouddrive.com\nX-Storage-Token: 182f9c0af0e828cfe3281767d29d19f4", "schema":"" } ], "responses":[ { "name":"200 204", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"HTTP\/1.1 200 OK\nContent-Length: 500\nX-Container-Object-Count: 2\nAccept-Ranges: bytes\nX-Container-Meta-Book: TomSawyer\nX-Timestamp: 1389727543.65372\nX-Container-Bytes-Used: 26\nContent-Type: application\/xml; charset=utf-8\nX-Trans-Id: txc75ea9a6e66f47d79e0c5-0052d6be76\nDate: Wed, 15 Jan 2014 16:59:35 GMT\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<container name=\"marktwain\">\n <object>\n <name>goodbye<\/name>\n <hash>451e372e48e0f6b1114fa0724aa79fa1<\/hash>\n <bytes>14<\/bytes>\n <content_type>application\/octet-stream<\/content_type>\n <last_modified>2014-01-15T16:41:49.390270<\/last_modified>\n <\/object>\n <object>\n <name>helloworld<\/name>\n <hash>ed076287532e86365e841e92bfc50d8c<\/hash>\n <bytes>12<\/bytes>\n <content_type>application\/octet-stream<\/content_type>\n <last_modified>2014-01-15T16:37:43.427570<\/last_modified>\n <\/object>\n<\/container>", "schema":"" }, { "name":"200 204", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"HTTP\/1.1 200 OK\nContent-Length: 341\nX-Container-Object-Count: 2\nAccept-Ranges: bytes\nX-Container-Meta-Book: TomSawyer\nX-Timestamp: 1389727543.65372\nX-Container-Bytes-Used: 26\nContent-Type: application\/json; charset=utf-8\nX-Trans-Id: tx26377fe5fab74869825d1-0052d6bdff\nDate: Wed, 15 Jan 2014 16:57:35 GMT\n\n[\n {\n \"hash\":\"451e372e48e0f6b1114fa0724aa79fa1\",\n \"last_modified\":\"2014-01-15T16:41:49.390270\",\n \"bytes\":14,\n \"name\":\"goodbye\",\n \"content_type\":\"application\/octet-stream\"\n },\n {\n \"hash\":\"ed076287532e86365e841e92bfc50d8c\",\n \"last_modified\":\"2014-01-15T16:37:43.427570\",\n \"bytes\":12,\n \"name\":\"helloworld\",\n \"content_type\":\"application\/octet-stream\"\n }\n ]", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PUT", "name":"Create Container", "description":"\n \n Creates a container.\n \n This operation creates a Cloud Files container. Containers are storage compartments for your data. The URL-encoded name must be less than 256 bytes and cannot contain a forward slash character (\/). You can create up to 500,000 containers in your Cloud Files account.\n You can assign custom metadata for containers by including additional HTTP headers with an X-Container-Meta- prefix on the POST request. For details on setting custom metadata, see . \n Using custom container metadata, you can create information in the header to effectively tag a container. The container metadata restrictions are the same as the restrictions for object metadata. You can have a maximum of 4096 bytes of metadata for the container, with a maximum of 90 distinct metadata items. Each distinct metadata item can have a name length of up to 128 characters with a maximum of 256 bytes in the value. Any valid UTF-8 encoded string value is allowed for metadata. In addition for custom metadata, we recommend that you URL-encode any non-ASCII values by using a % symbol followed by the two-digit hexadecimal ISO-Latin code for the character.\n A status code of 201 (Created) indicates that the container was created as requested. Container PUT requests are idempotent, and a code of 202 (Accepted) is returned if the container existed prior to the request. If you make a PUT request to a container with an X-Container-Meta- prefix in the header, your GET or HEAD request responses carry the metadata prefix from the container in subsequent requests.\n This operation does not require a request body and does not return a response body.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"PUT \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"PUT \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nX-Container-Meta-InspectedBy: JackWolf", "schema":"" } ], "responses":[ { "name":"201 202", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"HTTP\/1.1 201 Created\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: tx7f6b7fa09bc2443a94df0-0052d58b56\nDate: Tue, 14 Jan 2014 19:09:10 GMT", "schema":"" }, { "name":"201 202", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"HTTP\/1.1 201 Created\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: tx06021f10fc8642b2901e7-0052d58f37\nDate: Tue, 14 Jan 2014 19:25:43 GMT", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete Container", "description":"\n Deletes an empty container.\n A DELETE operation against a storage container permanently removes it. The container must be empty before it can be deleted.\n Before using DELETE, you can use a GET operation against the container to list any objects that it contains. (See .)\n A status code of 204 (No Content) indicates\n success. A status code of 404 (Not Found) is returned if the requested container is not found. A status code of 409\n (Conflict) is returned if the container is not empty.\n This operation does not require a request body and does not return a response body.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"DELETE \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"HTTP\/1.1 204 No Content\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: txf76c375ebece4df19c84c-0052d81f14\nDate: Thu, 16 Jan 2014 18:04:04 GMT", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Create or Update Container Metadata", "description":"\n Creates or updates the container metadata by associating custom metadata headers with the container-level URI. These headers\n must have the format X-Container-Meta-name.\n To set or edit container metadata, perform a POST operation to the container. The operation must include X-Container-Meta-name, where name is the name of your custom metadata. Subsequent POST operations to the header using the same metadata name overwrite the previous value. \n To view your metadata changes, perform a HEAD operation on the container. (For more information, see .) Do not try to send the metadata in your HEAD request. \n A status code of 204 (No Content) indicates success. Status\n code 404 (Not Found) is returned when the requested container does not exist.\n This operation does not require a request body and does not return a response body.\n For information about adding metadata for the following purposes, see : \n \n Container quotas\n Access log delivery\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"POST \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer HTTP\/\n1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nX-Container-Meta-Book: MobyDick\nX-Container-Meta-Subject: Whaling", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 204 No Content\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: tx05dbd434c651429193139-0052d82635\nDate: Thu, 16 Jan 2014 18:34:29 GMT", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"HEAD", "name":"Show Container Metadata", "description":"\n Shows container metadata, including\n the number of objects in the container and the total bytes for all\n objects stored in the container.\n Use a HEAD operation against the container to return the following metadata: \n \n How many objects are in the container (X-Container-Object-Count)\n The total bytes for all objects stored in the container (X-Container-Bytes-Used)\n Any custom metadata that is set on the container (X-Container-Meta-name)\n \n To set and edit your custom metadata, see .\n If the container exists, a status code of 200 through 299 is returned. If the container does not exist,\n a status code of 404 (Not Found) is returned.\n This operation does not require a request body and does not return a response body.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"HEAD \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\n", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 204 No Content\nContent-Length: 0\nX-Container-Object-Count: 1\nAccept-Ranges: bytes\nX-Container-Meta-Book: TomSawyer\nX-Timestamp: 1389727543.65372\nX-Container-Meta-Author: SamuelClemens\nX-Container-Bytes-Used: 14\nContent-Type: text\/plain; charset=utf-8\nX-Trans-Id: tx0287b982a268461b9ec14-0052d826e2\nDate: Thu, 16 Jan 2014 18:37:22 GMT", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Delete Container Metadata", "description":"\n Deletes container metadata.\n To delete a metadata header, use a POST operation to send an empty value for that particular header, such as\n X-Container-Meta-Subject:.\n If the tool that you are using to communicate with Cloud Files does not support sending\n empty headers (such as older versions of cURL), send the header X-Remove-Container-Meta-name: arbitrary value, where name is the name of your\n custom header. arbitrary value can be any value, and it will not be used. \n To set and edit your custom metadata, see .\n A status code of 200 through 299 indicates success. If the container does not exist,\n a status code of 404 (Not Found) is returned.\n This operation does not require a request body and does not return a response body.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"text/xml" } }, "body":"POST \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nX-Remove-Container-Meta-Subject: x", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 204 No Content\nDate: Thu, 09 Jan 2014 22:28:22 GMT\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: txe749a717ee5e4da7a6895-0052cf2286dfw1\n", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"v1/{account}/{container}/{object}", "parameters":{ "account":{ "description":"\n Your\n unique account identifier.\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] }, "container":{ "description":"\n \n The unique identifier of the\n container.\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] }, "object":{ "description":"\n The unique identifier of the\n object.\n", "type":"xsd:string", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get Object Data", "description":"\n Gets data for the specified\n object.\n Perform GET operations against an object to retrieve the object's data. \n You can perform conditional GET requests by using the following HTTP headers in the request:\n \n If-Match\n If-None-Match\n If-Modified-Since\n If-Unmodified-Since\n \n These headers are documented in http:\/\/www.ietf.org\/rfc\/rfc2616.txt.\n You can fetch a portion of the data by using the HTTP Range header. To specify multiple ranges, separate the range specifications with a comma. \n \n The types of range specifications are as follows:\n \n Byte range specification: Use a FIRST_BYTE_OFFSET value to specify the start of the data range,\n and use a LAST_BYTE_OFFSET value to specify the end of the range. If you omit the\n LAST_BYTE_OFFSET value, the offset of the last byte of data is used\n Suffix byte range specification: Use LENGTH bytes to specify the length of the data\n range. \n \n The following table shows forms of the header and the ranges of data specified.\n \n Cloud Files Supported Range Formats\n \n \n \n \n Header\n Range of Object Data\n \n \n \n \n Range: bytes=-5\n The last five bytes.\n \n \n Range: bytes=10-15\n The six bytes of data after a 10-byte offset.\n \n \n Range: bytes=10-15,-5\n A multipart response that contains the last five bytes and the six bytes of data after a 10-byte offset. The Content-Type of the response is then multipart\/byteranges.\n \n \n Range: bytes=4-6\n Bytes 4 through 6.\n \n \n Range: bytes=2-2\n Byte 2, the third byte of the data.\n \n \n Range: bytes=6-\n Byte 6 and after.\n \n \n Range: bytes=1-3,2-5\n A multipart response that contains bytes 1 through 3, and bytes 2 through 5. The Content-Type of the response is then multipart\/byteranges.\n \n \n \n Object data is returned in the response body. Object metadata is returned as HTTP headers. \n A status code of 200 through 299 indicates success. Status code 404 (Not Found) is returned if the object does not exist.\n In the following examples that use ranges, the object contains the 10 bytes of data 0123456789.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer\/MyObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer\/MyObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nRange: bytes=4-6", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"GET \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer\/MyObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nRange: bytes=1-3,2-5", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 200 OK\nDate: Wed, 14 Jul 2010 19:37:41 GMT\nLast-Modified: Mon, 12 Jun 2010 13:40:18 GMT\nETag: b0dffe8254d152d8fd28f3c5e0404a10\nContent-Type: text\/html\nContent-Length: 512000\n\n[ ...object content... ]", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 206 Partial Content\nDate: Wed, 14 Jul 2010 19:37:41 GMT\nLast-Modified: Mon, 12 Jun 2010 13:40:18 GMT\nETag: b0dffe8254d152d8fd28f3c5e0404a10\nContent-Type: application\/octet-stream\nAccept-Ranges: bytes\nContent-Range: bytes 4-6\/10\nContent-Length: 3\n\n456", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 206 Partial Content\nDate: Wed, 14 Jul 2010 19:37:41 GMT\nLast-Modified: Mon, 12 Jun 2010 13:40:18 GMT\nETag: b0dffe8254d152d8fd28f3c5e0404a10\nContent-Type: multipart\/byteranges;boundary=4789b20f24cc4d2a8da2e552e151e6fe\nAccept-Ranges: bytes\nContent-Range: bytes 4-6\/10\nContent-Length: 265\n\n--4789b20f24cc4d2a8da2e552e151e6fe\nContent-Type: application\/octet-stream\nContent-Range: bytes 1-3\/10\n\n123\n--4789b20f24cc4d2a8da2e552e151e6fe\nContent-Type: application\/octet-stream\nContent-Range: bytes 2-5\/10\n\n2345\n--4789b20f24cc4d2a8da2e552e151e6fe--\n", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PUT", "name":"Create or Update Object", "description":"\n Creates or updates the content and\n metadata for a specified object.\n Perform PUT operations to write, or overwrite, an object's content and metadata.\n The PUT operation actually always creates a new object. \n If you use this operation on an existing object, you actually replace the existing object and metadata rather than modifying the object. \n This is why this operation returns a 201 Created status code.\n You can ensure end-to-end data integrity by including an\n MD5 checksum of your object's data in the ETag\n header. You are not required to include the\n ETag header, but we recommend its use to\n ensure that the storage system successfully stores your\n object's content.\n You can cause an object to expire after a certain date\n and time by using the X-Delete-At or\n X-Delete-After headers during an object PUT\n operation. The X-Delete-At header requires a\n Unix epoch timestamp, in integer form. For example,\n 1348691905 represents Wed, 26 Sep 2012 20:38:25 GMT. By\n setting the header to a specific epoch time, you indicate\n when you want the object to expire, not be served, and be\n deleted completely from the storage system. When Cloud Files\n detects one of these headers, the system automatically stops\n serving that object at the specified date and time, and\n shortly after the expiration date, it removes the object\n from the storage system.\n The HTTP response includes the MD5 checksum of the data\n written to the storage system. If you do not send the\n ETag header in the request, you should compare the\n value returned with your content's MD5 locally to perform\n the end-to-end data validation on the client side. For\n manifest objects, ETag is the MD5 checksum of\n the concatenated string of ETags for each segment in the\n manifest, which offers change detection but not direct\n comparison. \n For more information, see .\n \n The best checks for a successful upload are to check\n the ETag match with a checksum and to see if\n you get a 404 (Not Found) status code when you perform a\n GET, HEAD,\n POST, or DELETE operation.\n \n \n You can assign custom metadata to objects by including\n additional HTTP headers in the PUT request. To assign\n custom metadata, use an HTTP header with the\n X-Object-Meta- prefix. \n You can also specify the Content-Type header for your\n object. For example, you can specify Content-Type:\n audio\/mpeg3 for MP3 files. \n A status code of 201\n (Created) indicates a successful write. Any status code in\n the 400 range denotes failure. The 401 (Unauthorized) status\n code is returned if authentication fails. The 411\n (Length Required) status code denotes a missing\n Content-Length or Content-Type\n header in the request. If the MD5 checksum of the data written to the\n storage system does not match the optionally supplied\n ETag value, a 422 (Unprocessable Entity)\n status code is returned. \n No response body is returned.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"PUT \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer\/MyObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nETag: 8a964ee2a5e88be344f36c22562a6486\nContent-Length: 512000\nX-Delete-At: 1339429105\nContent-Disposition: attachment; filename=platmap.mp4\nContent-Type: video\/mp4\nContent-Encoding: gzip\nX-Object-Meta-PIN: 1234\n\n[ ...object content... ]", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 201 Created\nLast-Modified: Fri, 17 Jan 2014 17:28:35 GMT\nContent-Length: 116\nEtag: 8a964ee2a5e88be344f36c22562a6486\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: tx4d5e4f06d357462bb732f-0052d96843\nDate: Fri, 17 Jan 2014 17:28:35 GMT", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"411", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"411", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"422", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"422", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete Object", "description":"\n Permanently deletes an object from\n the Cloud Files storage system. (You can use COPY and then\n DELETE to effectively move an object.)\n Perform a DELETE operation on an object to permanently remove the object from the storage system (data and\n metadata). \n Object deletion is processed immediately at the time\n of the request. Any subsequent GET, HEAD, POST, or\n DELETE operations return a 404 (Not Found) error\n unless object versioning is on and other versions\n exist. For more information about object versioning, see .\n Objects with the X-Delete-At or\n X-Delete-After header assigned are deleted\n within one day of the expiration time, and the object is not\n served immediately after the expiration time. For more details, see . \n A status code of 204 (No\n Content) indicates success. Status code 404 (Not Found) is\n returned when the object does not exist.\n This operation does not require a request body and does not return a response body.\n For information about bulk deletions, see .\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"DELETE \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer\/MyObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c", "schema":"" } ], "responses":[ { "name":"204", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 204 No Content\nContent-Length: 0\nContent-Type: text\/html; charset=UTF-8\nX-Trans-Id: tx36c7606fcd1843f59167c-0052d6fdac\nDate: Wed, 15 Jan 2014 21:29:16 GMT", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"COPY", "name":"Copy Object", "description":"\n Using the Destination header, copies an existing object to another object\n with a new name in the Cloud Files storage\n system.\n The new object can be in the same container, but have a different name from the original object. Or, the new object can have the same or a different name and be located in a different container than the original object.\n \n You can use a PUT operation with the X-Copy-From header to accomplish the same operation as the COPY operation. \n The PUT operation always creates a new object. If you use this operation on an existing object, you replace the existing object and metadata rather than \n modifying the object. \n \n Suppose you upload a file with the wrong object name or\n content type, or you need to move some objects to another\n container. Without a server-side object copy feature, you\n would need to repeat uploading the same content and then\n delete the existing object. With a server-side object copy\n feature, you can save the step of re-uploading the content\n and thus also save the associated bandwidth charges, if any\n were to apply. \n You can send a COPY request to the existing object and include the\n Destination header to specify the destination of\n the copy. The header value is the container and new object\n name in the form of \/container\/object. Unlike using the PUT request, this approach does not require a\n Content-Length header. \n \n Copy Object Approach 1 - Using COPY\n \n COPY \/v1\/account\/sourceContainer\/sourceObject HTTP\/1.1\n Host: storageURL\n X-Auth-Token: yourAuthToken\n Destination: \/destinationContainer\/destinationObject\n\n \n Alternatively, you can send a PUT request to the location of the new object (the\n destination), and add the X-Copy-From\n header to designate the source of the data. The header value\n must be the container and object name of the source object\n in the form of \/container\/object. The HTTP specification of a\n PUT request with the X-Copy-From header requires a\n Content-Length header, but the storage system does not use the\n Content-Length value to perform the operation. For\n this reason, you can simply send a\n Content-Length value of 0 (zero). \n \n By default, you cannot copy an object larger than 5 GB. For information about how to handle objects larger than 5 GB, see\n . \n \n \n Copy Object Approach 2 - Using PUT\n \n PUT \/v1\/account\/destinationContainer\/destinationObject HTTP\/1.1\n Host: storageURL\n X-Auth-Token: yourAuthToken\n X-Copy-From: \/sourceContainer\/sourceObject\n Content-Length: 0 \n\n \n\n With both of these approaches, the destination container\n must exist before you copy the object.\n\n \n If you are copying many objects, you can improve the\n total copy time by issuing several concurrent\n COPY commands. Because Cloud Files\n is a distributed storage system, your concurrent\n COPY commands run on separate\n machines simultaneously. As a best practice,\n you can run up to 100 concurrent COPY\n commands per container. \n Another option for copying many objects at once is using a bulk import. For\n information, see .\n \n \n If\n you want to move the object rather than copy it, send a DELETE request to the source object after\n copying it. A move is simply a COPY operation followed by a DELETE operation.\n \n All\n metadata is preserved during the object copy. Note that you\n can set metadata on the request to copy the object (with either \n PUT or COPY), and the metadata overwrites any\n conflicting keys on the destination object. \n \n Your account is not charged when you copy or move your\n objects within the same data center by using the internal\n network URI, ServiceNet, as the storage URL. You can find your ServiceNet endpoint in the\n service catalog that is created when you authenticate your session.\n For information about how to authenticate your session, see\n . As shown in the following partial service catalog example, the ServiceNet URI is listed as\n internalURL. The name is your Cloud Files\n storage URL with snet- prepended to it. If you\n do not know which data center you are working in, you can\n find it in the Cloud Control Panel. (For more information\n about service access endpoints, see .)\n \n Data Center Endpoints\n \n \"endpoints\": [\n {\n \"region\": \"DFW\",\n \"internalURL\": \"https:\/\/snet-storage101.dfw1.clouddrive.com\/v1\/MossoCloudFS_9491081f-7e12-4f56-98d0-cdb3037c8d7c\",\n \"tenantId\": \"MossoCloudFS_9491081f-7e12-4f56-98d0-cdb3037c8d7c\",\n \"publicURL\": \"https:\/\/storage101.dfw1.clouddrive.com\/v1\/MossoCloudFS_9491081f-7e12-4f56-98d0-cdb3037c8d7c\"\n },\n {\n \"region\": \"ORD\",\n \"internalURL\": \"https:\/\/snet-storage101.ord1.clouddrive.com\/v1\/MossoCloudFS_9491081f-7e12-4f56-98d0-cdb3037c8d7c\",\n \"tenantId\": \"MossoCloudFS_9491081f-7e12-4f56-98d0-cdb3037c8d7c\",\n \"publicURL\": \"https:\/\/storage101.ord1.clouddrive.com\/v1\/MossoCloudFS_9491081f-7e12-4f56-98d0-cdb3037c8d7c\"\n }\n ]\n\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"COPY \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MySourceContainer\/MySourceObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nDestination: \/MyDestinationContainer\/MyDestinationObject\n", "schema":"" }, { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"PUT \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyDestinationContainer\/MyDestinationObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nX-Copy-From: \/MySourceContainer\/MySourceObject\nContent-Length: 0", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 201 Created\nContent-Length: 0\nX-Copied-From-Last-Modified: Thu, 16 Jan 2014 21:19:45 GMT\nX-Copied-From: MySourceObject\nLast-Modified: Fri, 17 Jan 2014 18:22:57 GMT\nEtag: 451e372e48e0f6b1114fa0724aa79fa1\nContent-Type: text\/html; charset=UTF-8\nX-Object-Meta-Test: testCF\nX-Trans-Id: txdcb481ad49d24e9a81107-0052d97501\nDate: Fri, 17 Jan 2014 18:22:57 GMT", "schema":"" }, { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 201 Created\nContent-Length: 0\nX-Copied-From-Last-Modified: Thu, 16 Jan 2014 21:19:45 GMT\nX-Copied-From: MySourceObject\nLast-Modified: Fri, 17 Jan 2014 18:22:57 GMT\nEtag: 451e372e48e0f6b1114fa0724aa79fa1\nContent-Type: text\/html; charset=UTF-8\nX-Object-Meta-Test: testCF\nX-Trans-Id: txdcb481ad49d24e9a81107-0052d97501\nDate: Fri, 17 Jan 2014 18:22:57 GMT", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"HEAD", "name":"Show Object Metadata", "description":"\n Shows object metadata.\n Perform a HEAD operation on an object to retrieve\n object metadata and other standard HTTP headers. \n This operation does not return a response body. Metadata is returned as\n HTTP headers.\n \n JIRA ticket 1-\/ 21 metadata \/\n response clarity -- dsh 2012-03-07 The\n HEAD return code for an object is different than the\n HEAD return code for a\n container. A HEAD request does not return a message body in\n the response, so a status code of 200 through 299 indicates success. When a\n HEAD request is performed against a container, it\n queries the container databases, and it does not retrieve\n the content from them. Thus, this operation returns the 204 (No\n Content) status code. However, when a HEAD request is\n performed against an object, it returns a 200 OK status\n code because it can view the content. \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HEAD \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer\/MyObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 200 OK\nDate: Thu, 10 Jun 2010 20:59:39 GMT\nLast-Modified: Fri, 11 Jun 2010 13:40:18 GMT\nETag: 8a964ee2a5e88be344f36c22562a6486\nContent-Length: 512000\nContent-Type: text\/plain; charset=UTF-8\nX-Object-Meta-Meat: Bacon\nX-Object-Meta-Fruit: Apple\nX-Object-Meta-Veggie: Beans\nX-Object-Meta-Dairy: Cheese", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Create or Update Object Metadata", "description":"\n Sets or updates your object \n metadata. Metadata must be in the format\n X-Object-Meta-name where name is the name of your metadata. You can also assign X-Delete-At or\n X-Delete-After to expiring objects. You cannot use\n this operation to change other headers, such as\n Content-Type.\n You can set or update your custom metadata for existing\n objects by sending a POST request to the object name. \n Metadata is set by using the header X-Object-Meta-name: value, where\n name is the custom name for your metadata and value\n is the value. You can also set values for\n X-Delete-At and X-Delete-After\n to set expirations for objects. \n To remove previously-set object metadata, send a\n POST request to the object name with\n X-Remove-Object-Meta-name: value, where\n name is the name of your metadata.\n value is any term, and it will not be used. You\n must, however, send some value with the request. Otherwise,\n the metadata is not removed. \n For information about working with metadata when copying\n objects, see .\n \n Deleting Object Metadata\n All the object metadata is set at the same time. If\n you want to edit or remove one header, include all other headers in the POST request and leave out the header that you want to remove. This means that if you\n delete one entry without posting the others, the others\n will also be deleted at that time. \n To remove all metadata on an object, simply perform a\n POST request for the object with no\n metadata specified. However, to remove container metadata,\n you must send the header with an empty value.\n \n A status code of 202\n (Accepted) indicates success. Status code 404 (Not Found) is\n returned if the requested object does not exist. \n This operation does not return a response body.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"POST \/v1\/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880123\/MyContainer\/MyObject HTTP\/1.1\nHost: storage.clouddrive.com\nX-Auth-Token: f064c46a782c444cb4ba4b6434288f7c\nX-Object-Meta-Fruit: Apple\nX-Object-Meta-Veggie: Carrot", "schema":"" } ], "responses":[ { "name":"202", "description":"", "headers":{ "Content-Type":{ "value":"application/http" } }, "body":"HTTP\/1.1 202 Accepted\nDate: Thu, 07 Jun 2007 20:59:39 GMT\nContent-Length: 0\nContent-Type: text\/plain; charset=UTF-8\nX-Trans-Id: tx5ec7ab81cdb34ced887c8-0052d84ca4", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] } ] } ] }