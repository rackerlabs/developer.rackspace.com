<?xml version="1.0" encoding="utf-8"?>
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <resources xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns:db="http://docbook.org/ns/docbook"
              xmlns:common="http://docs.openstack.org/common/api/v1.0"
              xmlns:csapi="http://docs.openstack.org/compute/api/v2"
              xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
              xmlns="http://wadl.dev.java.net/2009/02"
              base="http://api.emailsrvr.com/"
              xml:id="email-exchange">
      <!-- <resource id="version0" path="v0">-->
      <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/blackberrymobileservices"
                id="blackberrymobileservices-top">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listMailboxMobile">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List mailboxes with BlackBerry mobile          service enabled">
               <para role="shortdesc">Lists mailboxes with the BlackBerry
            mobile service enabled.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The index operation only supports the GET HTTP
                  verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/ex/blackberrymobileservices',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;blackBerryMobileServiceList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:blackBerryMobileServiceList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                  &lt;mailbox&gt;apiexmailbox36&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox66&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox85&lt;/mailbox&gt;
                  &lt;/mailboxes&gt;
                  &lt;/blackBerryMobileServiceList&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
         
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"offset":0,"size":50,"total":3,"mailboxes":["apiexmailbox36","apiexmailbox66","apiexmailbox85"]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
         </method>
      </resource>
                        
                        <!-- keep -->
                     <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/activesyncmobileservice"
                id="activesyncmobileservice-top">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listMailboxActiveSync">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List mailboxes with the ActiveSync mobile          service enabled">
               <para role="shortdesc">Lists mailboxes with the ActiveSync
            mobile service enabled.</para>
               <para>Remarks</para>
               <para>The index operation only supports the GET HTTP
            verb.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/ex/activesyncmobileservices',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;activeSyncMobileServiceList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:activeSyncMobileServiceList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                  &lt;mailbox&gt;apiexmailbox36&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox66&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox85&lt;/mailbox&gt;
                  &lt;/mailboxes&gt;
                  &lt;/activeSyncMobileServiceList&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
         
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"offset":0,"size":50,"total":3,"mailboxes":["apiexmailbox36","apiexmailbox66","apiexmailbox85"]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>   
         </method>
      </resource>
                        
                        <!-- keep -->
                     <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/contacts"
                id="contacts">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listContacts">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List contacts in domain">
               <para role="shortdesc">Lists contacts in a domain.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/ex/contacts?contains=john',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;contactList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:contactList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;contacts&gt;
                  &lt;contact&gt;
                  &lt;name&gt;apiexcontact66&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail58@yahoo.com&lt;/externalEmail&gt;
                  &lt;/contact&gt; &lt;contact&gt;
                  &lt;name&gt;apiexcontact73&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail98@yahoo.com&lt;/externalEmail&gt;
                  &lt;/contact&gt; &lt;contact&gt;
                  &lt;name&gt;apiexcontact81&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail46@yahoo.com&lt;/externalEmail&gt;
                  &lt;/contact&gt; &lt;/contacts&gt;
                  &lt;/contactList&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"offset":0,"size":50,"total":3,"contacts":[{"name":"apiexcontact66","displayName":"API
                  Test","externalEmail":"externalemail58@yahoo.com"},{"name":"apiexcontact73","displayName":"API
                  Test","externalEmail":"externalemail98@yahoo.com"},{"name":"apiexcontact81","displayName":"API
                  Test","externalEmail":"externalemail46@yahoo.com"}]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                        
                        <!-- keep -->
                        <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/contacts/{contact_name}"
                id="contact_name">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="showContactDetails">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Show contact details">
               <para role="shortdesc">Shows contact details.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;contact
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:contact"&gt;
                  &lt;name&gt;apiexcontact73&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail98@yahoo.com&lt;/externalEmail&gt;
                  &lt;isHidden&gt;false&lt;/isHidden&gt;
                  &lt;contactInfo&gt;
                  &lt;firstName&gt;API&lt;/firstName&gt;
                  &lt;lastName&gt;Test&lt;/lastName&gt;
                  &lt;jobTitle&gt;Dev&lt;/jobTitle&gt;
                  &lt;company&gt;My Company&lt;/company&gt;
                  &lt;department&gt;R&amp;D&lt;/department&gt;
                  &lt;businessNumber&gt;111-1111&lt;/businessNumber&gt;
                  &lt;homeNumber&gt;222-2222&lt;/homeNumber&gt;
                  &lt;mobileNumber&gt;333-3333&lt;/mobileNumber&gt;
                  &lt;faxNumber&gt;444-4444&lt;/faxNumber&gt;
                  &lt;pagerNumber&gt;1234&lt;/pagerNumber&gt;
                  &lt;addressLine1&gt;123 Main
                  Street&lt;/addressLine1&gt;
                  &lt;city&gt;Blacksburg&lt;/city&gt;
                  &lt;state&gt;VA&lt;/state&gt;
                  &lt;zip&gt;24060&lt;/zip&gt;
                  &lt;country&gt;USA&lt;/country&gt; &lt;notes&gt;My
                  Notes&lt;/notes&gt; &lt;/contactInfo&gt;
                  &lt;/contact&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"name":"apiexcontact73","displayName":"API
                  Test","externalEmail":"externalemail98@yahoo.com","isHidden":false,"contactInfo":{"firstName":"API","lastName":"Test","jobTitle":"Dev","company":"My
                  Company","department":"R&amp;D","businessNumber":"111-1111","homeNumber":"222-2222","mobileNumber":"333-3333","faxNumber":"444-4444","pagerNumber":"1234","addressLine1":"123
                  Main
                  Street","city":"Blacksburg","state":"VA","zip":"24060","country":"USA","notes":"My
                  Notes"}}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Contact is not found. Sample Message: Contact not
               found</para>
               </wadl:doc>
            </response>
         </method>
         <method name="POST" rax:id="addContact">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Add contact">
               <para role="shortdesc">Adds a contact.</para>
               <para>If the contact does not exist, use add.</para>
               <para>If it does, use edit.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Name of contact when displayed (Required for
                     add)</td>
                     </tr>
                     <tr>
                        <td>externalEmail</td>
                        <td>string</td>
                        <td>Email address (Required for add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Whether the contact is hidden from the Global
                     List</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager number</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml', { 'displayName' =\u003E 'Johnny
                  Customer', 'externalEmail' =\u003E 'jonny@apple.com'
                  }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Contact is not found. Sample Message: No user with
               the email address jane.doe@abc.com exists</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New contact name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New contact name (user name) is reserved by
               Exchange. Sample Message: user name reserved</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="updateContact">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update contact">
               <para role="shortdesc">Updates a contact.</para>
               <para>If the contact does not exist, use add.</para>
               <para>If
            it does, use edit.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Name of contact when displayed (Required for
                     add)</td>
                     </tr>
                     <tr>
                        <td>externalEmail</td>
                        <td>string</td>
                        <td>Email address (Required for add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Whether the contact is hidden from the Global
                     List</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager number</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml', { 'displayName' =\u003E 'Johnny
                  Customer', 'externalEmail' =\u003E 'jonny@apple.com'
                  }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Contact is not found. Sample Message: No user with
               the email address jane.doe@abc.com exists</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New contact name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>New contact name (user name) is reserved by
               Exchange. Sample Message: user name reserved</para>
               </wadl:doc>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteContact">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Delete contact">
               <para role="shortdesc">Deletes a contact.</para>
               <para>Remarks</para>
               <para>Contact is deleted immediately without verification and
            data is lost permanently.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Contact is not found. Sample Message: No user with
               the email address jane.doe@abc.com exists</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                        
                     <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists"
                id="distributionLists">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listDistributionLists">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List distribution lists">
               <para role="shortdesc">Lists distribution
            lists.</para>
               <para>Supports exporting. (See
            Listings).</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists distribution lists, supports exporting.
                  (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                     <para>The listing was successfully retrieved.</para>
                     <xsdxt:code>
                        <programlisting language="javascript">{ "DistributionLists": [ { "Description": "This is
                  an example of an edited DL.", "MemberCount": 0,
                  "CommonName": "exampledl", "DisplayName":
                  "ExampleDL", "Alias": "exampledl.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": "exampledl@example.com",
                  "Status": "showy", "LegacyExchangeDn":
                  "/o=e14s/ou=Exchange Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=exampledl59c" }
                  ], "Sort": "primarysmtpaddress", "Limit": 25,
                  "Total": 1, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="GET" rax:id="exportDistributionListFile">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Export distribution list file">
               <para role="shortdesc">Exports a file of distribution
            lists.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to export a file of distribution
                  lists.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: distribution list Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <wadl:param name="exportTo" type="xs:string"/>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionLists?exportTo=myAdminEmail@example.com"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202"/>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted.">
                  <para>The request has been accepted and is
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="POST" rax:id="addDistributionList">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Create distribution list">
               <para role="shortdesc">Creates a distribution list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to add a new Distribution
                  List.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: distribution list</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists
                  { "Description" : "This is an example DL."
                  "CommonName" : "ExampleDL" "DisplayName" :
                  "ExampleDL" "IsHiddenFromAddressList": false,
                  "EmailAddresses": [ \t{ "Action\":\"Add" "Value" :
                  "exampledl-alias@example.com" "AddressPrimary":
                  false, "AddressProtocol" : "smtp" } ], "Members": {
                  "Recipients": [ \t{ \t \"Action\":\"Add" \t
                  \"Value\":\"mexuser1" \t}, \t{ \t \"Action\":\"Add"
                  \t \"Value\":\"mexuser2" \t} ] }, "ManagedBy": {
                  "Recipients": [ \t{ \t \"Action\":\"Add" \t
                  \"Value\":\"mexuser1" \t}, \t{ \t \"Action\":\"Add"
                  \t \"Value\":\"mexuser2" \t} ] },
                  "AcceptMessagesOnlyFrom": { "All\":\"restricted"
                  "Recipients": [ \t{ \t \"Action\":\"Add" \t
                  \"Value\":\"mexuser1" \t}, \t{ \t \"Action\":\"Add"
                  \t \"Value\":\"mexuser2" \t} ] } }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="No Content.">
                  <para>The request has been accepted and is
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="POST" rax:id="importDistributionListFile">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Import distribution list file">
               <para role="shortdesc">Imports a file of distribution
            lists.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to import a file of distribution
                  lists.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: FileUrl (string)</para>
                  </listitem>
               </itemizedlist>
               <para>Instructions</para>
               <ol xmlns="http://www.w3.org/1999/xhtml">
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>Create a CSV (comma-separated values) file
                  containing the distribution lists you'd like to
                  import. You can get a valid CSV file format by
                  bulk-exporting your current distribution
                  lists.</para>
                  </listitem>
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>Upload the file to a public accessible URL (e.g.
                  cloud-files, CDN, etc.)</para>
                  </listitem>
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>Call this endpoint with the url of the file in
                  the body.</para>
                  </listitem>
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>You will receive a confirmation email to the
                  address specified in the URL when the import is
                  complete. Any rows that were not able to be imported
                  are available via a link provided in the
                  confirmation email.</para>
                  </listitem>
               </ol>
            </wadl:doc>
            <request>
               <wadl:param name="emailAddress" type="xs:string"/>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionLists?emailAddress=myAdminEmail.com
                  { "FileUrl" :
                  "http://asdfasdfzxcvzxcvasdfasdf.cf1.rackcdn.com/MyDistributionLists.csv"
                  }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted.">
                  <para>The request has been accepted and is
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                        
                        <!-- keep -->
                        
                        <!-- keep -->
                        
                        <!-- keep -->
                        
                        <!-- keep -->
                        <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}"
                id="common_name">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="showDistributionListDetails">
      <!-- keep -->
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Show distribution list details">
               <para role="shortdesc">Shows distribution list
            details.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read a distribution
                  List.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: distribution list</para>
                  </listitem>
               </itemizedlist>
               <para>Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>The distribution list resource contains some
                  paged data that must be accessed via separate GET
                  requests.</para>
                  </listitem>
                  <listitem>
                     <para>Properties directly on the object can be accessed
                  via a GET on the base resource, however Members,
                  Senders, and Managers must each be retrieved by
                  separate requests.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">

                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Description": "This is an example DL.",
                  "MemberCount": 2, "CommonName": "exampledl",
                  "DisplayName": "Example DL", "Alias":
                  "exampledl.example.com", "IsHiddenFromAddressList":
                  false, "PrimarySmtpAddress":
                  "exampledl@example.com", "Status": "showy",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=exampledl59c"
                  }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="updateDistributionList">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update distribution list">
               <para role="shortdesc">Updates a distribution list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Updates a distribution list.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: distribution list</para>
                  </listitem>
               </itemizedlist>
               <para>Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>All data that is part of the Exchange
                  distribution list resource can be updated in a
                  single PUT request.</para>
                  </listitem>
                  <listitem>
                     <para>Recipients, ManagedBy, and AcceptMessagesOnlyFrom
                  must specify an Action, set to either Add or Remove,
                  to specify the operation for that value.</para>
                  </listitem>
                  <listitem>
                     <para>AcceptMessagesOnlyFrom also has an additional
                  parameter All that can be set to restricted (to
                  specify specific allowed senders) or public.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL
                  { "Description" : "This is an example of an edited
                  DL." "DisplayName" : "ExampleDL" "EmailAddresses": [
                  { "Action\":\"remove" "Value" :
                  "exampledl-alias@example.com" "AddressPrimary":
                  false, "AddressProtocol" : "smtp" } ], "Members": {
                  "Recipients": [ \t{ \t\t\"Action\":\"Remove"
                  \t\t\"Value\":\"mexuser1" \t}, \t{
                  \t\t\"Action\":\"Add" \t\t\"Value\":\"mexuser3" \t}
                  ] }, "ManagedBy": { "Recipients": [ \t{
                  \t\t\"Action\":\"Remove" \t\t\"Value\":\"mexuser1"
                  \t}, \t{ \t\t\"Action\":\"Add"
                  \t\t\"Value\":\"mexuser3" \t} ] },
                  "AcceptMessagesOnlyFrom": { "All\":\"restricted"
                  "Recipients": [ \t{ \t\t\"Action\":\"Remove"
                  \t\t\"Value\":\"mexuser3" \t}, \t{
                  \t\t\"Action\":\"Add" \t\t\"Value\":\"mexuser2" \t}
                  ] } }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="No Content.">
                  <para>The request has been accepted and is
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteDistributionList">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Delete distribution list">
               <para role="shortdesc">Deletes a distribution list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to delete a distribution
                  list.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: None</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionList/ExampleDL"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="No Content.">
                  <para>The request has been accepted and is
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                           
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/emailaddresses"
                id="alt-emailaddresses">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listDistributionListAltEmails">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List distribution list alternate email addresses">
               <para role="shortdesc">Lists alternate email addresses in a
            distribution list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists a distribution list's alternate email
                  addresses. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Email Address Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/emailaddresses"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                     <para>The data was successfully retrieved.</para>
                     <xsdxt:code>
                        <programlisting language="javascript">{ "EmailAddresses": [ { "Value":
                  "exampledl@example.com", "AddressPrimary": true,
                  "AddressProtocol": "smtp" }, { "Value":
                  "exampledl-alias@example.com", "AddressPrimary":
                  false, "AddressProtocol": "smtp" } ], "Limit": 25,
                  "Total": 2, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="updateDistributionListAltEmails">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Bulk-update distribution list alternate email addresses">
               <para role="shortdesc">Bulk-updates the alternate email
            addresses in a distribution list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although addresses can be updated as part of the
                  base Exchange distribution list update, a
                  convenience route is also available for just sending
                  the Email address part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates an existing distribution lists's
                  alternate email addresses.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/emailaddresses
                  { "EmailAddresses": [ { "Action" : "add" "Value" :
                  "exampledl-alias2@example.com" "AddressPrimary":
                  false, "AddressProtocol" : "smtp" } ] }"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
                              
                              <!-- keep -->
                               <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/members"
                id="members">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listDistributionListMembers">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List distribution list members">
               <para role="shortdesc">Lists members in a distribution
            list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists Members. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/members"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser1" }, {
                  "Value": "mexuser2" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
         <method name="PUT" rax:id="updateDistributionListMembers">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Bulk-update distribution list members">
               <para role="shortdesc">Bulk-updates the members in a
            distribution list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although members can be updated as part of the
                  base Exchange distribution list update, a
                  convenience route is also available for just sending
                  the Members part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates Members.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                     <para>The data was successfully retrieved.</para>
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/members
                  { "Recipients": [ { \t\"Action\":\"Remove"
                  \t\"Value" : "MexUser1" }, { \t\"Action\":\"Add"
                  \t\"Value" : "MexUser2" } ] }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
                              
                              <!-- keep -->
                              
                              <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/managers"
                id="managers">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listDistributionListManagers">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List distribution list managers">
               <para role="shortdesc">List managers for a distribution
            list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists Managers. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/Managers"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                     <para>The data was successfully retrieved.</para>
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser1" }, {
                  "Value": "mexuser2" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
         <method name="PUT" rax:id="updateDistributionListManagers">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Bulk-update distribution list managers">
               <para role="shortdesc">Bulk-updates the managers of a
            distribution list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although managers can be updated as part of the
                  base Exchange distribution list update, a
                  convenience route is also available for just sending
                  the Managers part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates Managers.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/managers
                  { "Recipients": [ { \t\"Action\":\"Remove"
                  \t\"Value" : "MexUser1" }, { \t\"Action\":\"Add"
                  \t\"Value" : "MexUser2" } ] }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
                               <!-- keep -->
                               <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/senders"
                id="senders">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listDistributionListSenders">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List distribution list senders">
               <para role="shortdesc">Lists senders for a distribution
            list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists Senders. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/senders"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "All": "restricted", "Recipients": [ { "Value":
                  "mexuser1" }, { "Value": "mexuser2" } ], "Limit":
                  25, "Total": 2, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
         <method name="PUT" rax:id="updateDistributionListSenders">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Bulk-update distribution list senders">
               <para role="shortdesc">Bulk-updates senders of a distribution
            list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although senders can be updated as part of the
                  base Exchange distribution list update, a
                  convenience route is also available for just sending
                  the Senders part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates Senders.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/senders
                  { "All" : "restricted" "Recipients": [ {
                  \t\"Action\":\"Remove" \t\"Value" : "MexUser1" }, {
                  \t\"Action\":\"Add" \t\"Value" : "MexUser2" } ] }"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
                               <!-- keep -->
                               <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/distributionListOptions/AvailableSendersRecipients"
                id="availablesendersrecipients">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listNewSendersRecipients">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List sender recipients (new distribution list)">
               <para role="shortdesc">Lists recipients that can be senders
            for a new distribution list on a domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of recipients
                  that can be senders for a new distribution list on
                  the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionListOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of a distribution list
            create operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionlistOptions/AvailableSendersRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser1" }, {
                  "Value": "mexuser2" }, { "Value": "mexuser3" }, {
                  "Value": "mexuser4" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="listExistingSendersRecipients">
      <!--keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List sender recipients (existing distribution list)">
               <para role="shortdesc">Lists recipients that can be senders
            for an existing distribution list on a domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of recipients
                  that can be senders for a specific distribution list
                  on a domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionLists/(common
            name)/options is the base URL for getting complete sets of
            valid data that can be submitted as part of a Distribution
            List update operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionLists/ExampleDL/options/AvailableSendersRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser3" }, {
                  "Value": "mexuser4" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                  <!-- keep -->
                                  <!-- keep -->
                              <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/distributionListOptions/AvailableManagersRecipients"
                id="availablemanagersrecipients">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listNewManagersRecipients">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List manager recipients (new distribution list)">
               <para role="shortdesc">Lists recipients that can be managers
            for a new distribution list on a domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of recipients
                  that can be managers for a new distribution list on
                  the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionListOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of a distribution list
            create operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionlistOptions/AvailableManagersRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser1" }, {
                  "Value": "mexuser2" }, { "Value": "mexuser3" }, {
                  "Value": "mexuser4" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="listExistingManagersRecipients">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List manager recipients (existing distribution list)">
               <para role="shortdesc">Lists recipients that can be managers
            for a specific distribution list on a domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of recipients
                  that can be managers for a specified distribution
                  list on a domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionLists/(common
            name)/options is the base URL for getting complete sets of
            valid data that can be submitted as part of a Distribution
            List update operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionLists/ExampleDL/options/AvailableManagersRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser3" }, {
                  "Value": "mexuser4" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                  <!-- keep -->
                                  <!-- keep -->
                              <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/distributionListOptions/AvailableMembersRecipients"
                id="availablemembersrecipients">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listNewMembersRecipients">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List members recipients (new distribution list)">
               <para role="shortdesc">Lists recipients that can be members
            for a new distribution list on a domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of recipients
                  that can be Members for a new distribution list on
                  the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionListOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of a distribution list
            create operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionlistOptions/AvailableMembersRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser1" }, {
                  "Value": "mexuser2" }, { "Value": "mexuser3" }, {
                  "Value": "mexuser4" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="listExistingMembersRecipients">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List members recipients (existing distribution list)">
               <para role="shortdesc">Lists recipients that can be members
            for a specific distribution list on a domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of recipients
                  that can be Members for a specific distribution list
                  on a domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionLists/(common
            name)/options is the base URL for getting complete sets of
            valid data that can be submitted as part of a Distribution
            List update operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionLists/ExampleDL/options/AvailableMembersRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "mexuser3" }, {
                  "Value": "mexuser4" } ], "Limit": 25, "Total": 2,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                  <!-- keep -->
                                  <!-- keep -->
                              
                        
                     <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes"
                id="mailboxes">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listExchangeMailboxes">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List Exchange mailboxes">
               <para role="shortdesc">Lists Exchange mailboxes in a
            domain.</para>
               <para>Filter/Search</para>
               <para>Mailbox searches may be filtered by the 'enabled' flag
            using query methods ?enabled=true and
            ?enabled=false.</para>
               <para>Custom Fields</para>
               <itemizedlist>
                  <listitem>
                     <para>The result displays each mailbox's 'name' and
                  'displayName' as default.</para>
                  </listitem>
                  <listitem>
                     <para>There is a query string 'fields' that allows the
                  result to display more mailbox properties. The
                  additional properties are: 'size', 'currentUsage',
                  'hasBlackBerryMobileService',
                  'hasActiveSyncMobileService'.</para>
                  </listitem>
               </itemizedlist>
               <para>
                  <i xmlns="http://www.w3.org/1999/xhtml">Example</i>
               </para>
               <itemizedlist>
                  <listitem>
                     <para>GET
                  '/customers/12345678/domains/example.com/ex/mailboxes?fields=size,currentUsage',
                  'text/xml'</para>
                  </listitem>
               </itemizedlist>
               <para>Remarks</para>
               <para>The show operation only supports the GET HTTP
            verb.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/ex/mailboxes',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;mailboxList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:mailboxList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                  &lt;mailbox&gt;
                  &lt;name&gt;apiexmailbox55&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;/mailbox&gt; &lt;mailbox&gt;
                  &lt;name&gt;apiexmailbox6&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;/mailbox&gt; &lt;mailbox&gt;
                  &lt;name&gt;apiexmailbox90&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;/mailbox&gt; &lt;/mailboxes&gt;
                  &lt;/mailboxList&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"offset":0,"size":50,"total":3,"mailboxes":[{"name":"apiexmailbox55","displayName":"API
                  Test"},{"name":"apiexmailbox6","displayName":"API
                  Test"},{"name":"apiexmailbox90","displayName":"API
                  Test"}]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
                        
                        <!-- keep -->
                        <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{user}/permissions"
                id="permissions-top">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="showMailboxPermissions">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show Exchange mailbox permissions">
               <para role="shortdesc">Shows the current set of permissions
            granted on a mailbox.</para>
               <para>Exchange mailboxes can be given permissions. A
            permission is defined as a tuple (mailbox,
            permissionType). permissionType:= (SendAs | FullAccess |
            Both)</para>
               <para>Remarks</para>
               <para>The results in the example below show the permission
            list for user Jane Doe's mailbox. The list contains one
            entry corresponding to that of user Joe Schmoe with
            permission type of "FullAccess".</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;permissionList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:permissionList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;0&lt;/total&gt; &lt;permissions&gt;
                  &lt;permission&gt;
                  &lt;emailAddress&gt;joe.schmoe@enterpriseallservices.net&lt;/emailAddress&gt;
                  &lt;permissionType&gt;fullAccess&lt;/permissionType&gt;
                  &lt;/permission&gt; &lt;/permissions&gt;
                  &lt;/permissionList&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"offset":0,"size":50,"total":0,"permissions":[{"emailAddress":"joe.schmoe@enterpriseallservices.net","permissionType":"fullAccess"}]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
                               <!-- keep -->
                              
                              <!-- keep -->
                              <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{user}/permissions/{user2}"
                id="user2">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="POST" rax:id="grantAddMailboxPermission">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Add Exchange mailbox permissions">
               <para role="shortdesc">Adds permissions to a mailbox.</para>
               <para>A permission is defined as a tuple (mailbox,
            permissionType). permissionType:= (SendAs | FullAccess |
            Both)</para>
               <para>Grants user2 the specified permission on mailbox of
            user1.</para>
               <para>Remarks</para>
               <para>The results in the example below show that on the
            mailbox of user Jane Doe, the user John Doe has been
            granted the permission of type "fullAccess".</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>permission</td>
                        <td>string</td>
                        <td>permissionType (Required)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                  {'permission' =\u003E 'fullAccess'}, 'text/xml'"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
         <method name="PUT" rax:id="updateExchangeMailboxPermissions">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update Exchange mailbox permissions">
               <para role="shortdesc">Updates the permission granted to
            user2 on the mailbox of user1.</para>
               <para>Exchange mailboxes can be given permissions. A
            permission is defined as a tuple (mailbox,
            permissionType). permissionType:= (SendAs | FullAccess |
            Both)</para>
               <para>Remarks</para>
               <para>The permission granted to user John Doe on the mailbox
            of Jane Doe is modified to "both".</para>
               <table>
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>permission</td>
                        <td>string</td>
                        <td>permissionType (Required)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                  {'permission' =\u003E 'both'}, 'text/xml'"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
         <method name="DELETE" rax:id="deleteExchangeMailboxPermissions">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete Exchange mailbox permissions">
               <para role="shortdesc">Deletes permission granted to user2 on
            the mailbox of user1.</para>
               <para>Remarks</para>
               <para>The permission granted to user John Doe on the mailbox
            of Jane Doe is deleted.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                                 
                                 <!-- keep -->
                                 
                                 <!-- keep -->
                                 
                                 <!-- keep -->
                              
                           
                        <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}"
                id="mailbox_name">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="showExchangeMailboxDetails">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show Exchange mailbox details">
               <para role="shortdesc">Shows Exchange mailbox details.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET HTTP
                  verb.</para>
                  </listitem>
                  <listitem>
                     <para>The "samAccountName" is the logon name used to
                  support clients and servers running older versions
                  of the operating system.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;mailbox
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:mailbox"&gt;
                  &lt;name&gt;apiexmailbox90&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;size&gt;2048&lt;/size&gt;
                  &lt;currentUsage&gt;0&lt;/currentUsage&gt;
                  &lt;isHidden&gt;false&lt;/isHidden&gt;
                  &lt;visibleInRackspaceEmailCompanyDirectory&gt;false&lt;/visibleInRackspaceEmailCompanyDirectory&gt;
                  &lt;isPublicFolderAdmin&gt;true&lt;/isPublicFolderAdmin&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;lastLogin&gt;2/12/2010 1:00:00
                  AM&lt;/lastLogin&gt; &lt;contactInfo&gt;
                  &lt;firstName&gt;API&lt;/firstName&gt;
                  &lt;lastName&gt;Test&lt;/lastName&gt;
                  &lt;jobTitle&gt;Dev&lt;/jobTitle&gt;
                  &lt;company&gt;My Company&lt;/company&gt;
                  &lt;department&gt;R&amp;D&lt;/department&gt;
                  &lt;businessNumber&gt;111-1111&lt;/businessNumber&gt;
                  &lt;homeNumber&gt;222-2222&lt;/homeNumber&gt;
                  &lt;mobileNumber&gt;333-3333&lt;/mobileNumber&gt;
                  &lt;faxNumber&gt;444-4444&lt;/faxNumber&gt;
                  &lt;pagerNumber&gt;1234&lt;/pagerNumber&gt;
                  &lt;addressLine1&gt;123 Main
                  Street&lt;/addressLine1&gt;
                  &lt;city&gt;Blacksburg&lt;/city&gt;
                  &lt;state&gt;VA&lt;/state&gt;
                  &lt;zip&gt;24060&lt;/zip&gt;
                  &lt;country&gt;USA&lt;/country&gt; &lt;notes&gt;My
                  Notes&lt;/notes&gt;
                  &lt;customID&gt;0123456789&lt;/customID&gt;
                  &lt;/contactInfo&gt;
                  &lt;emailForwardingAddress&gt;apiexmailbox8@apidomain24.com&lt;/emailForwardingAddress&gt;
                  &lt;emailAddressList&gt; &lt;emailAddress&gt;
                  &lt;address&gt;apiexmailbox90@apidomain92.com&lt;/address&gt;
                  &lt;replyTo&gt;true&lt;/replyTo&gt;
                  &lt;/emailAddress&gt; &lt;/emailAddressList&gt;
                  &lt;hasBlackBerryMobileService&gt;false&lt;/hasBlackBerryMobileService&gt;
                  &lt;hasActiveSyncMobileService&gt;false&lt;/hasActiveSyncMobileService&gt;
                  &lt;samAccountName&gt;apiexmailbox90_53B5B&lt;/samAccountName&gt;
                  &lt;/mailbox&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"name":"apiexmailbox90", "displayName":"API Test",
                  "size":2048, "currentUsage":0, "isHidden":false,
                  "isPublicFolderAdmin":true, "enabled":true,
                  "lastLogin":"2\/12\/2006 1:00:00 AM",
                  "contactInfo":{"firstName":"API", "lastName":"Test",
                  "jobTitle":"Dev", "company":"My Company",
                  "department":"R&amp;D", "businessNumber":"111-1111",
                  "homeNumber":"222-2222", "mobileNumber":"333-3333",
                  "faxNumber":"444-4444", "pagerNumber":"1234",
                  "addressLine1":"123 Main Street",
                  "city":"Blacksburg", "state":"VA", "zip":"24060",
                  "country":"USA", "notes":"My Notes",
                  "customID":"0123456789"},
                  "emailForwardingAddress":"apiexmailbox8@apidomain24.com",
                  "emailAddressList":[{"address":"apiexmailbox90@apidomain92.com",
                  "replyTo":true}],
                  "hasBlackBerryMobileService":false,
                  "hasActiveSyncMobileService":false,
                  "samAccountName":"apiexmailbox90_53B5B",
                  "visibleInRackspaceEmailCompanyDirectory":false}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
         <method name="POST" rax:id="addExchangeMailbox">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Add Exchange mailbox">
               <para role="shortdesc">Adds a mailbox.</para>
               <para>To add a
            mailbox, use these form fields.</para>
               <table>
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Display name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Password (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>size</td>
                        <td>positive integer</td>
                        <td>Mailbox size in megabytes (Required for
                     Add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the mailbox is hidden
                     from the Global Address List</td>
                     </tr>
                     <tr>
                        <td>isPublicFolderAdmin</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the account is a public
                     folder administrator</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax phone number</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                     <tr>
                        <td>customID</td>
                        <td>string</td>
                        <td>A custom field that can be used to tie user
                     mailboxes to external user systems</td>
                     </tr>
                     <tr>
                        <td>emailForwardingAddress</td>
                        <td>string</td>
                        <td>Forwarding email address (If this field is
                     assigned an email address, then email forwarding
                     will be turned on. If this field is not assigned
                     or assigned an empty string, then email
                     forwarding will be disabled.)</td>
                     </tr>
                     <tr>
                        <td>visibleInRackspaceEmailCompanyDirectory</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is visible
                     in the company directory</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Enable/Disable mailbox, input must be "true" or
                     "false"</td>
                     </tr>
                     <tr>
                        <td>lastLogin <i xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of last login, EST Time (in string
                     format)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml', { 'displayName' =\u003E 'Alex Smith',
                  'password' =\u003E 'Secret123!@#', 'size' =\u003E
                  '2048' } " });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox name (user name) doesn't meet the naming
               requirements. Sample Message: Invalid user name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox password doesn't meet the password
               pattern requirements. Sample Message: Password must be
               at least 8 characters long</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="updateExchangeMailbox">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update Exchange mailbox">
               <para role="shortdesc">Updates a mailbox.</para>
               <para>To add a mailbox, use these form fields.</para>
               <table>
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Display name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Password (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>size</td>
                        <td>positive integer</td>
                        <td>Mailbox size in megabytes (Required for
                     Add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the mailbox is hidden
                     from the Global Address List</td>
                     </tr>
                     <tr>
                        <td>isPublicFolderAdmin</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the account is a public
                     folder administrator</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax phone number</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                     <tr>
                        <td>customID</td>
                        <td>string</td>
                        <td>A custom field that can be used to tie user
                     mailboxes to external user systems</td>
                     </tr>
                     <tr>
                        <td>emailForwardingAddress</td>
                        <td>string</td>
                        <td>Forwarding email address (If this field is
                     assigned an email address, then email forwarding
                     will be turned on. If this field is not assigned
                     or assigned an empty string, then email
                     forwarding will be disabled.)</td>
                     </tr>
                     <tr>
                        <td>visibleInRackspaceEmailCompanyDirectory</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is visible
                     in the company directory</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Enable/Disable mailbox, input must be "true" or
                     "false"</td>
                     </tr>
                     <tr>
                        <td>lastLogin <i xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of last login, EST Time (in string
                     format)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml', { 'homeNumber' =\u003E '8005551234' } "
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox name (user name) doesn't meet the naming
               requirements. Sample Message: Invalid user name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox password doesn't meet the password
               pattern requirements. Sample Message: Password must be
               at least 8 characters long</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>New mailbox name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
               </wadl:doc>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteExchangeMailbox">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete Exchange mailbox">
               <para role="shortdesc">Deletes a mailbox.</para>
               <para>Remarks</para>
               <para>The mailbox and mailbox contents are deleted
            permanently.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/blackberrymobileservice"
                id="blackberrymobileservice">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="POST" rax:id="attachMailboxMobile">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Attach BlackBerry mobile service to mailbox">
               <para role="shortdesc">Attaches the BlackBerry mobile service
            to a mailbox.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>activationPassword</td>
                        <td>string</td>
                        <td>Activation password (Required)</td>
                     </tr>
                  </tbody>
               </table>
               <table rules="all">
                  <caption>Status Code</caption>
                  <thead>
                     <tr>
                        <th>Description</th>
                        <th>Code</th>
                        <th>Sample
                        Message</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>Mailbox already has BlackBerry Service</td>
                        <td>400</td>
                        <td>User john.smith@example.com has BlackBerry
                     Mobile Service already</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/blackberrymobileservice',
                  'text/xml', { 'activationPassword' =\u003E '12345'
                  }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
         <method name="DELETE" rax:id="detachMailboxMobile">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Detach BlackBerry mobile service">
               <para role="shortdesc">Detaches the BlackBerry mobile service
            from a mailbox.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/blackberrymobileservice',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                              
                              <!-- keep -->
                              
                              <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/activesyncmobileservice"
                id="activesyncmobileservice">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="showExMailboxActiveSync">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show ActiveSync mobile service settings">
               <para role="shortdesc">Shows the mailbox ActiveSync mobile
            service settings used to access Hosted Exchange
            2007.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The index operation only supports the GET HTTP
                  verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;activeSyncMobileService
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:activeSyncMobileService"&gt;
                  &lt;emailAddress&gt;john.smith@example.com&lt;/emailAddress&gt;
                  &lt;serverAddress&gt;mex07A.emailsrvr.com&lt;/serverAddress&gt;
                  &lt;userName&gt;johnsmith1234&lt;/userName&gt;
                  &lt;domainAddress&gt;mex07A.mlsrvr.com&lt;/domainAddress&gt;
                  &lt;/activeSyncMobileService&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"emailAddress":"john.smith@example.com","serverAddress":"mex07A.emailsrvr.com","userName":"johnsmith1234","domainAddress":"mex07A.mlsrvr.com"}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook">
                  <para>Mailbox has no ActiveSync service. Sample Message:
               User john.smith@example.com has no active ActiveSync
               Mobile Service.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="POST" rax:id="attachMailboxActiveSync">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Add ActiveSync mobile service to mailbox">
               <para role="shortdesc">Attaches an ActiveSync mobile service
            to a mailbox.</para>
               <table rules="all">
                  <caption>Status Code</caption>
                  <thead>
                     <tr>
                        <th>Description</th>
                        <th>Code</th>
                        <th>Sample
                        Message</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>Mailbox already has ActiveSync Service</td>
                        <td>400</td>
                        <td>User john.smith@example.com has ActiveSync
                     Mobile Service already</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                  'text/xml', {}" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
         <method name="DELETE" rax:id="detachExActiveSync">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Detach ActiveSync mobile service ">
               <para role="shortdesc">Detaches an ActiveSync mobile service
            from a mailbox.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                               <!-- keep -->
                              
                              <!-- keep -->
                              
                              <!-- keep -->
                           
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/emailaddresses/{email_address}"
                id="email_address">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="POST" rax:id="addExchangeMailboxEmail">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Add email address to Exchange mailbox">
               <para role="shortdesc">Adds an email address to a
            mailbox.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/emailaddresses/alex@example.com',
                  {}, 'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
         <method name="DELETE" rax:id="deleteExchangeMailboxEmail">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete email address from Exchange mailbox">
               <para role="shortdesc">Deletes an email address from an
            Exchange mailbox.</para>
               <para>Remarks</para>
               <para>The operation will fail if the email address does not
            exist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/emailaddresses/alex@example.com',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                                 
                                 <!-- keep -->
                                 
                                 <!-- keep -->
                              
                           <!--<resource path="loginToken"
                              id="ex-loginToken">
                              <method
                                 href="#generateLoginTokenExMailbox"/>
                           </resource>-->
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/settings"
                id="settings">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="showMailboxSpamSettings">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Show mailbox spam settings">
               <para role="shortdesc">Shows the mailbox spam
            settings.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  /customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/settings',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;rsMailboxSpamSetting
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:RSMailboxSpamSetting"&gt;
                  &lt;filterLevel&gt;on&lt;/filterLevel&gt;
                  &lt;rsEmailSettings&gt;
                  &lt;spamHandling&gt;toFolder&lt;/spamHandling&gt;
                  &lt;hasFolderCleaner&gt;false&lt;/hasFolderCleaner&gt;
                  &lt;spamFolderAgeLimit&gt;0&lt;/spamFolderAgeLimit&gt;
                  &lt;spamFolderNumLimit&gt;0&lt;/spamFolderNumLimit&gt;
                  &lt;spamForwardingAddress /&gt;
                  &lt;/rsEmailSettings&gt;
                  &lt;/rsMailboxSpamSetting&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"filterLevel":"on","rsEmailSettings":"hasFolderCleaner":false,"spamFolderAgeLimit":0,"spamFolderNumLimit":0,"spamForwardingAddress":"","spamHandling":"toFolder"}}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
         <method name="PUT" rax:id="updateMailboxSpamSettings">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update spam settings">
               <para role="shortdesc">Updates the mailbox spam
            settings.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>filterLevel</td>
                        <td>string</td>
                        <td>This is a required field. Spam filter status:
                     'on', 'off', or 'exclusive'. Exclusive mode
                     allows only email cleared by the Safelist.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamHandling</td>
                        <td>string</td>
                        <td>
                           <para>The string 'toFolder' will deliver the
                        email to the user's Spam folder, 'delete' will
                        delete the mail immediately, 'labelSubject'
                        will prepend [SPAM] to the email's subject
                        line, and 'toAddress' will send the email to a
                        specified folder instead.</para>
                           <para>Valid
                        Field Combinations:</para>
                           <para>(toFolder =&gt; hasFolderCleaner,
                        spamFolderAgeLimit, spamFolderNumLimit)</para>
                           <para>(toAddress =&gt;
                        spamForwardingAddress)</para>
                        </td>
                     </tr>
                     <tr>
                        <td>rsEmail.hasFolderCleaner</td>
                        <td>string</td>
                        <td>
                           <para>This field is effective when
                        rsEmail.spamHandling option is set to
                        'toFolder'. This field controls how the spam
                        that is delivered o the spam folder is
                        handled. There are currently two options
                        supported for handling spam. First option is
                        to set a limit after which the spam gets
                        deleted. One can set limit on the number of
                        days or on the number of spam emails. Second
                        option is to never automatically delete the
                        spam. For both these options to be enabled the
                        rsEmail.hasFolderCleaner field should be set
                        to 'true'.</para>
                           <para>The folder cleaner fields
                        (hasFolderCleaner, spamFolderAgeLimit,
                        spamFolderNumLimit) are allowed only when the
                        spamHandling field is set to 'toFolder'. In
                        order to never delete the spam set the
                        spamFolderAgeLimit and spamFolderNumLimit
                        fields to 0.</para>
                        </td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamFolderAgeLimit</td>
                        <td>string</td>
                        <td>The number of days a message stays in the Spam
                     folder before its deleted. This field is
                     effective only when rsEmail.spamHandling is set
                     to 'toFolder', and 'rs.hasFolderCleaner' is set
                     to 'true'. This field cannot have negative
                     value.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamFolderNumLimit</td>
                        <td>string</td>
                        <td>The maximum number of emails the Spam folder
                     holds. This field is effective only when
                     rsEmail.spamHandling is set to 'toFolder', and
                     'rs.hasFolderCleaner' is set to 'true'. This
                     field cannot have negative value.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamForwardingAddress</td>
                        <td>string</td>
                        <td>The email address that Spam emails is redirected
                     to. This field is required when the spamHandling
                     field is set to 'toAddress'</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  '/customers/100018/domains/resellerallservices.net/rs/mailboxes/unittestexist/spam/settings',
                  { 'filterLevel' =\u003E 'on', 'rsEmail.spamHandling'
                  =\u003E 'toFolder', 'rsEmail.hasFolderCleaner'
                  =\u003E 'true', 'rsEmail.spamFolderAgeLimit' =\u003E
                  '7', 'rsEmail.spamFolderNumLimit' =\u003E '100', },
                  Formats.xml" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid input for form field 'filterLevel'. Sample
               Message: Invalid FilterLevel: high. Input must be:
               on/off/exclusive</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid input for form field 'spamHandling'. Sample
               Message: Invalid RSEmail SpamHandling: Input must be:
               toFolder/delete/labelSubject/toAddress</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid email address in spam forwarding address.
               Sample Message: Invalid email address</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Empty forwarding address. Sample Message: Spam
               Forwarding Address cannot be empty for spam handling
               policy: toAddress</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid value for field 'spamFolderAgeLimit'. Sample
               Message: Invalid RSEmail SpamCleanupOption: -1.
               rsEmail.spamFolderAgeLimit should be
               non-negative</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid value for field 'spamFolderNumLimit'. Sample
               Message: Invalid RSEmail SpamCleanupOption: -1.
               rsEmail.spamNumberLimit should be non-negative.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid field combination. Sample Message: Invalid
               field combination: Folder cleaner options cannot be
               specified with spam handling policy: delete.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid field combination. Sample Message: Invalid
               field combination: Folder cleaner options cannot be
               specified with spam handling policy:
               labelSubject.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Invalid field combination. Sample Message: Invalid
               field combination: Folder cleaner options cannot be
               specified with spam handling policy: toAddress.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                  <!--keep -->
                                  <!-- keep -->
                              <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/blacklist"
                id="ex-blacklist-mailbox">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listBlacklistEmails"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List email addresses in blacklist">
               <para role="shortdesc">Lists the email addresses in a
            blacklist associated with a domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET HTTP
                  verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/spam/blacklist',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;blacklist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:blacklist"&gt; &lt;addresses&gt;
                  &lt;address&gt;name1@spam.com&lt;/address&gt;
                  &lt;address&gt;name2@spam.com&lt;/address&gt;
                  &lt;/addresses&gt; &lt;/blacklist&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"addresses":["name1@spam.com","name2@spam.com"]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
         <method name="PUT" rax:id="updateBlacklistEmails">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Update email addresses in blacklist">
               <para role="shortdesc">Updates email addresses in a
            blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in domains, but not in
            the TLD (.com, .net, etc). You cannot use wildcards in
            email addresses. For example, the following are allowed:
            @%.example.com, @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to add
                     to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                     remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  '/customers/12345678/domains/example.com/spam/blacklist',
                  { 'addList' =\u003E
                  '@%.example.com,abc@example.com', 'removeList'
                  =\u003E '@examp%.com' }, 'text/xml'"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                                  <!--keep -->
                                  <!--keep -->
                                 <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/blacklist/{email_address}"
                id="ex-email_address-mailbox-blacklist">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <param name="email_address" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The email
                                   address.</para>
                                   </wadl:doc>
                                   </param>
         <method name="POST" rax:id="addBlacklistEmailOrDomain"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Add email address or domain to blacklist">
               <para role="shortdesc">Adds an email address or domain to a
            blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/spam/blacklist/anyone@spam.com',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered current domain. Sample Message: Adding
               example.com would blacklist the current domain</para>
               </wadl:doc>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteBlacklistEmailsOrDomains"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Delete email address or domain from blacklist">
               <para role="shortdesc">Deletes an email address or domain
            from a blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/spam/blacklist/anyone@yahoo.com',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered email address or domain is not on the
               current blacklist. Sample Message: abc@junkmail.com is
               not found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                   
                                    <!-- keep -->
                                    <!-- keep -->
                                 
                              <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipblacklist"
                id="ex-ipblacklist-mailbox">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listMailboxBlacklistIPs">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List IP addresses in mailbox blacklist">
               <para role="shortdesc">Lists the IP addresses in a blacklist
            associated with a mailbox.</para>
               <para>Remarks:</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET HTTP
                  verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipblacklist',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;ipBlacklist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:ipBlacklist"&gt; &lt;addresses&gt;
                  &lt;ip&gt;216.12.34.1&lt;/ip&gt;
                  &lt;ip&gt;216.12.34.2&lt;/ip&gt; &lt;/addresses&gt;
                  &lt;/ipBlacklist&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"addresses":["216.12.34.1","216.12.34.2"]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
         <method name="PUT" rax:id="updateMailboxBlacklistIPs">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Update IP addresses in blacklist">
               <para role="shortdesc">Updates IP addresses in a
            blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in the last octets to
            specify IP ranges. For example: 216.12.34.%, 216.12.%.%,
            216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to add to
                     the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to remove
                     from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/ipblacklist',
                  { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                  'removeList' =\u003E '216.%.%.%' }, 'text/xml'"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                                 
                                 
                                 <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipblacklist/{ip_address}"
                id="ex-ip_address-mailbox-blacklist">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <param name="ip_address" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The IP
                                   address.</para>
                                   </wadl:doc>
                                   </param>
         <method name="POST" rax:id="addMailboxBlacklistIP">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Add IP address to blacklist">
               <para role="shortdesc">Adds an IP address to a
            blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist/216.12.34.1',
                  {},'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
               </wadl:doc>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteMailboxBlacklistIP">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Delete IP address from blacklist">
               <para role="shortdesc">Deletes an IP address from a
            blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipblacklist/216.12.34.1',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered IP is not on the current blacklist. Sample
               Message: 216.12.34.1 is not found on the
               blacklist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                   
                                   
                                   
                                 
                              <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/safelist"
                id="ex-safelist-mailbox">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listMailboxSafelistEmails">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List email addresses in mailbox safelist">
               <para role="shortdesc">Lists email addresses in a mailbox
            safelist.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET HTTP
                  verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;safelist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:safelist"&gt; &lt;addresses&gt;
                  &lt;address&gt;name1@notspam.com&lt;/address&gt;
                  &lt;address&gt;name2@notspam.com&lt;/address&gt;
                  &lt;/addresses&gt; &lt;/safelist&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"addresses":["name1@notspam.com","name2@notspam.com"]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
         <method name="PUT" rax:id="updateMailboxSafelistEmails">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Updates email addresses in          safelist">
               <para role="shortdesc">Updates email addresses in a
            safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wild card in domains, but not in
            the TLD (.com, .net, etc). You cannot use wild cards in
            email addresses. For example, the following are allowed:
            @%.example.com, @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to add
                     to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                     remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/safelist',
                  { 'addList' =\u003E
                  '@%.example.com,abc@example.com', 'removeList'
                  =\u003E '@examp%.com' }, 'text/xml'"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                                 
                                 
                                 <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/safelist/{email_address}"
                id="ex-email_address-mailbox-safelist">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <param name="email_address" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The email
                                   address.</para>
                                   </wadl:doc>
                                   </param>
         <method name="POST" rax:id="addMailboxSafelistEmailOrDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Add email address or domain to          safelist">
               <para role="shortdesc">Adds an email address or domain to the
            safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                  {},'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteMailboxSafelistEmailOrDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Delete email address or domain from safelist">
               <para role="shortdesc">Deletes an email address or domain
            from a safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered email address or domain is not on the
               current safelist. Sample Message: anyone@yahoo.com is
               not found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                   
                                   
                                   
                                 
                              <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipsafelist"
                id="ex-ipsafelist-mailbox">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listMailboxSafelistIPs">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List IP addresses in mailbox safelist">
               <para role="shortdesc">Lists IP addresses in a mailbox
            safelist.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET HTTP
                  verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;ipSafelist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:ipSafelist"&gt; &lt;addresses&gt;
                  &lt;ip&gt;192.168.0.1&lt;/ip&gt;
                  &lt;ip&gt;192.168.0.2&lt;/ip&gt; &lt;/addresses&gt;
                  &lt;/ipSafelist&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{"addresses":["192.168.0.1","192.168.0.2"]}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
         <method name="PUT" rax:id="updateMailboxSafelistIPs">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Update IP addresses in safelist">
               <para role="shortdesc">Updates IP addresses in a
            safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wild card in the last octets to
            specify IP ranges. For example: 216.12.34.%, 216.12.%.%,
            216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <th>Field
                        Name</th>
                        <th>Data
                        Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to add to
                     the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to remove
                     from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/ipsafelist',
                  { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                  'removeList' =\u003E '216.%.%.%' }, 'text/xml'"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                                 
                                 
                                 <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipsafelist/{ip_address}"
                id="ex-ip_address-mailbox-safelist-ip">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <param name="ip_address" style="template" required="true">
                                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The IP
                                   address.</para>
                                   </wadl:doc>
                                   </param>
         <method name="POST" rax:id="addMailboxSafelistIP">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Add IP address to safelist">
               <para role="shortdesc">Adds an IP address to a
            safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                  {},'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                   
                                   
                                 
                                 <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipsafelist/{email_address}"
                id="ex-email_address-mailbox-safelist-ip">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="mailbox_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="DELETE" rax:id="deleteMailboxSafelistIP">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Delete IP address from safelist">
               <para role="shortdesc">Deletes an IP address from a
            safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                  'text/xml'" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>Entered IP is not on the current safelist. Sample
               Message: 216.12.34.1 is not found on the
               safelist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                   
                                 
                              
                        
                     <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources"
                id="resources">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listResourceMailboxes">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List resource mailboxes">
               <para role="shortdesc">Lists resource mailboxes.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this to list resource mailboxes, supports
                  exporting, supports exporting. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "ResourceMailboxes": [ { "Type": "Room",
                  "PhoneNumber": "1234567890", "Upn":
                  "room.101@example.com", "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.101", "DisplayName": "Room 101",
                  "Alias": "room.101.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.101",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.101b5c" }, {
                  "Type": "Room", "PhoneNumber": "1234567890", "Upn":
                  "room.102@example.com", "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.102", "DisplayName": "Room 101",
                  "Alias": "room.102.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.102",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.1029fd" }, {
                  "Type": "Room", "PhoneNumber": "1234567890", "Upn":
                  "room.103@example.com", "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.103", "DisplayName": "Room 103",
                  "Alias": "room.103.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.103",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.10370c" } ],
                  "Sort": "cn", "Limit": 50, "Total": 3, "Order":
                  "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The listing was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="POST" rax:id="addResourceMailbox">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Add resource mailbox">
               <para role="shortdesc">Adds a resource mailbox.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to add a new resource
                  mailbox.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">POST
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources
                  { "CommonName" : "room.101" "Type" : "Room"
                  "DisplayName" : "Room 101" "PhoneNumber" :
                  "1234567890" "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value" :
                  "Videoconferencing" }, { "Value" : "Whiteboard" } ],
                  "CalendarProcessing": { "AutoBooking" : "AutoUpdate"
                  "BookingWindowInDays": 90,
                  "EnforceSchedulingHorizon": false, "AllowConflicts":
                  true, "AllowRecurringMeetings": false,
                  "ScheduleOnlyDuringWorkHours": true,
                  "MaximumDurationInMinutes": 720,
                  "MaximumConflictInstances": 1,
                  "ConflictPercentageAllowed": 50,
                  "AdditionalResponse": { "Enable": true, "Value" :
                  "This is an additional response" } }, "Delegates": [
                  { "Value" : "user1" }, { "Value" : "user2" }, {
                  "Value" : "user3" } ], "Permissions": [ {
                  "Recipient" : "user5" "Types": [ "FullAccess" ] }, {
                  "Recipient" : "user6" "Types": [ "SendAs" ] }, {
                  "Recipient" : "user7" "Types": [ "FullAccess"
                  "SendAs" ] } ], "BookInPolicy": { "Recipients": [ {
                  "Value" : "user1" }, { "Value" : "user2" } ] },
                  "RequestInPolicy": { "Recipients": [ { "Value" :
                  "user4" }, { "Value" : "user5" } ] },
                  "RequestOutOfPolicy": { "AllUsers": true } }"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="No Content.">
                  <para>The request has been accepted and will be
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="GET" rax:id="exportResourceMailboxes">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Export resource mailboxes file">
               <para role="shortdesc">Exports a file of resource
            mailboxes.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to export a file of resource
                  mailboxes.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <wadl:param name="exportTo" type="xs:string"/>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources?exportTo=myAdminEmail@example.com"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202"/>
            <response status="202">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted.">
                  <para>The request has been accepted and will be
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                        
                        <!-- keep -->
                        
                        <!-- keep -->
                        
                        <!-- keep -->
                        <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}"
                id="resource-common_name">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="showResourceMailbox">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Show resource mailbox">
               <para role="shortdesc">Shows a resource mailbox.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                  mailbox.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: </para>
                  </listitem>
               </itemizedlist>
               <para>Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>The Exchange Resource resource contains some
                  paged data that must be accessed via separate GET
                  requests.</para>
                  </listitem>
                  <listitem>
                     <para>Properties directly on the object and
                  CustomProperties, can be accessed via a GET on the
                  base resource.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.1"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Type": "Room", "PhoneNumber": "1234567890",
                  "Upn": "room.101@example.com", "ResourceCapacity":
                  25, "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.101", "DisplayName": "Room 101",
                  "Alias": "room.101.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.101",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.1019d4"
                  }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The resource was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="updateResourceMailbox">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update resource mailbox">
               <para role="shortdesc">Updates a resource mailbox.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to update an existing resource
                  mailbox.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: </para>
                  </listitem>
               </itemizedlist>
               <para>Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>All data that is part of the 'Exchange Resource'
                  resource can be updated in a single PUT
                  request.</para>
                  </listitem>
                  <listitem>
                     <para>CustomProperties, Delegates, and policies must
                  specify an Action, set to either Add or Remove, to
                  specify the operation for that value.</para>
                  </listitem>
                  <listitem>
                     <para>Permissions must be specified in whole. For
                  example, resource1@example.com has user5's
                  permission types set to FullAccess.</para>
                  </listitem>
                  <listitem>
                     <para>To add SendAs, the request must contain both
                  FullAccess and SendAs for that user.</para>
                  </listitem>
                  <listitem>
                     <para>To remove all permissions from user7, the request
                  must contain an empty Type array for that
                  user.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101
                  { "Type" : "Room" "DisplayName" : "Conference Room
                  101" "PhoneNumber" : "try shouting"
                  "ResourceCapacity" : "30" "CustomProperties": [ {
                  "Value" : "Whiteboard" "Action" : "Remove" } ],
                  "CalendarProcessing": { "AutoBooking" : "AutoUpdate"
                  "BookingWindowInDays": 180,
                  "EnforceSchedulingHorizon": true, "AllowConflicts":
                  false, "AllowRecurringMeetings": true,
                  "ScheduleOnlyDuringWorkHours": false,
                  "MaximumDurationInMinutes": 1440,
                  "MaximumConflictInstances": 0,
                  "ConflictPercentageAllowed": 0,
                  "AdditionalResponse": { "Enable": false } },
                  "Delegates": [ { "Value" : "user3" "Action" :
                  "Remove" }, { "Value" : "user4" "Action" : "Add" }
                  ], "Permissions": [ { "Recipient" : "user5" "Types":
                  [ "FullAccess" "SendAs" ] }, { "Recipient" : "user7"
                  "Types": [] }, { "Recipient" : "user8" "Types": [
                  "FullAccess" ] } ], "BookInPolicy": { "Recipients":
                  [ { "Value" : "user2" "Action" : "Remove" }, {
                  "Value" : "user3" "Action" : "Add" } ] },
                  "RequestInPolicy": { "AllUsers": true },
                  "RequestOutOfPolicy": { "AllUsers": false,
                  "Recipients": [ { "Value" : "user7" "Action" : "Add"
                  }, { "Value" : "user8" "Action" : "Add" } ] } }"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="No Content.">
                  <para>The request has been accepted and will be
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="DELETE" rax:id="deleteResourceMailbox">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Delete resource mailbox">
               <para role="shortdesc">Deletes a resource mailbox.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">DELETE
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The request has been accepted and will be
               processed.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                           
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           
                           <!-- keep -->
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/calendarProcessing"
                id="calendarProcessing">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="showResouceMailboxCalendar">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Show resource mailbox calendar">
               <para role="shortdesc">Shows resource mailbox
            calendar.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                  mailbox's calendar processing data.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Calendar Processing </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/calendarProcessing"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "AutoBooking": "AutoUpdate",
                  "BookingWindowInDays": 90,
                  "EnforceSchedulingHorizon": false, "AllowConflicts":
                  true, "AllowRecurringMeetings": false,
                  "ScheduleOnlyDuringWorkHours": true,
                  "MaximumDurationInMinutes": 720,
                  "MaximumConflictInstances": 1,
                  "ConflictPercentageAllowed": 50,
                  "AdditionalResponse": { "Enable": true, "Value":
                  "This is an additional response" } }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="updateResourceMailboxCalendar">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Update resource mailbox calendar">
               <para role="shortdesc">Updates resource mailbox
            calendar.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to update an existing resource
                  mailbox's calendar processing data.</para>
                  </listitem>
                  <listitem>
                     <para>Although Calendar Processing settings can be
                  updated as part of the base Exchange Resource
                  update, a convenience route is also available for
                  just sending just the Calendar Processing part of
                  the request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Calendar Processing </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/calendarProcessing
                  { "AutoBooking" : "AutoUpdate"
                  "BookingWindowInDays": 180,
                  "EnforceSchedulingHorizon": true, "AllowConflicts":
                  false, "AllowRecurringMeetings": true,
                  "ScheduleOnlyDuringWorkHours": false,
                  "MaximumDurationInMinutes": 1440,
                  "MaximumConflictInstances": 0,
                  "ConflictPercentageAllowed": 0,
                  "AdditionalResponse": { "Enable": false } }"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
                              
                              <!-- keep -->
                              
                              <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/delegates"
                id="delegates">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listDelegates"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="List resource mailbox delegates">
               <para role="shortdesc">Lists resource mailbox
            delegates.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                  mailbox's delegates data.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Delegates Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/delegates"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Delegates": [ { "Value": "user1" }, { "Value":
                  "user2" }, { "Value": "user3" } ], "Limit": 50,
                  "Total": 3, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="bulkUpdateDelegates">
      <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      title="Bulk-update resource mailbox delegates">
               <para role="shortdesc">Bulk-updates resource mailbox
            delegates.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to update an existing resource
                  mailbox's delegates data.</para>
                  </listitem>
                  <listitem>
                     <para>Although Delegates settings can be updated as
                  part of the base Exchange Resource update, a
                  convenience route is also available for just sending
                  the Delegates part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Delegates Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/delegates
                  [ { "Value" : "user1" "Action" : "Remove" }, {
                  "Value" : "user2" "Action" : "Remove" }, { "Value" :
                  "user5" "Action" : "Add" } ]" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                <!-- keep -->
                                <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/permissions"
                id="permissions">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="showResourceMailboxPermissions"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource mailbox permissions">
               <para role="shortdesc">Shows resource mailbox
            permissions.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                  mailbox's permissions data.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Permissions Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/permissions"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Permissions": [ { "Recipient": "user5", "Types":
                  [ "FullAccess" ] }, { "Recipient": "user6", "Types":
                  [ "SendAs" ] }, { "Recipient": "user7", "Types": [
                  "FullAccess", "SendAs" ] } ], "Limit": 50, "Total":
                  3, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="bulkUpdateResourceMailboxPermissions"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Bulk-update resource mailbox permissions">
               <para role="shortdesc">Permissions settings can be updated as
            part of the base Exchange resource update. A convenience
            route is also available for just sending the Permissions
            part of the request.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                  mailbox's calendar processing data.</para>
                  </listitem>
                  <listitem>
                     <para>Although Permissions settings can be updated as
                  part of the base Exchange Resource update, a
                  convenience route is also available for just sending
                  the Permissions part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Permissions">Permissions</phrase> Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/permissions
                  [ { "Recipient" : "user5" "Types": [ "FullAccess"
                  "SendAs" ] }, { "Recipient" : "user7" "Types": [] },
                  { "Recipient" : "user8" "Types": [ "FullAccess" ] }
                  ]" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
                                <!-- keep -->
                                <!-- keep -->
                           
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/bookInPolicy"
                id="bookInPolicy">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <param name="common_name" style="template" required="true">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The common
                                   name.</para>
                              </wadl:doc>
                           </param>
         <method name="GET" rax:id="listResourceMailboxPolicies"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List resource mailbox policies">
               <para role="shortdesc">Lists resource mailbox
            policies.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                  mailbox's permissions data.</para>
                  </listitem>
                  <listitem>
                     <para>Examples in this section will use BookInPolicy,
                  but the interface for the three is all the
                  same.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Recipients Listing</para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>BookIn, RequestIn, and RequestOutOf policies can all be
            accessed via the resource's URL followed by /bookInPolicy,
            /requestInPolicy, and /requestOutOfPolicy,
            respectively.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/bookInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestOutOfPolicy</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/bookInPolicy"
                  });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user2" } ], "AllUsers":false, "Limit": 50, "Total":
                  2, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
         <method name="PUT" rax:id="bulkUpdateResourceMailboxPolicies"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Bulk-update resource mailbox policies">
               <para role="shortdesc">Bulk-updates resource mailbox
            policies.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                  mailbox's policies data.</para>
                  </listitem>
                  <listitem>
                     <para>Although policies settings can be updated as part
                  of the base Exchange Resource update, a convenience
                  route is also available for just sending the just
                  the policies part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Recipients </para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>BookIn, RequestIn, and RequestOutOf policies can all be
            accessed via the resource's URL followed by /bookInPolicy,
            /requestInPolicy, and /requestOutOfPolicy,
            respectively.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/bookInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestOutOfPolicy</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/bookInPolicy
                  { "Recipients": [ { "Value" : "user2" "Action" :
                  "Remove" }, { "Value" : "user3" "Action" : "Add" }
                  ], "AllUsers\":false }" });</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request.">
                  <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found.">
                  <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFoundFault for more detail.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
                                <!-- keep -->
                                <!-- keep -->
                           
                        
                        <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources/resourceOptions/AvailableDelegatesRecipients"
                id="availabledelegatesrecipients">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listDelegatesRecipientsNew"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Lists delegates recipients (new resource)">
               <para role="shortdesc">Lists recipients that can be delegates
            for a new resource on a given domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can be
                  delegates for a new resource on a given
                  domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients">Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/{domain}/ex/resourceOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of an Exchange Resource add
            operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/AvailableDelegatesRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user10" }, { "Value": "user2" }, { "Value": "user3"
                  }, { "Value": "user4" }, { "Value": "user5" }, {
                  "Value": "user6" }, { "Value": "user7" }, { "Value":
                  "user8" }, { "Value": "user9" } ], "Limit": 50,
                  "Total": 10, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="listDelegatesRecipientsExisting"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List delegates recipients (existing resource)">
               <para role="shortdesc">Lists recipients that can be delegates
            for an existing resource.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can be
                  delegates for an existing resource.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients">Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/{domain}/ex/resource/{common
            name}/options is the base URL for getting complete sets of
            valid data that can be submitted as part of an Exchange
            Resource edit operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/options/AvailableDelegatesRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{ "Recipients": [ { "Value": "user10" }, { "Value":
                  "user4" }, { "Value": "user5" }, { "Value": "user6"
                  }, { "Value": "user7" }, { "Value": "user8" }, {
                  "Value": "user9" } ], "Limit": 50, "Total": 7,
                  "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </response>
         </method>
      </resource>
                                <!-- keep -->
                                <!-- keep -->
                           <resource path="customers/{customer_account_number}/domains/{domain_name}/ex/resources/resourceOptions/availableBookInPolicyRecipients"
                id="availableBookInPolicyRecipients">
         <param name="customer_account_number" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
         <param name="domain_name" style="template" required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The domain name.</para>
                     </wadl:doc>
                  </param>
         <method name="GET" rax:id="listPolicyRecipientsNew"> <!-- keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List policy recipients (new resource)">
               <para role="shortdesc">Lists recipients that can be in
            policies for a new resource on a given domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can be in
                  policies for a new resource on a given
                  domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients">Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>Available BookIn,
            RequestIn, and RequestOutOf policy recipients can all be
            accessed via the resourceOptions URL followed by
            /availableBookInPolicyRecipients,
            /availableRequestInPolicyRecipients,
            /availableRequestOutOfRecipients respectively. The example
            in this section will use BookInPolicy, but the interface
            for the three is all the same.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resourceOptions/availableBookInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resourceOptions/availableRequestInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resourceOptions/availableRequestOutOfRecipients</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/{domain}/ex/resourceOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of an Exchange Resource add
            operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/availableBookInPolicyRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user10" }, { "Value": "user2" }, { "Value": "user3"
                  }, { "Value": "user4" }, { "Value": "user5" }, {
                  "Value": "user6" }, { "Value": "user7" }, { "Value":
                  "user8" }, { "Value": "user9" } ], "Limit": 50,
                  "Total": 10, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="listPolicyRecipientsExisting"> <!--  keep -->
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List policy recipients (existing resource)">
               <para role="shortdesc">Lists recipients that can be in
            policies for an existing resource.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can be in
                  policies for an existing resource.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients">Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>Available BookIn,
            RequestIn, and RequestOutOf policy recipients for an
            existing resource can all be accessed via the resource's
            URL followed by /availableBookInPolicyRecipients,
            /availableRequestInPolicyRecipients, and
            /availableRequestOutOfRecipients, respectively. The
            example in this section will use BookInPolicy, but the
            interface for the three is all the same.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resources/{common
                  name}/availableBookInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resources/{common
                  name}/availableBookInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resources/{common
                  name}/availableBookInPolicyRecipients</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
            https://api.emailsrvr.com/v1/domains/(domain)/ex/resource/{common
            name}/options is the base URL for getting complete sets of
            valid data that can be submitted as part of an Exchange
            Resource edit operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json" element="noop">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/options/availableBookInPolicyRecipients"
                  });</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <doc xml:lang="en">
                     <xsdxt:code>
                        <programlisting xmlns="http://docbook.org/ns/docbook" language="javascript">{ "Recipients": [ { "Value": "user10" }, { "Value":
                  "user3" }, { "Value": "user4" }, { "Value": "user5"
                  }, { "Value": "user6" }, { "Value": "user7" }, {
                  "Value": "user8" }, { "Value": "user9" } ], "Limit":
                  50, "Total": 8, "Order": "asc" }</programlisting>
                     </xsdxt:code>
                  </doc>
               </representation>
            </response>
         </method>
      </resource>
                                <!-- keep -->
                                <!-- keep -->
                           
                     
   </resources>
   <!-- methods -->
   
   <!-- BlackBerry mailboxes -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMailboxMobile"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>
         
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
   </method>
   
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMailboxActiveSync"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>
         
         <representation mediaType="application/json">
            
         </representation>
      </response>   
   </method>
   
   <!-- Contacts -->
   

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showContactDetails"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addContact"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateContact"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteContact"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
   </method>
   
   <!-- Blacklists -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listBlacklistEmails"
           name="GET"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addBlacklistEmailOrDomain"
           name="POST"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateBlacklistEmails"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteBlacklistEmailsOrDomains"
           name="DELETE"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>
   
   
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMobileSyncUsers"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="enableMobileSync"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="disableMobileSync"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showDomainAutoProvisionSetting"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="setMobileSyncAutoProvision"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showMailboxSpamSettings"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailboxSpamSettings"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>


   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMailboxBlacklistEmails"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>



   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailboxBlacklistEmails"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteMailboxBlacklistEmailOrDomain"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMailboxBlacklistIPs"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addMailboxBlacklistIP"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailboxBlacklistIPs"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteMailboxBlacklistIP"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMailboxSafelistEmails"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addMailboxSafelistEmailOrDomain"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailboxSafelistEmails"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteMailboxSafelistEmailOrDomain"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMailboxSafelistIPs"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addMailboxSafelistIP"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailboxSafelistIPs"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteMailboxSafelistIP"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showMailboxSettingDetails"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailboxSettings"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listRackspaceDomainAliases"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showAliasDetails"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="createAlias"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteAlias"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addDomainlistEmail"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteDomainlistEmail"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="bulkUpdateAlias"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showMailboxDetails1"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addMailbox1"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailbox1"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteMailbox1"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addMailboxEmail"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteMailboxEmail"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showPermissionMailbox"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>


   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="grantAddMailboxPermission"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateMailboxPermission"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteMailboxPermission"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="attachMailboxMobile"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="detachMailboxMobile"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showMailboxActiveSync"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="attachMailboxActiveSync"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="detachMailboxActiveSync"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listMailboxBlacklist"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>



   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listContacts"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDistributionLists"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showDistributionListDetails"
           name="GET">
      <!-- keep -->
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">

            
         </representation>
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addDistributionList"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateDistributionList"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteDistributionList"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="exportDistributionListFile"
           name="GET">
      <!-- keep -->
      
      <request>
         <wadl:param name="exportTo" type="xs:string"/>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="202"/>
      <response status="200">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="importDistributionListFile"
           name="POST">
      <!-- keep -->
      
      <request>
         <wadl:param name="emailAddress" type="xs:string"/>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="202">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDistributionListAltEmails"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="404">
         
      </response>
   </method>

   <!-- begin EXCHANGE MAILBOXES -->
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExchangeMailboxes"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showExchangeMailboxDetails"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExchangeMailbox"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExchangeMailbox"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExchangeMailbox"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExchangeMailboxEmail"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExchangeMailboxEmail"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showMailboxPermissions"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExchangeMailboxPermissions"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExchangeMailboxPermissions"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExchangeMailboxPermissions"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExMailboxBlackberry"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExchangeMailboxBlackberry"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExchangeMailboxBlackberry"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExMailboxActiveSync"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showExMailboxActiveSync"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExchangeMailboxActiveSync"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="detachExActiveSync"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>


   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showExSpamSettings"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExchangeMailboxSpamSettings"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExBlacklistEmails"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExBlacklistEmailOrDomain"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExBlacklist"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExBlacklistEmailOrDomain"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExBlacklistIPs"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExBlacklistIPs"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExBlacklistIPs"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExBlacklistIPs"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExSafelistEmails"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExSafelistEmailOrDomain"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExSafelistEmails"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExSafelistEmailOrDomain"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExSafelistIPs"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExIPSafelistIPs"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExSafelistIPs"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExSafelistIP"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExContacts"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showExContactDetails"
           name="GET">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>

      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addExContactDetails"
           name="POST">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateExContactDetails"
           name="PUT">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
      <response status="400">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteExContact"
           name="DELETE">
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         
      </response>
   </method>
   <!-- begin EXCHANGE distribution listS -->

   
   

   
   

   

   

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExDistributionListAltEmails"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateDistributionListAltEmails"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <wadl:response status="200">
         
      </wadl:response>
      <wadl:response status="400">
         
      </wadl:response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDistributionListMembers"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <wadl:response status="200">
         
      </wadl:response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateDistributionListMembers"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <wadl:response status="400">
         
      </wadl:response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDistributionListManagers"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateDistributionListManagers"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <wadl:response status="200">
         
      </wadl:response>
      <wadl:response status="400">
         
      </wadl:response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDistributionListSenders"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <wadl:response status="200">
         
      </wadl:response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateDistributionListSenders"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <wadl:response status="200">
         
      </wadl:response>
      <wadl:response status="400">
         
      </wadl:response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDistributionListRecipients"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   

   

   

   

   <!-- begin EXCHANGE RESOURCES -->

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listResourceMailboxes"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="200">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showResourceMailbox"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="200">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addResourceMailbox"
           name="POST">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateResourceMailbox"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteResourceMailbox"
           name="DELETE">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="200">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="exportResourceMailboxes"
           name="GET">
      <!-- keep -->
      
      <request>
         <wadl:param name="exportTo" type="xs:string"/>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="202"/>
      <response status="202">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showResouceMailboxCalendar"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="200">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateResourceMailboxCalendar"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDelegates"
           name="GET"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="200">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="bulkUpdateDelegates"
           name="PUT">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="200">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showResourceMailboxPermissions"
           name="GET"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="200">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listResourceMailboxPolicies"
           name="GET"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="200">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="bulkUpdateResourceMailboxPolicies"
           name="PUT"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <response status="200">
         
      </response>
      <response status="400">
         
      </response>
      <response status="404">
         
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listResourceDelegatesRecipients"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listRecipientsWithResourcePermissions"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
  
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listNewSendersRecipients"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExistingSendersRecipients"
           name="GET">
      <!--keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listNewManagersRecipients"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExistingManagersRecipients"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listExistingMembersRecipients"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listNewMembersRecipients"
           name="GET">
      <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="bulkUpdateResourceMailboxPermissions"
           name="PUT"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="204"/>
      <wadl:response status="200">
         
      </wadl:response>
      <wadl:response status="400">
         
      </wadl:response>
      <wadl:response status="404">
         
      </wadl:response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDelegatesRecipientsNew"
           name="GET"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listPolicyRecipientsNew"
           name="GET"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDelegatesRecipientsExisting"
           name="GET"> <!-- keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>

   

   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listPolicyRecipientsExisting"
           name="GET"> <!--  keep -->
      
      <request>
         <representation mediaType="application/json" element="noop">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method> 
</wadl:application>
