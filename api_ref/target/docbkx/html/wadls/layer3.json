{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"v2.0/routers", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"List Routers", "description":"\n Lists logical routers that are accessible to the tenant who submits the request.\n This operation lists routers for the specified tenant. Default policy settings return only those routers\n that are owned by the tenant who submits the request, unless an admin user submits the request. You can\n control which attributes are returned by using the fields query parameter, and you can\n specify how many results to return per page. For information, see\n Filtering \n Requests\n or\n Pagination \n of Requests\n in the Cloud Networks API Developer Guide.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"routers\": \n [\n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": null,\n \"name\": \"second_routers\",\n \"admin_state_up\": true,\n \"tenant_id\": \"6b96ff0cb17a4b859e1e575d221683d3\",\n \"id\": \"7177abc4-5ae9-4bb7-b0d4-89e94a4abf3b\"\n },\n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": \n {\n \"network_id\": \"3c5bcddd-6af9-4e6b-9c3e-c153e521cab8\"\n },\n \"name\": \"router1\",\n \"admin_state_up\": true,\n \"tenant_id\": \"33a40233088643acb66ff6eb0ebea679\",\n \"id\": \"a9254bdb-2613-4a13-ac4c-adc581fba50d\"\n }\n ]\n}", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"POST", "name":"Create Router", "description":"\n Creates a logical router.\n This operation creates a new logical router. When it is created, a logical router does not have any\n internal interface, and it is not associated to any subnet. You can optionally specify an external gateway\n for a router at creation time. The external gateway for the router must be plugged into an external network,\n which has its extended field router:external set to true. To specify an\n external gateway, the identifier of the external network must be passed in the\n external_gateway_info parameter in the request body, as follows:\n \n \"external_gateway_info\" :\n {\n \"network_id\": external_network_uuid\n }\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\":\n {\n \"name\": \"another_router\",\n \"admin_state_up\": true\n }\n}", "schema":"" } ], "responses":[ { "name":"201", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\":\n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": null,\n \"name\": \"another_router\",\n \"admin_state_up\": true,\n \"tenant_id\": \"6b96ff0cb17a4b859e1e575d221683d3\",\n \"id\": \"8604a0de-7f6b-409a-a47c-a1cc7bc77b2e\"\n }\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"v2.0/routers/{router_id}", "parameters":{ "router_id":{ "description":"The UUID of the\n router.", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show Router Details", "description":"\n Shows details for the specified router.\n This operation shows details for the specified router. You can control which parameters are returned by\n using the fields query parameter, and you can specify how many results to return per\n page. For information, see\n Filtering \n Requests\n or\n Pagination \n of Requests\n in the Cloud Networks API Developer Guide.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"router\": \n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": \n {\n \"network_id\": \"3c5bcddd-6af9-4e6b-9c3e-c153e521cab8\"\n },\n \"name\": \"router1\",\n \"admin_state_up\": true,\n \"tenant_id\": \"33a40233088643acb66ff6eb0ebea679\",\n \"id\": \"a9254bdb-2613-4a13-ac4c-adc581fba50d\"\n }\n}", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update Router", "description":"\n Updates the specified router.\n This operation updates any of the name, admin_state_up, and\n external_gateway_info parameters for the specified router. For more information\n about how to set the external_gateway_info parameter for a router, see\n .\n \n This operation does not allow you to update the router interfaces. To update a router, use\n \n and\n \n operations. \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\":\n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\": null,\n \"name\": \"another_router\",\n \"admin_state_up\": true,\n \"tenant_id\": \"6b96ff0cb17a4b859e1e575d221683d3\",\n \"id\": \"8604a0de-7f6b-409a-a47c-a1cc7bc77b2e\"\n }\n}", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"router\":\n {\n \"status\": \"ACTIVE\",\n \"external_gateway_info\":\n {\n \"network_id\": \"8ca37218-28ff-41cb-9b10-039601ea7e6b\"\n },\n \"name\": \"another_router\",\n \"admin_state_up\": true,\n \"tenant_id\": \"6b96ff0cb17a4b859e1e575d221683d3\",\n \"id\": \"8604a0de-7f6b-409a-a47c-a1cc7bc77b2e\"\n }\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] }, { "method":"DELETE", "name":"Delete Router", "description":"\n Deletes the logical router and its external gateway interface.\n This operation deletes the specified router and, if present, its external gateway interface.\n \n The operation fails if the router has attached interfaces.\n Use the\n \n operation to remove all router interfaces before you delete the router.\n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"v2.0/routers/{router_id}/add_router_interface", "parameters":{ "router_id":{ "description":"The UUID of the\n router.", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"PUT", "name":"Add Interface to Router", "description":"\n Adds an internal interface to the specified logical router.\n This operation attaches a subnet to an internal router interface. You must specify either a\n subnet_id or a port_id parameter in the request body. If you\n specify both IDs, the operation returns a 400 Bad Request error.\n If you specify a subnet_id parameter in the request body, the gateway IP address for\n the subnet is used to create the router interface.\n If you specify a port_id parameter in the request body, the IP address associated with\n the port is used to create the router interface.\n \n If either multiple IP addresses are associated with the specified port, or if no IP address is\n associated with the specified port, the operation returns a 400 Bad Request\n error.\n If the port is already used, the operation returns a 409 Conflict error.\n \n The port id that is returned by this operation can either be the same ID passed in\n the request body or the ID of a new port created by this operation to attach the specified subnet to the\n router. After you run this operation, the device_id parameter of this port is set to\n the ID of the router, and the device_ownerparameter is set to\n network:router_interface, as shown in this example:\n {\n \"port\":{\n \"status\":\"ACTIVE\",\n \"name\":\"\",\n \"admin_state_up\":true,\n \"network_id\":\"5307648b-e836-4658-8f1a-ff7536870c64\",\n \"tenant_id\":\"6b96ff0cb17a4b859e1e575d221683d3\",\n \"device_owner\":\"network:router_interface\",\n \"mac_address\":\"fa:16:3e:f7:d1:9c\",\n \"fixed_ips\":[\n {\n \"subnet_id\":\"a2f1f29d-571b-4533-907f-5803ab96ead1\",\n \"ip_address\":\"10.1.1.1\"\n }\n ],\n \"id\":\"3a44f4e5-1694-493a-a1fb-393881c673a4\",\n \"device_id\":\"7177abc4-5ae9-4bb7-b0d4-89e94a4abf3b\"\n }\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\"\n}", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\",\n \"port_id\": \"3a44f4e5-1694-493a-a1fb-393881c673a4\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"v2.0/routers/{router_id}/remove_router_interface", "parameters":{ "router_id":{ "description":"The UUID of the\n router.", "type":"csapi:UUID", "required":"", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"PUT", "name":"Remove Interface from Router", "description":"\n Removes an internal interface from the specified logical router.\n This operation removes an internal router interface, which detaches a subnet from the router. It also\n removes the port connecting the router with the subnet from that subnet.\n You must specify a subnet_id parameter, a port_id, or both\n subnet_id and port_id parameters in the request body, which\n will identify the router interface to remove.\n If you specify both IDs, the subnet_id parameter must correspond to the\n subnet_id of the first IP address on the port specified by the\n port_id parameter. Otherwise, the operation returns a 409\n Conflict error. The response contains information about the affected router and\n interface.\n If the router, subnet, or port either do not exist or are not visible to you, the operation returns a\n 404 Not Found.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\"\n}", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"id\": \"8604a0de-7f6b-409a-a47c-a1cc7bc77b2e\",\n \"tenant_id\": \"2f245a7b-796b-4f26-9cf9-9e82d248fda7\",\n \"port_id\": \"3a44f4e5-1694-493a-a1fb-393881c673a4\",\n \"subnet_id\": \"a2f1f29d-571b-4533-907f-5803ab96ead1\"\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"409", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] } ] } ] }