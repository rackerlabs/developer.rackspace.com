{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"customers", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"List customers (reseller only)", "description":"\n Lists customers to which the\n authenticated user has access.\n Filter\/Search\n Search parameter 'startswith' and 'contains' will try\n to find the result in customer name, account number and\n reference number. We also provide a separate query method\n ?referenceNumber=123456 that will return a Show on the\n exact customer whose reference number is as\n specified.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET '\/customers?size=100\\u0026offset=10,'\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<customerList xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:customerList\">\n <offset>0<\/offset>\n <size>50<\/size>\n <total>3<\/total>\n <customers>\n <customer>\n <name>API Customer 17<\/name>\n <accountNumber>460182<\/accountNumber>\n <referenceNumber>49<\/referenceNumber>\n <\/customer>\n <customer>\n <name>API Customer 39<\/name>\n <accountNumber>460181<\/accountNumber>\n <referenceNumber>23<\/referenceNumber>\n <\/customer>\n <customer>\n <name>API Customer 50<\/name>\n <accountNumber>460183<\/accountNumber>\n <referenceNumber>10<\/referenceNumber>\n <\/customer>\n <\/customers>\n<\/customerList>\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"offset\":0,\n \"size\":50,\n \"total\":3,\n \"customers\":[\n {\n \"name\":\"API Customer 17\",\n \"accountNumber\":\"460182\",\n \"referenceNumber\":\"49\"\n },\n {\n \"name\":\"API Customer 39\",\n \"accountNumber\":\"460181\",\n \"referenceNumber\":\"23\"\n },\n {\n \"name\":\"API Customer 50\",\n \"accountNumber\":\"460183\",\n \"referenceNumber\":\"10\"\n }\n ]\n}", "schema":"" } ] } ] }, { "method":"POST", "name":"Add sub-account (reseller only)", "description":"\n Adds a sub-account.\n Note that customer number is not known until the\n customer is added.\n \n Request Data\n \n \n \n Field\n Name\n \n \n Data\n Type\n \n \n Description\n \n \n \n \n \n name\n string\n The customer's display name (Required for\n Add)\n \n \n referenceNumber\n string\n The reference number of this account\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST '\/customers', 'text\/xml', { 'name' =\\u003E\n 'Name' }\" });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show sub-account details (reseller only)", "description":"\n Shows sub-account details.\n Remarks\n \n \n To do the show operation on the account that is\n logged in instead of a customer's account, use \"me\"\n in the place of the customer account number i.e.\n 'https:\/\/api.emailsrvr.com\/v0\/customers\/me'.\n \n \n The show operation only supports the GET HTTP\n verb. For text\/xml format, refer to the following\n schema document: Customer.xsd\n \n \n \n Example: Querying with Reference Number\n The query string \"referenceNumber=xx\" searches for a\n customer with an exact reference number.\n \n \n GET '\/customers?referenceNumber=49',\n 'text\/xml'\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET \/customers\/me, text\/xml\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<customer xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:customer\">\n <name>API Customer 17<\/name>\n <accountNumber>460182<\/accountNumber>\n <referenceNumber>49<\/referenceNumber>\n<\/customer>\n", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"name\":\"API Customer\n 17\",\"accountNumber\":\"460182\",\"referenceNumber\":\"49\"}", "schema":"" } ] } ] }, { "method":"PUT", "name":"Update sub-account (reseller only)", "description":"\n Updates a sub-account.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT '\/customers\/999999', 'text\/xml', { 'name'\n =\\u003E 'NewName', 'referenceNumber' =\\u003E '12345'\n }\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"DELETE", "name":"Delete sub-account (reseller only)", "description":"\n Deletes a sub-account.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE '\/customers\/999999', 'text\/xml'\"\n });", "schema":"" } ], "responses":[  ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/loginToken", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"POST", "name":"Generate login token", "description":"\n Generates a login token that a\n customer can use to SSO into the Control Panel.\n Login tokens can be generated for virtual and\n non-virtual users.\n \n \n Virtual user gets the administrator's privileges\n when SSOed into the Control Panel.\n \n \n Non-virtual user gets only as much privileges as\n are given to him\/her when his\/her account was\n created.\n \n \n A Login token is valid for ten minutes after its\n creation. The \"dateCreated\" field indicates the time when\n the login token is created.\n \n \n Using the generated login token shown in the\n example below, the customer with account number\n 460896 can SSO into the Control Panel using the\n following URL:\n http:\/\/ControlPanelURL\/TokenLogin.aspx?loginToken=EEB0012D8DBC2CAC26E28365D44B537FFF0D79350\n \n \n A customer can also use the login token to log\n into their private label control panel (E.g.:\n cp.mydomain.com\/logintokens.aspx).\n \n \n \n Request Data\n \n \n \n Field\n Name\n \n \n Data\n Type\n \n \n Description\n \n \n \n \n \n userName\n string\n The name for which login token needs to be\n created.\n \n \n virtualUser\n string\n A flag indicating whether the user for whom the\n login token needs to be generated is virtual or\n non-virtual. Valid values: true\/false. When set\n to true, the userName is treated as a virtual\n user. When set to false, the userName is treated\n as a non-virtual user. A non-virtual user must be\n an existing admin user.\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST '\/customers\/460896\/loginToken', 'text\/xml' {\n 'userName' =\\u003E 'dev_cust_limitedadmin',\n 'virtualUser' =\\u003E 'true' }\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <loginToken\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:loginToken\">\n <user>dev_cust_limitedadmin_460896_vu<\/user>\n <token>EEB0012D8DBC2CAC26E28365D44B537FFF0D79350<\/token>\n <dateCreated>6\/11\/2010 10:53:46\n AM<\/dateCreated>\n <\/loginToken>", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/admins", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"List account admins", "description":"\n Lists account admins.\n If you specify a customer account, a list of admins\n under that specific account are returned.\n \n \n This operation Lists admins under the account. If\n you specify a customer account, a list of admins\n under that specific account is returned.\n \n \n Alternate route: \/v0\/admins\n \n \n Remarks\n \n \n To retrieve a list of admins owned by the account\n that is logged in, use \"me\" as the customer account\n number i.e.\n 'https:\/\/api.emailsrvr.com\/v0\/customers\/me\/domains'.\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET '\/customers\/999999\/admins?size=5\\u0026page=1',\n 'text\/xml'\" });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <adminList\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:adminList\">\n <offset>0<\/offset>\n <size>50<\/size>\n <total>3<\/total> <admins>\n <admin>\n <adminId>apiadmin37<\/adminId>\n <type>super<\/type>\n <enabled>true<\/enabled>\n <locked>false<\/locked> <\/admin>\n <admin>\n <adminId>apiadmin76<\/adminId>\n <type>super<\/type>\n <enabled>true<\/enabled>\n <locked>false<\/locked> <\/admin>\n <admin>\n <adminId>apiadmin94<\/adminId>\n <type>super<\/type>\n <enabled>true<\/enabled>\n <locked>false<\/locked> <\/admin>\n <\/admins> <\/adminList>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"admins\":[{\"adminId\":\"apiadmin37\",\"enabled\":true,\"locked\":false,\"type\":\"super\"},{\"adminId\":\"apiadmin76\",\"enabled\":true,\"locked\":false,\"type\":\"super\"},{\"adminId\":\"apiadmin94\",\"enabled\":true,\"locked\":false,\"type\":\"super\"}],\"offset\":0,\"size\":50,\"total\":3}", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"customers/{customer_account_number}/admins/{admin_name}", "parameters":{ "customer_account_number":{ "description":"The customer account\n number.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] }, "admin_name":{ "description":"The admin name.\n", "type":"", "required":"true", "default":"", "example":"", "values":[  ] } }, "headers":{  }, "actions":[ { "method":"GET", "name":"Show admin details", "description":"\n Shows admin details.\n \n \n The show operation will return detailed\n information about the specified admin.\n \n \n Alternate route: \/v0\/admins\/{admin name}\n \n \n Remarks\n \n \n The show operation only supports the GET HTTP\n verb. For text\/xml format, refer to the following\n schema document: Admin.xsd\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"GET '\/customers\/999999\/admins\/admin1', 'text\/xml'\"\n });", "schema":"" } ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <admin\n xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\"\n xmlns=\"urn:xml:admin\">\n <adminId>apiadmin1<\/adminId>\n <type>super<\/type>\n <enabled>true<\/enabled>\n <locked>false<\/locked>\n <firstName>First<\/firstName>\n <lastName>Last<\/lastName>\n <email>first.last@rackspace.com<\/email>\n <passwordExpiration>10<\/passwordExpiration>\n <allowSimultaneousLogins>false<\/allowSimultaneousLogins>\n <restrictedIps>\n <restrictedIps>1.1.1.1<\/restrictedIps>\n <restrictedIps>1.1.1.2<\/restrictedIps>\n <restrictedIps>1.1.1.3<\/restrictedIps>\n <\/restrictedIps> <\/admin>", "schema":"" }, { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\"adminId\":\"apiadmin1\",\"allowSimultaneousLogins\":false,\"email\":\"first.last@rackspace.com\",\"firstName\":\"First\",\"enabled\":true,\"locked\":false,\"lastName\":\"Last\",\"passwordExpiration\":10,\"restrictedIps\":[\"1.1.1.1\",\"1.1.1.2\",\"1.1.1.3\"],\"type\":\"super\"}", "schema":"" } ] } ] }, { "method":"POST", "name":"Add admin", "description":"\n Adds an admin to a specified\n account.\n \n \n Add a new admin under the specified\n account.\n \n \n Alternate route: \/v0\/admins\/{admin name}\n \n \n \n Request Data\n \n \n \n Field\n Name\n \n \n Data\n Type\n \n \n Description\n \n \n \n \n \n type\n string\n Admin type (Required for Add). Must be \"super\",\n \"standard\" or \"limited\". Can't change permissions\n and domain access for limited admin at this\n point.\n \n \n password\n string\n Admin log in password (Required for Add)\n \n \n firstName\n string\n Admin first name (Required for Add)\n \n \n lastName\n string\n Admin last name (Required for Add)\n \n \n email\n string\n Admin contact email (Required for Add)\n \n \n securityQuestion\n string\n Security question (Required for Add)\n \n \n securityAnswer\n string\n Security answer (Required for Add)\n \n \n passwordExpiration\n int\n The number of days in which password expires. 0\n means password never expires.\n \n \n allowSimultaneousLogins\n boolean\n Allow simultaneous logins using this\n administrative ID\n \n \n restrictedIps\n string\n Login restricted to IP address(es). Can be up to\n 3 valid addresses separated by commas.\n \n \n enabled\n boolean\n Enable\/disable admin account\n \n \n locked\n boolean\n Lock\/unlock admin account\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"POST '\/customers\/999999\/admins\/admin1', { 'type'\n =\\u003E 'super', 'password' =\\u003E 'password',\n 'firstName' =\\u003E 'First', 'lastName' =\\u003E\n 'Last', 'email' =\\u003E 'first.last@rackspace.com',\n 'securityQuestion' =\\u003E 'Q', 'securityAnswer'\n =\\u003E 'A' }, 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] }, { "method":"PUT", "name":"Update admin", "description":"\n Updates an admin for a specified\n account.\n \n \n Updates an existing admin under\n the specified account.\n \n \n Alternate route: \/v0\/admins\/{admin name}\n \n \n \n Request Data\n \n \n \n Field\n Name\n \n \n Data\n Type\n \n \n Description\n \n \n \n \n \n type\n string\n Admin type (Required for Add). Must be \"super\",\n \"standard\" or \"limited\". Can't change permissions\n and domain access for limited admin at this\n point.\n \n \n password\n string\n Admin log in password (Required for Add)\n \n \n firstName\n string\n Admin first name (Required for Add)\n \n \n lastName\n string\n Admin last name (Required for Add)\n \n \n email\n string\n Admin contact email (Required for Add)\n \n \n securityQuestion\n string\n Security question (Required for Add)\n \n \n securityAnswer\n string\n Security answer (Required for Add)\n \n \n passwordExpiration\n int\n The number of days in which password expires. 0\n means password never expires.\n \n \n allowSimultaneousLogins\n boolean\n Allow simultaneous logins using this\n Administrative ID\n \n \n restrictedIps\n string\n Login restricted to IP address(es). Can be up to\n 3 valid addresses separated by commas.\n \n \n enabled\n boolean\n Enable\/disable admin account\n \n \n locked\n boolean\n Lock\/unlock admin account\n \n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"PUT '\/customers\/999999\/admins\/admin2', { 'enabled'\n =\\u003E 'true', 'locked' =\\u003E 'false',\n 'passwordExpiration' =\\u003E '0',\n 'allowSimultaneousLogins' =\\u003E 'true',\n 'restrictedIps' =\\u003E '1.1.1.1' }, 'text\/xml'\"\n });", "schema":"" } ], "responses":[  ] } ] }, { "method":"DELETE", "name":"Delete admin", "description":"\n Deletes an admin from a specified\n account.\n \n \n Deletes an admin\n \n \n Alternate route: \/v0\/admins\/{admin name}\n \n \n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[ { "name":"", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"DELETE '\/customers\/999999\/admins\/admin1',\n 'text\/xml'\" });", "schema":"" } ], "responses":[  ] } ] } ] } ] } ] }