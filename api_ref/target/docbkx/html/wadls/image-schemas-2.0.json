{ "_version":"1.0", "metadata":{ "FORMAT":{ "value":"1A" } }, "name":"", "description":"", "resourceGroups":[ { "name":"All Methods", "description":"", "resources":[ { "name":"", "description":"", "uriTemplate":"schemas/images", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get images schema", "description":"\n Gets a json-schema document that represents an image members entity, which is a container\n of image member entities.\n The following schema is just an example. Consider only the response to the API call as\n authoritative.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"name\": \"images\",\n \"properties\": {\n \"first\": {\n \"type\": \"string\"\n },\n \"images\": {\n \"items\": {\n \"name\": \"image\",\n \"properties\": {\n \"architecture\": {\n \"description\": \"Operating system architecture as specified in http:\/\/docs.openstack.org\/trunk\/openstack-compute\/admin\/content\/adding-images.html\",\n \"type\": \"string\"\n },\n \"checksum\": {\n \"description\": \"md5 hash of image contents. (READ-ONLY)\",\n \"maxLength\": 32,\n \"type\": \"string\"\n },\n \"container_format\": {\n \"description\": \"Format of the container\",\n \"enum\": [\n \"ami\",\n \"ari\",\n \"aki\",\n \"bare\",\n \"ovf\"\n ],\n \"type\": \"string\"\n },\n \"created_at\": {\n \"description\": \"Date and time of image registration (READ-ONLY)\",\n \"type\": \"string\"\n },\n \"direct_url\": {\n \"description\": \"URL to access the image file kept in external store (READ-ONLY)\",\n \"type\": \"string\"\n },\n \"disk_format\": {\n \"description\": \"Format of the disk\",\n \"enum\": [\n \"ami\",\n \"ari\",\n \"aki\",\n \"vhd\",\n \"vmdk\",\n \"raw\",\n \"qcow2\",\n \"vdi\",\n \"iso\"\n ],\n \"type\": \"string\"\n },\n \"file\": {\n \"description\": \"(READ-ONLY)\",\n \"type\": \"string\"\n },\n \"id\": {\n \"description\": \"An identifier for the image\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"instance_uuid\": {\n \"description\": \"ID of instance used to create this image.\",\n \"type\": \"string\"\n },\n \"kernel_id\": {\n \"description\": \"ID of image stored in Glance that should be used as the kernel when booting an AMI-style image.\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"locations\": {\n \"description\": \"A set of URLs to access the image file kept in external store\",\n \"items\": {\n \"properties\": {\n \"metadata\": {\n \"type\": \"object\"\n },\n \"url\": {\n \"maxLength\": 255,\n \"type\": \"string\"\n }\n },\n \"required\": [\n \"url\",\n \"metadata\"\n ],\n \"type\": \"object\"\n },\n \"type\": \"array\"\n },\n \"min_disk\": {\n \"description\": \"Amount of disk space (in GB) required to boot image.\",\n \"type\": \"integer\"\n },\n \"min_ram\": {\n \"description\": \"Amount of ram (in MB) required to boot image.\",\n \"type\": \"integer\"\n },\n \"name\": {\n \"description\": \"Descriptive name for the image\",\n \"maxLength\": 255,\n \"type\": \"string\"\n },\n \"os_distro\": {\n \"description\": \"Common name of operating system distribution as specified in http:\/\/docs.openstack.org\/trunk\/openstack-compute\/admin\/content\/adding-images.html\",\n \"type\": \"string\"\n },\n \"os_version\": {\n \"description\": \"Operating system version as specified by the distributor\",\n \"type\": \"string\"\n },\n \"protected\": {\n \"description\": \"If true, image will not be deletable.\",\n \"type\": \"boolean\"\n },\n \"ramdisk_id\": {\n \"description\": \"ID of image stored in Glance that should be used as the ramdisk when booting an AMI-style image.\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"schema\": {\n \"description\": \"(READ-ONLY)\",\n \"type\": \"string\"\n },\n \"self\": {\n \"description\": \"(READ-ONLY)\",\n \"type\": \"string\"\n },\n \"size\": {\n \"description\": \"Size of image file in bytes (READ-ONLY)\",\n \"type\": \"integer\"\n },\n \"status\": {\n \"description\": \"Status of the image (READ-ONLY)\",\n \"enum\": [\n \"queued\",\n \"saving\",\n \"active\",\n \"killed\",\n \"deleted\",\n \"pending_delete\"\n ],\n \"type\": \"string\"\n },\n \"tags\": {\n \"description\": \"List of strings related to the image\",\n \"items\": {\n \"maxLength\": 255,\n \"type\": \"string\"\n },\n \"type\": \"array\"\n },\n \"updated_at\": {\n \"description\": \"Date and time of the last image modification (READ-ONLY)\",\n \"type\": \"string\"\n },\n \"visibility\": {\n \"description\": \"Scope of image accessibility\",\n \"enum\": [\n \"public\",\n \"private\"\n ],\n \"type\": \"string\"\n }\n },\n \"additionalProperties\": {\n \"type\": \"string\"\n },\n \"links\": [\n {\n \"href\": \"{self}\",\n \"rel\": \"self\"\n },\n {\n \"href\": \"{file}\",\n \"rel\": \"enclosure\"\n },\n {\n \"href\": \"{schema}\",\n \"rel\": \"describedby\"\n }\n ]\n },\n \"type\": \"array\"\n },\n \"next\": {\n \"type\": \"string\"\n },\n \"schema\": {\n \"type\": \"string\"\n }\n },\n \"links\": [\n {\n \"href\": \"{first}\",\n \"rel\": \"first\"\n },\n {\n \"href\": \"{next}\",\n \"rel\": \"next\"\n },\n {\n \"href\": \"{schema}\",\n \"rel\": \"describedby\"\n }\n ]\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"schemas/image", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get image schema", "description":"\n Gets a json-schema document that represents a single image entity. \n The following schema is just an example. Consider only the response to the API call as\n authoritative.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"name\": \"image\",\n \"properties\": {\n \"architecture\": {\n \"description\": \"Operating system architecture as specified in http:\/\/docs.openstack.org\/trunk\/openstack-compute\/admin\/content\/adding-images.html\",\n \"type\": \"string\"\n },\n \"checksum\": {\n \"description\": \"md5 hash of image contents. (READ-ONLY)\",\n \"maxLength\": 32,\n \"type\": \"string\"\n },\n \"container_format\": {\n \"description\": \"Format of the container\",\n \"enum\": [\n \"ami\",\n \"ari\",\n \"aki\",\n \"bare\",\n \"ovf\"\n ],\n \"type\": \"string\"\n },\n \"created_at\": {\n \"description\": \"Date and time of image registration (READ-ONLY)\",\n \"type\": \"string\"\n },\n \"direct_url\": {\n \"description\": \"URL to access the image file kept in external store (READ-ONLY)\",\n \"type\": \"string\"\n },\n \"disk_format\": {\n \"description\": \"Format of the disk\",\n \"enum\": [\n \"ami\",\n \"ari\",\n \"aki\",\n \"vhd\",\n \"vmdk\",\n \"raw\",\n \"qcow2\",\n \"vdi\",\n \"iso\"\n ],\n \"type\": \"string\"\n },\n \"file\": {\n \"description\": \"(READ-ONLY)\",\n \"type\": \"string\"\n },\n \"id\": {\n \"description\": \"An identifier for the image\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"instance_uuid\": {\n \"description\": \"ID of instance used to create this image.\",\n \"type\": \"string\"\n },\n \"kernel_id\": {\n \"description\": \"ID of image stored in Glance that should be used as the kernel when booting an AMI-style image.\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"locations\": {\n \"description\": \"A set of URLs to access the image file kept in external store\",\n \"items\": {\n \"properties\": {\n \"metadata\": {\n \"type\": \"object\"\n },\n \"url\": {\n \"maxLength\": 255,\n \"type\": \"string\"\n }\n },\n \"required\": [\n \"url\",\n \"metadata\"\n ],\n \"type\": \"object\"\n },\n \"type\": \"array\"\n },\n \"min_disk\": {\n \"description\": \"Amount of disk space (in GB) required to boot image.\",\n \"type\": \"integer\"\n },\n \"min_ram\": {\n \"description\": \"Amount of ram (in MB) required to boot image.\",\n \"type\": \"integer\"\n },\n \"name\": {\n \"description\": \"Descriptive name for the image\",\n \"maxLength\": 255,\n \"type\": \"string\"\n },\n \"os_distro\": {\n \"description\": \"Common name of operating system distribution as specified in http:\/\/docs.openstack.org\/trunk\/openstack-compute\/admin\/content\/adding-images.html\",\n \"type\": \"string\"\n },\n \"os_version\": {\n \"description\": \"Operating system version as specified by the distributor\",\n \"type\": \"string\"\n },\n \"protected\": {\n \"description\": \"If true, image will not be deletable.\",\n \"type\": \"boolean\"\n },\n \"ramdisk_id\": {\n \"description\": \"ID of image stored in Glance that should be used as the ramdisk when booting an AMI-style image.\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"schema\": {\n \"description\": \"(READ-ONLY)\",\n \"type\": \"string\"\n },\n \"self\": {\n \"description\": \"(READ-ONLY)\",\n \"type\": \"string\"\n },\n \"size\": {\n \"description\": \"Size of image file in bytes (READ-ONLY)\",\n \"type\": \"integer\"\n },\n \"status\": {\n \"description\": \"Status of the image (READ-ONLY)\",\n \"enum\": [\n \"queued\",\n \"saving\",\n \"active\",\n \"killed\",\n \"deleted\",\n \"pending_delete\"\n ],\n \"type\": \"string\"\n },\n \"tags\": {\n \"description\": \"List of strings related to the image\",\n \"items\": {\n \"maxLength\": 255,\n \"type\": \"string\"\n },\n \"type\": \"array\"\n },\n \"updated_at\": {\n \"description\": \"Date and time of the last image modification (READ-ONLY)\",\n \"type\": \"string\"\n },\n \"visibility\": {\n \"description\": \"Scope of image accessibility\",\n \"enum\": [\n \"public\",\n \"private\"\n ],\n \"type\": \"string\"\n }\n },\n \"additionalProperties\": {\n \"type\": \"string\"\n },\n \"links\": [\n {\n \"href\": \"{self}\",\n \"rel\": \"self\"\n },\n {\n \"href\": \"{file}\",\n \"rel\": \"enclosure\"\n },\n {\n \"href\": \"{schema}\",\n \"rel\": \"describedby\"\n }\n ]\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"404", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"schemas/members", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get image members schema", "description":"\n Gets a json-schema document that represents an image members entity (a container of member\n entities).\n The following schema is just an example. Consider only the response to the API call as\n authoritative.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"name\": \"members\",\n \"properties\": {\n \"members\": {\n \"items\": {\n \"name\": \"member\",\n \"properties\": {\n \"created_at\": {\n \"description\": \"Date and time of image member creation\",\n \"type\": \"string\"\n },\n \"image_id\": {\n \"description\": \"An identifier for the image\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"member_id\": {\n \"description\": \"An identifier for the image member (tenantId)\",\n \"type\": \"string\"\n },\n \"status\": {\n \"description\": \"The status of this image member\",\n \"enum\": [\n \"pending\",\n \"accepted\",\n \"rejected\"\n ],\n \"type\": \"string\"\n },\n \"updated_at\": {\n \"description\": \"Date and time of last modification of image member\",\n \"type\": \"string\"\n },\n \"schema\": {\n \"type\": \"string\"\n }\n }\n },\n \"type\": \"array\"\n },\n \"schema\": {\n \"type\": \"string\"\n }\n },\n \"links\": [\n {\n \"href\": \"{schema}\",\n \"rel\": \"describedby\"\n }\n ]\n}", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"schemas/member", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get image member schema", "description":"\n Gets a json-schema document that represents an image member entity.\n The following schema is just an example. Consider only the response to the API call as\n authoritative.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"name\": \"member\",\n \"properties\": {\n \"created_at\": {\n \"description\": \"Date and time of image member creation\",\n \"type\": \"string\"\n },\n \"image_id\": {\n \"description\": \"An identifier for the image\",\n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\",\n \"type\": \"string\"\n },\n \"member_id\": {\n \"description\": \"An identifier for the image member (tenantId)\",\n \"type\": \"string\"\n },\n \"status\": {\n \"description\": \"The status of this image member\",\n \"enum\": [\n \"pending\",\n \"accepted\",\n \"rejected\"\n ],\n \"type\": \"string\"\n },\n \"updated_at\": {\n \"description\": \"Date and time of last modification of image member\",\n \"type\": \"string\"\n },\n \"schema\": {\n \"type\": \"string\"\n }\n }\n}", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"schemas/tasks", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get tasks schema", "description":"\n Gets a json-schema document that represents a container of tasks entities.\n This operation returns a list of task entities. The following response is just an example. Consider the\n response to the API call as authoritative.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"links\": [\n {\n \"href\": \"{schema}\", \n \"rel\": \"describedby\"\n }\n ], \n \"name\": \"tasks\", \n \"properties\": {\n \"schema\": {\n \"type\": \"string\"\n }, \n \"tasks\": {\n \"items\": {\n \"name\": \"task\", \n \"properties\": {\n \"created_at\": {\n \"description\": \"Datetime when this resource was created\", \n \"type\": \"string\"\n }, \n \"expires_at\": {\n \"description\": \"Datetime when this resource would be subject to removal\", \n \"type\": \"string\"\n }, \n \"id\": {\n \"description\": \"An identifier for the task\", \n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\", \n \"type\": \"string\"\n }, \n \"owner\": {\n \"description\": \"An identifier for the owner of this task\", \n \"type\": \"string\"\n }, \n \"schema\": {\n \"type\": \"string\"\n }, \n \"self\": {\n \"type\": \"string\"\n }, \n \"status\": {\n \"description\": \"The current status of this task\", \n \"enum\": [\n \"pending\", \n \"processing\", \n \"success\", \n \"failure\"\n ], \n \"type\": \"string\"\n }, \n \"type\": {\n \"description\": \"The type of task represented by this content\", \n \"enum\": [\n \"import\", \n \"export\"\n ], \n \"type\": \"string\"\n }, \n \"updated_at\": {\n \"description\": \"Datetime when this resource was updated\", \n \"type\": \"string\"\n }\n }\n }, \n \"type\": \"array\"\n }\n }\n}\n", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] }, { "name":"", "description":"", "uriTemplate":"schemas/task", "parameters":{  }, "headers":{  }, "actions":[ { "method":"GET", "name":"Get task schema", "description":"\n Gets a json-schema document that represents an task entity.\n This operation returns the specified task entity. The following response is just an example. Consider the\n response to the API call as authoritative.\n", "parameters":{  }, "headers":{  }, "examples":[ { "name":"", "description":"", "requests":[  ], "responses":[ { "name":"200", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"{\n \"name\": \"task\", \n \"properties\": {\n \"created_at\": {\n \"description\": \"Datetime when this resource was created\", \n \"type\": \"string\"\n }, \n \"expires_at\": {\n \"description\": \"Datetime when this resource would be subject to removal\", \n \"type\": \"string\"\n }, \n \"id\": {\n \"description\": \"An identifier for the task\", \n \"pattern\": \"^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$\", \n \"type\": \"string\"\n }, \n \"input\": {\n \"description\": \"The parameters required by task, JSON blob\", \n \"type\": \"object\"\n }, \n \"message\": {\n \"description\": \"Human-readable informative message only included when appropriate (usually on failure)\", \n \"type\": \"string\"\n }, \n \"owner\": {\n \"description\": \"An identifier for the owner of this task\", \n \"type\": \"string\"\n }, \n \"result\": {\n \"description\": \"The result of current task, JSON blob\", \n \"type\": \"object\"\n }, \n \"schema\": {\n \"type\": \"string\"\n }, \n \"self\": {\n \"type\": \"string\"\n }, \n \"status\": {\n \"description\": \"The current status of this task\", \n \"enum\": [\n \"pending\", \n \"processing\", \n \"success\", \n \"failure\"\n ], \n \"type\": \"string\"\n }, \n \"type\": {\n \"description\": \"The type of task represented by this content\", \n \"enum\": [\n \"import\", \n \"export\"\n ], \n \"type\": \"string\"\n }, \n \"updated_at\": {\n \"description\": \"Datetime when this resource was updated\", \n \"type\": \"string\"\n }\n }\n}", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"400", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"401", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"403", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"405", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"413", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"503", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/xml" } }, "body":"", "schema":"" }, { "name":"500", "description":"", "headers":{ "Content-Type":{ "value":"application/json" } }, "body":"", "schema":"" } ] } ] } ] } ] } ] }