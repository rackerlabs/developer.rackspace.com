<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xml:id="API_Operations" version="5.0" role="api-reference">
	<title>Cloud Identity API v2.0 for Service Developers</title>
	<para>The operations described in this chapter allow service
		developers to get and validate access tokens and to manage
		users, tenants, roles, and service endpoints. </para>
	<!--<para>Most calls to the Admin API require authentication. Two kinds
		of calls are available without authentication:</para>
		<itemizedlist spacing="compact">
			<listitem>
				<para>calls to discover the service, such as obtaining version info, the WADL contract, and the API Developer Guide
				 </para>
			</listitem>
			<listitem>
				<para>calls to authenticate and get a token</para>
			</listitem>
		</itemizedlist>
		</para>
	<para>Authentication is performed by passing a valid token in the
			<code>X-Auth-Token</code> header of the client's request to the identity service. 
		If the identity service verifies that the token has (or belongs to a
		user that has) the <code>Admin</code> role, then administrator-level functions can be performed. </para>
	<note>
		<para>
			For information about obtaining a service account, contact 
			<link xlink:href="mailto:auth@lists.rackspace.com">auth@lists.rackspace.com</link>. 
		</para>
	</note>
	<table rules="all">
		<caption>Authentication Header</caption>
		<thead>
			<tr>
				<td>Header Type</td>
				<td>Name</td>
				<td>Sample Value</td>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>HTTP/1.1 Request</td>
				<td><code>X-Auth-Token</code></td>
				<td>
					<para>aaaaaaaa-1111-bbbb-2222-ccc3d5e6f777</para>
				</td>
			</tr>
		</tbody>
	</table>
	<para>
		Some of these operations require only the core authentication service API v2.0 and some require extensions to the API.
		If an extension is required, it is included in Rackspace's implementation of the Keystone Identity Service; 
		issuing the calls as described here will use API extensions as needed.
	</para>
	-->
	<!-- USERS -->
	<section xml:id="User_Calls">
		<title>Users</title>
		<!--<para>The operations described in this section allow service developers to manage users.</para>
		<note>
			<para>Some of the functionality described in this section is provided by the <code>OS-KSADM</code>,
					<code>RAX-AUTH</code>, and <code>RAX-KSKEY</code> extensions to the core Identity API. You can learn
				more about API extensions at 
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/v2.0/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/v2.0/src/docbkx/</link>. </para>
		</note>-->
		<!--- this section comes from 4 WADLs: core identity-admin + extensions OS-KSADM-admin & RAX-KSKEY-admin & RAX-AUTH -->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list users -->
		    <wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/identity-admin.wadl#users">
				<wadl:method href="listUsers"/>
			</wadl:resource>
			<!-- get user by name (and id and email) -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#users">
				<wadl:method href="getUserByName"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#userid">
				<wadl:method href="getUserById"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#users">
				<wadl:method href="getUserByEmail"/>
			</wadl:resource>
			<!-- add user -->
		    <wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/identity-admin.wadl#users">
				<wadl:method href="addUser"/>
			</wadl:resource>
			<!-- update user -->
		    <wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/identity-admin.wadl#userById">
				<wadl:method href="updateUser">			
				</wadl:method>
			</wadl:resource>
			<!-- delete user -->
		    <wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/identity-admin.wadl#userById">
				<wadl:method href="deleteUser">
				</wadl:method>
			</wadl:resource>
			<!-- get domains for user -->
		    <wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/identity-admin.wadl#user_accessible_domains" >
				<wadl:method href="getAccessibleDomainsForUser"/>
			</wadl:resource>
			<!-- get domain endpoints for user -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#user_accessible_domain_endpoints" >
				<wadl:method href="getAccesibleDomainEndpointsForUser"/>
			</wadl:resource>
			<!-- add API key credential -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#userCredentials">
				<wadl:method href="addUserCredential"/>
			</wadl:resource>
			<!-- list API key credentials -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#userCredentials">
				<wadl:method href="listCredentials"/>
			</wadl:resource>
			<!-- update API key credentials -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-KSKEY-admin.wadl#userCredentialsByType">
				<wadl:method href="updateUserCredential"/>
			</wadl:resource>
			<!-- delete API key credentials -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-KSKEY-admin.wadl#userCredentialsByType">
				<wadl:method href="deleteUserCredential"/>
			</wadl:resource>
			<!-- get user's API key credentials -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-KSKEY-admin.wadl#userCredentialsByType">
				<wadl:method href="getUserCredential"/>
			</wadl:resource>
			<!-- reset user's API key credentials -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#reset_apikey_credentials" >
				<wadl:method href="resetUserAPIKeyCredentials"/>
			</wadl:resource>
			<!-- list user who is Admin user -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#user_user_admins" >
				<wadl:method href="getUserAdmin"/>
			</wadl:resource>
			
		</wadl:resources>
	</section>
	
	<!-- GROUPS -->
	<section xml:id="Group_Calls">
		<title>Groups</title>
		<!--<para>The operations described in this section allow service developers to manage groups.</para>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>RAX-GRPADM</code> and <code>RAX-KSGRP</code> extensions to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>-->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/RAX-GRPADM.wadl#groups"/>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/RAX-GRPADM.wadl#group"/>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-KSGRP-admin.wadl#user-groups-RAX-KSGRP">
				<wadl:method href="listUserGroups"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/RAX-GRPADM.wadl#user"/>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/RAX-GRPADM.wadl#users"/>			
		</wadl:resources>
	</section>
	
	<!-- ROLES -->
	<section xml:id="Role_Calls">
		<title>Roles</title>
		<!--<para>The operations described in this section allow service developers to manage roles.</para>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>OS-KSADM</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>-->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list roles -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#roles">
				<wadl:method href="listRoles"/>
			</wadl:resource>
			<!-- add a role globally -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#roles">
				<wadl:method href="addRole"/>
			</wadl:resource>
			<!-- get a global role -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#roleId">
				<wadl:method href="getRole"/>
			</wadl:resource>
			<!-- delete a global role -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#roleId">
				<wadl:method href="deleteRole"/>
			</wadl:resource>
			<!-- add a global role to a user -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#userRoleById">
				<wadl:method href="addUserRole"/>
			</wadl:resource>
			<!-- delete a global role from a user -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#userRoleById">
				<wadl:method href="deleteUserRole"/>
			</wadl:resource>
			<!-- list users with role -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#roleIdRAXAUTHUsers">
				<wadl:method href="getUsersWithRole"/>
			</wadl:resource>
			<!-- list global roles available to a user -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#userRoles">
				<wadl:method href="listUserGlobalRoles"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- TOKENS -->
	<section xml:id="Token_Calls">
		<title>Tokens</title>
		<!--<para>The operations described in this section allow service developers to get and validate access tokens.</para>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>RAX-AUTH</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>-->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#tokens">
				<!-- authenticate -->
				<wadl:method href="authenticate"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#tokenById">
				<!-- validate token -->
				<wadl:method href="validateToken">
				<wadl:doc>
					<tip>
						<para>You can use this call to return information about an impersonator:
							a Racker performing operations on behalf of a user. 
						</para>
						<para>For information about how an impersonator can use a validated token,
							see <xref linkend="Impersonation_Calls" />. 
						</para>
					</tip>
				</wadl:doc>
				</wadl:method>
				<!-- check token -->
				<wadl:method href="checkToken"/>
				<!-- revoke token -->
				<wadl:method href="revokeToken"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#endpointsForToken">
				<!-- list endpoints for token -->
				<wadl:method href="listEndpointsForToken"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#tokens">
				<!-- authenticate as Racker -->
				<wadl:method href="authenticateAsRacker"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#federation">
				<!-- federation - get token by SAML -->
				<wadl:method href="getTokenBySAML"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- TENANTS -->
	<section xml:id="Tenant_Calls">
		<title>Tenants</title>
		<para>The operations described in this section allow service developers to manage tenants.</para>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#tenants">
				<wadl:method href="addTenant"/>
				<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#tenantById">
					<wadl:method href="updateTenant"/>
					<wadl:method href="deleteTenant"/>
					<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#usersForTenant">
						<wadl:method href="listUsersForTenant"/>
						<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#userSpecificRoleForTenant">
							<wadl:method href="addRolesToUserOnTenant"/>
							<wadl:method href="deleteRoleFromUserOnTenant"/>
						</wadl:resource>
					</wadl:resource>
				</wadl:resource>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#tenants">
				<wadl:method href="listTenants"/>
				<wadl:method href="getTenantByName"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#tenantById">
				<wadl:method href="getTenantById"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/identity-admin.wadl#userRolesForTenant">
				<wadl:method href="listRolesForUserOnTenant">
					<wadl:doc>
						<important>
							<para>Rackspace's implementation of the OpenStack Identity Service v2.0 
								supports <code>GET v2.0/tenants/{tenantId}/users/{userId}/roles</code>
								for internal users only.  Customers will not have access to this call.
							</para>
						</important>
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- ENDPOINT TEMPLATES -->
	<section xml:id="Endpoint_Template_Calls">
		<title>Endpoint templates</title>
		<!--<note>
			<para>Some of the functionality described in this section is
				provided by the <code>OS-KSCATALOG</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>-->
		 
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpointTemplates">
				<wadl:method href="listEndpointTemplates"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpointTemplates">
				<wadl:method href="addEndpointTemplate"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpointTemplateId">
				<wadl:method href="getEndpointTemplate"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpointTemplateId">
				<wadl:method href="deleteEndpointTemplate"/>
			</wadl:resource>
		</wadl:resources>
		
	</section>
	
	<!-- ENDPOINTS -->
	<section xml:id="Endpoint_Calls">
		<title>Endpoints</title>
		<!--<note>
			<para>Some of the functionality described in this section is
				provided by the <code>OS-KSCATALOG</code> extension to the
				core Identity API. You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>-->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpoints">
				<wadl:method href="listEndpoints"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpoints">
				<wadl:method href="addEndpoint"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpoint">
				<wadl:method href="getEndpoint"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSCATALOG-admin.wadl#endpoint">
				<wadl:method href="deleteEndpoint"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- SECRETS -->
	<section xml:id="Secret_Calls">
		<title>Secret questions and answers</title>
		<!--<para>The operations described in this section allow service developers to manage 
			secret questions and answers. Secret questions and answers can be used to identify a user to a support Racker via telephone.</para>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>RAX-AUTH</code> and <code>RAX-KSQA</code> extensions to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>-->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-KSQA-admin.wadl#secretqa">
				<wadl:method href="getUserSecretQA"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-KSQA-admin.wadl#add_user_secretqa">
				<wadl:method href="getUserSecretQAs"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-KSQA-admin.wadl#secretqa">
				<wadl:method href="updateUserSecretQA"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-KSQA-admin.wadl#add_user_secretqa">
				<wadl:method href="saveUserSecretQA"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-KSQA-admin.wadl#questions">
				<wadl:method href="getQuestions"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-KSQA-admin.wadl#question">
				<wadl:method href="getQuestion"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-KSQA-admin.wadl#questions">
				<wadl:method href="createQuestion"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-KSQA-admin.wadl#question">
				<wadl:method href="updateQuestion"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-KSQA-admin.wadl#question">
				<wadl:method href="deleteQuestion"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- IMPERSONATIONS -->
	<section xml:id="Impersonation_Calls">
		<title>Impersonations</title>
		<!--<para>The operations described in this section allow service developers to manage Rackers' impersonations of 
			users for diagnostic purposes.</para>
		<figure xml:id="impersonation">
			<title>A Racker issues one POST with the Racker's own credentials, then a second POST identifying the user to be impersonated.
			</title>
			<!-\- this is Joe Savak's drawing, 
				from https://docs.google.com/a/rackspace.com/drawings/d/1fxomVwZRmWT6NYmhTFwj9VMfQ_NQHLVfpfb6474xnoc/edit 
			    PNG fits PDF width at 55%, 710x477
			-\->
			<mediaobject>
				<imageobject>
					<imagedata fileref="../figures/auth-impersonation.png" format="PNG" align="center" />
				</imageobject>
			</mediaobject>
		</figure>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>RAX-AUTH</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>-->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#impersonation-tokens">
				<wadl:method href="impersonateUser">
				<wadl:doc>
				</wadl:doc>
				</wadl:method>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- RATE LIMITING -->
	<section xml:id="Ratelimiting_Calls">
		<title>Rate limits</title>
		<!--<para>The operations described in this section allow service developers to manage rate limits.</para>
		<para>
			The rate limiting logic is based on a fixed-size bucket algorithm.
		</para>
		<para>Rate limiting is configured in a database which is accessible
			via a separate endpoint. To update the rate limiting
			configuration, change the values of three parameters in
			the rate limiting database. Optionally, a fourth parameter
			can be used to exclude (whitelist) some requests so that
			no rate limits apply to them. 
		</para>
			<table rules="all">
				<caption>Rate Limiting Configuration
					Parameters</caption>
				<col width="38%"/>
				<col width="16%"/>
				<col width="38%"/>
				<col width="8%"/>
				<thead>
					<tr>
						<th>Parameter</th>
						<th>Type</th>
						<th>Description</th>
						<th>Default Value</th>
					</tr>
				</thead>				
				<tbody>
					<tr>
						<td><code>rate.limit.interval.duration</code></td>
						<td>Integer</td>
						<td>Size (in seconds) of the time interval
							within which to limit the number of
							requests to the maximum defined by
								<code>rate.limit.threshold</code>.</td>
						<td>1</td>
					</tr>
					<tr>
						<td><code>rate.limit.threshold</code></td>
						<td>Integer</td>
						<td>Number of requests allowed within the
							interval defined by
								<code>rate.limit.interval.duration</code>.</td>
						<td>50</td>
					</tr>
					<tr>
						<td><code>rate.limit.enabled</code></td>
						<td>Boolean</td>
						<td>Enable (true) or disable (false) all rate
							limiting functionality.</td>
						<td>false</td>
					</tr>
					<tr>
						<td><code>rate.limit.whitelist</code></td>
						<td>Comma-delimited list</td>
						<td>List of identifiers for which the rate
							should not be limited</td>
						<td><emphasis role="italic"
							>none</emphasis></td>
					</tr>
				</tbody>
			</table>
		<para>For example, if
				<code>rate.limit.enabled=true</code>,
				<code>rate.limit.threshold=10</code>, and
				<code>rate.limit.interval.duration=60</code>, then the
			service call rate will be limited to 10 requests every 60
			seconds. Users who issue more than 10 requests per 60
			seconds must wait until their bucket is cleared.
		</para>
		<para>
			For example, if  
			<code>rate.limit.whitelist=192.168.1.105,user:alex,192.168.1.243</code>,
			then two IP addresses and a user named "alex" are whitelisted and therefore not subject to the general rate limits.
		</para>
		<figure>
		<title>
			After hitting the Auth endpoint, a request hits the rate limiting filter; if the filter determines that rate limits apply, the rate limit module is called.
		</title>
		<!-\- this is Alex Silva's drawing, 
				from http://red.rackspace.com/display/auth/Cloud+Auth+Rate+Limiting 
			    PNG fits PDF width 521x389
			-\->
		<mediaobject>
			<imageobject>
				<imagedata fileref="../figures/auth-ratelimiting-flow.png" format="PNG" align="center" />
			</imageobject>
		</mediaobject>
		</figure>
		<para>
			Request keys are at the core of the rate limiting functionality. For each request for a resource, 
			these unique request identifiers relate the request to the user who submitted the request. The key-generation algorithm is illustrated below:
		</para>
		<figure>
			<title> A request key for rate limiting can be generated from an IP
				address, a header value, or a valid token. </title>
			<!-\- this is Alex Silva's drawing, 
				from http://red.rackspace.com/display/auth/Cloud+Auth+Rate+Limiting 
			    PNG fits PDF width at 521x317
			-\->
			<mediaobject>
				<imageobject>
					<imagedata fileref="../figures/auth-ratelimiting-keygeneration-20.png" format="PNG" align="center" />
				</imageobject>
			</mediaobject>
		</figure>
		<note>
			<para>All API calls are rate limited, including API calls used to update the rate limiting configuration.
			</para>
			<para>When a request is denied for rate limits, 30 seconds should pass before the rate limits are reset.
			</para>
			<para>When no limit group is specified for a user, that user is assigned to the <code>default</code> group.
			</para>
		</note>-->
		<!--- this section comes from 1 WADL: RAX-RATELIMIT-admin -->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list rate limit for 1 user -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-RATELIMIT-admin.wadl#rtadm">
				<wadl:method href="getRateLimit"/>
			</wadl:resource>
			<!-- change rate limit for 1 user -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-RATELIMIT-admin.wadl#rtadm">
				<wadl:method href="updateRateLimit"/>
			</wadl:resource>
			<!-- add 1 entry to rate limit whitelist -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-RATELIMIT-admin.wadl#rtadm">
				<wadl:method href="addWhitelistEntry"/>
			</wadl:resource>
			<!-- delete 1 entry from rate limit whitelist -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-RATELIMIT-admin.wadl#rtadm">
				<wadl:method href="deleteWhitelistEntry"/>
			</wadl:resource>
			<!-- replace entire rate limit whitelist -->
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/RAX-RATELIMIT-admin.wadl#rtadm">
				<wadl:method href="replaceWhitelist"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- DOMAINS -->
	<section xml:id="Domain_Calls">
		<title>Domains</title>
		<para>The operations described in this section allow service developers to manage domains.</para>
		<para>A domain establishes an administrative boundary for a customer and a container for a customer's tenants (accounts) and users.</para>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>RAX-AUTH</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domains">
				<wadl:method href="getDomains">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Create a Domain: Creates a domain. Clients must specify the domain id in the request body. -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domains">
				<wadl:method href="createDomain">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Create a Domain: Creates a domain. Clients must specify the domain id in the request body. -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId} -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain">
				<wadl:method href="getDomain">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Get a Domain: Gets a domain. -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId} -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain">
				<wadl:method href="updateDomain">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Update a Domain: Updates a domain. -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId} -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain">
				<wadl:method href="deleteDomain">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Deletes a Domain: Deletes a domain. This request will only succeed if there are no entities that exist in this domain e.g users, tenants. A client will have t... -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId}/endpoints -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain_endpoints">
				<wadl:method href="getDomainEndpoints">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Get Endpoints for Domain: Gets endpoints restricted to a domain. -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId}/users -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain_users">
				<wadl:method href="getDomainUsers">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Get Users in Domain: Get users in a domain. -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId}/users/{userId} -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain_user">
				<wadl:method href="addUserToDomain">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Add User to Domain: Add a user to a domain. A user can only exist in one domain at a time. So when you add a user to a domain, the user is automatically removed... -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId}/tenants -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain_tenants">
				<wadl:method href="getDomainTenants">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Get Tenants in Domain: Get tenants in a domain. -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
			<!-- Path: /v2.0/RAX-AUTH/domains/{domainId}/tenants/{tenantId} -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#domain_tenant">
				<wadl:method href="addTenantToDomain">
					<wadl:doc xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns="http://docbook.org/ns/docbook">
						<!-- DocBook Markup is legal here -->
						<!-- Add Tenant to Domain: Add a tenant to a domain. A tenant can only exist in one domain at a time. So when you add a tenant to a domain, it is automatically removed... -->
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- REGIONS -->
	<section xml:id="Region_Calls">
		<title>Regions</title>
		<para>The operations described in this section allow service developers to manage the regions associated with services.</para>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>RAX-AUTH</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
				https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list regions -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#regions">
				<wadl:method href="getRegions">
				</wadl:method>
			</wadl:resource>
			<!-- create region -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#regions">
				<wadl:method href="createRegion">
				</wadl:method>
			</wadl:resource>
			<!-- get region -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#region">
				<wadl:method href="getRegion">
				</wadl:method>
			</wadl:resource>
			<!-- update region -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#region">
				<wadl:method href="updateRegion">
				</wadl:method>
			</wadl:resource>
			<!-- delete region -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#region">
				<wadl:method href="deleteRegion">
				</wadl:method>
			</wadl:resource>
			<!-- list default region for a service -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#default-region-services">
				<wadl:method href="getDefaultRegionServices">
				</wadl:method>
			</wadl:resource>
			<!-- specify default region for a service -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#default-region-services">
				<wadl:method href="setDefaultRegionServices">
				</wadl:method>
			</wadl:resource>
		</wadl:resources>
		</section>
	
	<!-- POLICIES -->
	<section xml:id="Policy_Calls">
		<title>Policies</title>
		<para>The operations described in this section allow service developers to manage policies.</para>
		<note>
			<para>Some of the functionality described in this section is
				provided by the <code>RAX-AUTH</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- get policies; create policy -->
			<!-- get/update/delete policy -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#policies" />
			<!-- get/update/delete policy -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#policy" />
			<!-- get complete content (blob) of a policy -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#policyBlob" >
				<wadl:method href="getPolicyBlob" />
			</wadl:resource>
		</wadl:resources>
	</section>
		
	<!-- SERVICE APIS -->
	<section xml:id="Service_API_Calls">
		<title>Service APIs</title>
		<para>The operations described in this section allow service developers to manage service APIs 
			and their capabilities.</para>
		<important>
			<para>As of February 8, 2013, these Service API operations are planned but not implemented. 
				For more information, contact Joe Savak or Angela Molock.
			</para>
		</important>
		<note>
			<para>Some of the functionality described in this section is provided by the <code>RAX-AUTH</code> 
				extension to the core Identity API.  You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list available service APIs -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#service_apis" />
			<!-- get/update/remove capabilities of service APIs -->
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#service_api_capabilities" />
		</wadl:resources>
	</section>
	
	<!-- SERVICE OPERATIONS -->
	<section xml:id="Service_Calls">
		<title>Service operations</title>
		<para>The operations described in this section allow service developers to manage services.  These
		services correspond to the OpenStack Keystone services.</para>
		<note>
			<para>The functionality described in this section is provided by the <code>OS-KSADM</code> 
				extension to the core Identity API.  You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#services">
				<wadl:method href="listServices"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#services">
				<wadl:method href="addService"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#serviceId">
				<wadl:method href="getService"/>
			</wadl:resource>
			<wadl:resource href="http://git.openstack.org/cgit/openstack/api-site/plain/api-ref/src/wadls/identity-api/src/v2.0/wadl/OS-KSADM-admin.wadl#serviceId">
				<wadl:method href="deleteService"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	
	<!-- MULTIFACTOR OPERATIONS -->
	<section xml:id="Multifactor_Calls">
		<title>Multi factor operations</title>
		<para>The operations described in this section allow service developers to manage multi factor authentication.  To use a 
			mobile device for multi factor authentication, use the API operations in this section to do the following:</para>
		<para><itemizedlist>
			<listitem><para>Create a mobile to be used for authentication.</para></listitem>
			<listitem><para>Request that a verification code be sent to the phone.</para></listitem>
			<listitem><para>Verify receipt of the verification code.</para></listitem>
			<listitem><para>Enable multi factor authentication for the phone.</para></listitem>
		</itemizedlist></para>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#multifactor-mobile-phones">
				<wadl:method href="createMobilePhone"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#multifactor-vcode">
				<wadl:method href="sendVerifyCode"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#multifactor-verify">
				<wadl:method href="verifyDevice"/>
			</wadl:resource>
			<wadl:resource href="https://github.rackspace.com/IX/auth-2.0/raw/master/src/wadl/RAX-AUTH.wadl#multifactor">
				<wadl:method href="updateMultifactorSettings"/>
			</wadl:resource>
		</wadl:resources>
	</section>
</chapter>

