#!/bin/bash

HOSTPORT=4000

while getopts :p:h OPT; do
  case ${OPT} in
    p)
      HOSTPORT=${OPTARG}
      ;;
    h)
      echo "Usage: script/preview [-p PORT]"
      echo
      echo " -p PORT  Change the host port used to serve the site. Default: ${HOSTPORT}"
      exit 0
      ;;
    \?)
      echo "Unrecognized option: ${OPTARG}" >&2
      exit 1
      ;;
    :)
      echo "Option ${OPTARG} requires an argument." >&2
      exit 1
      ;;
  esac
done

ROOT=$(cd $(dirname $0)/.. && pwd)
source ${ROOT}/script/common/yaks.sh

TARGET=${ROOT}/_site

# Create the output directory if necessary. If a previous run's output is already there, ensure
# that the wait loop below has something to look for.
mkdir -p ${TARGET}
rm -f ${TARGET}/index.html

docker run \
  --interactive=true --tty=true --detach=true \
  --volume=${ROOT}/src/docs:/home/publisher/src-sphinx:ro \
  --volume=${ROOT}/src/site_source:/home/publisher/src-jekyll:ro \
  --volume=${ROOT}/src/site_source/_devconfig.yml:/home/publisher/config/_devconfig.yml:ro \
  --volume=${TARGET}:/home/publisher/_site \
  --publish=${HOSTPORT}:4000 \
  --name=preview \
  devsite/src2html \
  /home/publisher/scripts/preview.sh

if has open; then
  autoopen()
  {
    # Wait for the build to complete.
    for TRY in $(seq 0 120); do
      [ -f "${TARGET}/index.html" ] && break
      sleep 1
    done

    # Timeout.
    [ "${TRY}" = "120" ] && return

    # Fudge factor to wait for serve to kick in after the generation has completed.
    sleep 3

    DOCKERHOST=$(boot2docker ip 2>/dev/null)
    echo "opening http://${DOCKERHOST}:${HOSTPORT}/"
    open "http://${DOCKERHOST}:${HOSTPORT}/"
  }

  autoopen &
fi

docker attach preview
echo "Shutting down."
docker kill preview >/dev/null
docker rm preview >/dev/null
